Let me provide a comprehensive overview of each scanner layer, their purposes, data requirements, and what they should update:

  Scanner Pipeline Overview

  Layer 0: Static Universe Scanner

  Purpose: Build the foundational universe of all potentially tradable US equities and ETFs

  What it does:
  - Fetches all tradable assets from Alpaca API
  - Applies basic filters (exchange, asset class, ticker patterns)
  - Excludes OTC, warrants, rights, convertibles, bankrupt stocks

  Data Requirements:
  - No database data needed (first layer)
  - Alpaca API connection

  Data Downloaded/Changed:
  - Downloads: Complete list of assets from Alpaca
  - Archives: Raw asset data to data lake
  - Database Updates:
    - Populates/updates companies table with basic info (symbol, name, exchange, quote_type)
    - Sets all layer flags to False initially (layer1_qualified, layer2_qualified, layer3_qualified)
    - Sets initial scores to 0.0 (liquidity_score, catalyst_score, premarket_score)

  Current Status: ✅ Already updates database

  ---
  Layer 1: Liquidity Filter

  Purpose: Filter down to ~1,500 most liquid symbols suitable for trading

  What it does:
  - Calculates average dollar volume over lookback period (20 days)
  - Filters by minimum dollar volume ($5M default)
  - Filters by price range ($1-$2000)
  - Ranks by liquidity score

  Data Requirements:
  - Market data from database (close prices, volumes)
  - Uses market_data view/table
  - Input symbols from Layer 0

  Data Downloaded/Changed:
  - Downloads: None (uses existing market data)
  - Database Updates SHOULD include:
    - Set layer1_qualified=True for passing symbols
    - Update liquidity_score for all evaluated symbols
    - Set layer1_updated timestamp

  Current Status: ❌ Only saves to JSON, no database updates

  ---
  Layer 1.5: Strategy Affinity Filter

  Purpose: Further refine to ~500 symbols based on strategy compatibility and market regime

  What it does:
  - Evaluates symbols for momentum/mean-reversion characteristics
  - Considers current market regime (bull/bear/neutral)
  - Applies strategy-specific filters based on configuration

  Data Requirements:
  - Market data for technical analysis
  - Historical price data for regime detection
  - Configuration file: priority_boosts.yaml (currently missing)

  Data Downloaded/Changed:
  - Downloads: None (uses existing market data)
  - Database Updates SHOULD include:
    - Maintain layer1_qualified=True for passing symbols
    - Consider adding: strategy_affinity_score column
    - Set layer1_updated timestamp (or add layer1_5_updated)

  Current Status: ❌ Only saves to JSON, missing config file

  ---
  Layer 2: Catalyst Orchestrator

  Purpose: Identify symbols with active catalysts (news, volume spikes, technical patterns)

  What it does:
  - Runs multiple sub-scanners in parallel:
    - Volume Scanner: Unusual volume detection
    - Technical Scanner: Pattern recognition
    - News Scanner: Recent news sentiment
    - Earnings Scanner: Earnings events
    - Social Scanner: Social media sentiment
    - Options Scanner: Unusual options activity
    - Sector Scanner: Sector momentum
  - Aggregates scores from all scanners
  - Filters by minimum catalyst score

  Data Requirements:
  - Market data (prices, volumes)
  - News data
  - Social sentiment data
  - Options flow data
  - Earnings calendar

  Data Downloaded/Changed:
  - Downloads: May fetch fresh news/social data if not cached
  - Database Updates SHOULD include:
    - Set layer2_qualified=True for symbols with catalysts
    - Update catalyst_score based on aggregate scores
    - Set layer2_updated timestamp
    - Could store catalyst details in JSON column

  Current Status: ❌ Only returns results, no database updates

  ---
  Layer 3: Pre-market/Real-time Scanner

  Purpose: Final real-time filtering for immediate trading opportunities

  What it does:
  - Pre-market (4:00-9:30 AM ET): Scans pre-market movers
  - Market hours: Real-time momentum and liquidity scanning
  - Calculates relative volume (RVOL)
  - Monitors bid-ask spreads
  - Ranks by composite score

  Data Requirements:
  - Real-time or near real-time market data
  - Pre-market quotes
  - Current bid/ask spreads

  Data Downloaded/Changed:
  - Downloads: Real-time data from market data providers
  - Database Updates SHOULD include:
    - Set layer3_qualified=True for final opportunities
    - Update premarket_score or rvol
    - Set layer3_updated timestamp
    - Update current_price if available

  Current Status: ❌ Only returns opportunities, no database updates

  ---
  Summary of Required Database Columns

  Existing columns in companies table:
  - layer1_qualified, layer2_qualified, layer3_qualified (Boolean)
  - layer1_updated, layer2_updated, layer3_updated (DateTime)
  - liquidity_score, catalyst_score, premarket_score (Float)
  - rvol (Float)

  Potential new columns to consider:
  - strategy_affinity_score (Float) - for Layer 1.5
  - layer1_5_qualified (Boolean) - if we want to track Layer 1.5 separately
  - layer1_5_updated (DateTime) - if tracking separately
  - catalyst_details (JSON) - to store which catalysts triggered

  Each layer should update the database to maintain a complete audit trail of which symbols passed each screening level and why.
