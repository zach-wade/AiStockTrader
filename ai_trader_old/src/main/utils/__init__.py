"""
AI Trader Utilities Package

Comprehensive utilities for the AI trader application, organized into focused subpackages.
"""

# Core utilities
# Factory utilities
# from .factories import (
#     make_data_fetcher,
#     UtilityManager
# )
# API utilities
from .api import managed_aiohttp_session, managed_httpx_client

# Application utilities
from .app import (  # Workflow management removed - using HistoricalManager directly; Validation utilities; Context management; CLI utilities
    AppConfigValidator,
    AppContextError,
    CLIAppConfig,
    ConfigValidationError,
    StandardAppContext,
    StandardCLIHandler,
    ValidationResult,
    async_command,
    create_app_context,
    create_cli_app,
    create_data_pipeline_app,
    create_training_app,
    create_validation_app,
    ensure_critical_config,
    error_message,
    info_message,
    managed_app_context,
    success_message,
    validate_app_startup_config,
    validate_data_pipeline_config,
    validate_trading_config,
    warning_message,
)

# App factory utilities
from .app_factory import create_event_driven_app, run_event_driven_app

# Authentication utilities
from .auth import (
    CredentialType,
    CredentialValidator,
    ValidationResult,
    generate_secure_credential,
    get_global_validator,
    validate_credential,
)

# Cache utilities
from .cache import (  # Background Tasks; Cache backends; Cache models; Key generation; Metrics; Cache types; Compression
    BackgroundTasksService,
    CacheBackend,
    CacheEntry,
    CacheKeyGenerator,
    CacheMetricsService,
    CacheStats,
    CacheTier,
    CacheType,
    CompressionService,
    CompressionType,
    MemoryBackend,
    RedisBackend,
    generate_custom_key,
    generate_features_key,
    generate_ohlcv_key,
    generate_quotes_key,
    get_key_generator,
    set_key_generator,
)

# Configuration utilities
from .config import (  # Configuration optimization; Configuration wrapper
    ConfigFormat,
    ConfigOptimizer,
    ConfigParameter,
    ConfigSchema,
    ConfigurationWrapper,
    ConfigValidationError,
    OptimizationResult,
    OptimizationStrategy,
    OptimizationTarget,
    ParameterConstraint,
    ParameterType,
    create_api_schema,
    create_basic_schema,
    create_cache_parameters,
    create_config_schema,
    create_database_parameters,
    create_database_schema,
    create_monitoring_parameters,
    create_network_parameters,
    create_performance_parameters,
    ensure_global_config,
    get_config_value,
    get_global_config,
    get_global_optimizer,
    has_config_key,
    init_global_config,
    is_global_config_initialized,
    load_config,
    reset_global_config,
    set_config_value,
    set_global_config,
)
from .core import (  # Exception types; Logging; Error handling; Secure utilities; Time utilities; File utilities; Async utilities
    AITraderException,
    APIAuthenticationError,
    APIConnectionError,
    APIRateLimitError,
    BrokerConnectionError,
    CacheConnectionError,
    CacheException,
    CacheSerializationError,
    ColoredFormatter,
    ConfigurationError,
    DatabaseConnectionError,
    DatabaseException,
    DatabaseIntegrityError,
    DatabaseQueryError,
    DataPipelineException,
    DataSourceException,
    DataStorageError,
    DataValidationError,
    ErrorHandlingMixin,
    FeatureCalculationError,
    FeatureEngineeringException,
    InsufficientDataError,
    JsonFormatter,
    MissingConfigError,
    ModelConfigError,
    ModelTrainingException,
    OrderExecutionError,
    RateLimiter,
    RiskLimitExceededError,
    SecureRandom,
    TradingException,
    TrainingDataError,
    convert_exception,
    ensure_directory_exists,
    ensure_utc,
    gather_with_exceptions,
    get_last_us_trading_day,
    get_logger,
    get_market_hours,
    get_next_trading_day,
    get_secure_random,
    get_trading_days_between,
    is_market_open,
    is_trading_day,
    load_yaml_config,
    process_in_batches,
    read_json_file,
    run_in_executor,
    safe_delete_file,
    safe_json_write,
    secure_choice,
    secure_dumps,
    secure_loads,
    secure_normal,
    secure_randint,
    secure_uniform,
    setup_logging,
    timeout_coro,
    write_json_file,
)

# Data utilities
from .data import (  # Data processing; Data utilities
    DataProcessor,
    DataValidationRule,
    ValidationLevel,
    calculate_percentage_change,
    chunk_list,
    compare_dataframes,
    dataframe_memory_usage,
    format_number,
    get_global_processor,
    hash_dataframe,
    parse_numeric,
    safe_divide,
)

# Database utilities
from .database import (
    ConnectionHealthStatus,
    ConnectionPoolMetrics,
    DatabasePool,
    PoolHealthMonitor,
    QueryPerformanceTracker,
    QueryPriority,
    QueryTracker,
    QueryType,
    get_global_tracker,
    track_query,
)

# Event utilities
from .events import (  # Callback system; Event management; Convenience functions
    CallbackManager,
    CallbackMixin,
    CallbackPriority,
    Event,
    EventResult,
    EventStatus,
    auto_register_callbacks,
    callback,
    emit,
    emit_and_wait,
    event_handler,
    get_global_callback_manager,
    off,
    on,
)

# Market data utilities
from .market_data import MarketDataCache, UniverseLoader

# Monitoring utilities
from .monitoring import (  # AlertManager,  # Removed to avoid circular dependency; Memory monitoring; Performance monitoring; Components; Global monitoring; Convenience functions
    Alert,
    AlertLevel,
    FunctionMetrics,
    FunctionTracker,
    MemoryMonitor,
    MemorySnapshot,
    MemoryThresholds,
    MetricType,
    PerformanceMetric,
    PerformanceMonitor,
    SystemMetricsCollector,
    SystemResources,
    clear_metrics,
    export_metrics,
    get_alerts_summary,
    get_function_summary,
    get_global_monitor,
    get_memory_monitor,
    get_system_summary,
    is_global_monitor_initialized,
    memory_profiled,
    record_metric,
    reset_global_monitor,
    set_default_thresholds,
    set_global_monitor,
    start_monitoring,
    stop_monitoring,
    time_function,
    timer,
)

# Networking utilities
from .networking import (  # Types; WebSocket optimization; Global WebSocket management
    BufferConfig,
    ConnectionConfig,
    ConnectionPool,
    ConnectionState,
    ConnectionStats,
    FailoverManager,
    LatencyMetrics,
    MessageBuffer,
    MessagePriority,
    OptimizedWebSocketClient,
    WebSocketConnection,
    WebSocketManager,
    WebSocketMessage,
    create_optimized_websocket,
    get_websocket_manager,
    websocket_context,
)

# Processing utilities
from .processing import ProcessingStats, ProcessingUtils, StreamingAggregator, StreamingConfig

# Resilience utilities
from .resilience import (  # Circuit breaker; Error recovery
    API_RETRY_CONFIG,
    DATABASE_RETRY_CONFIG,
    NETWORK_RETRY_CONFIG,
    BulkRetryManager,
    CircuitBreaker,
    CircuitBreakerConfig,
    CircuitBreakerError,
    CircuitBreakerManager,
    CircuitBreakerState,
    ErrorRecoveryManager,
    RecoveryAction,
    RetryConfig,
    RetryExhaustedError,
    RetryStrategy,
    circuit_breaker,
    circuit_breaker_call,
    get_circuit_breaker,
    get_global_circuit_breaker_manager,
    get_global_recovery_manager,
    retry,
    retry_call,
)

# State utilities
from .state import (  # Context management; State management; Persistence; Global state management
    FileBackend,
    MemoryBackend,
    RedisBackend,
    SerializationFormat,
    StateContext,
    StateManager,
    StatePersistence,
    StorageBackend,
    get_state_manager,
)

# Trading utilities
from .trading import (  # Universe management; Filter utilities; Global universe management
    Filter,
    FilterCriteria,
    UniverseAnalyzer,
    UniverseConfig,
    UniverseImportExport,
    UniverseManager,
    UniverseSnapshot,
    UniverseType,
    create_beta_filter,
    create_country_filter,
    create_dividend_filters,
    create_dividend_yield_filter,
    create_exchange_filter,
    create_growth_filters,
    create_high_volume_filters,
    create_industry_filter,
    create_large_cap_filters,
    create_liquidity_filter,
    create_market_cap_filter,
    create_pe_ratio_filter,
    create_price_range_filter,
    create_sector_filter,
    create_value_filters,
    create_volatility_filter,
    create_volume_filter,
    ensure_global_manager,
    get_global_manager,
    init_global_manager,
    is_global_manager_initialized,
    reset_global_manager,
    set_global_manager,
)

# Export all main classes and functions
__all__ = [
    # Core utilities
    "process_in_batches",
    "run_in_executor",
    "gather_with_exceptions",
    "timeout_coro",
    "RateLimiter",
    "AITraderException",
    "DataPipelineException",
    "DataSourceException",
    "APIConnectionError",
    "APIRateLimitError",
    "APIAuthenticationError",
    "DataValidationError",
    "DataStorageError",
    "DatabaseException",
    "DatabaseConnectionError",
    "DatabaseQueryError",
    "DatabaseIntegrityError",
    "CacheException",
    "CacheConnectionError",
    "CacheSerializationError",
    "FeatureEngineeringException",
    "FeatureCalculationError",
    "InsufficientDataError",
    "ModelTrainingException",
    "ModelConfigError",
    "TrainingDataError",
    "TradingException",
    "OrderExecutionError",
    "RiskLimitExceededError",
    "BrokerConnectionError",
    "ConfigurationError",
    "MissingConfigError",
    "convert_exception",
    "ensure_utc",
    "get_last_us_trading_day",
    "is_market_open",
    "get_market_hours",
    "get_trading_days_between",
    "is_trading_day",
    "get_next_trading_day",
    "load_yaml_config",
    "ensure_directory_exists",
    "safe_delete_file",
    "read_json_file",
    "write_json_file",
    "safe_json_write",
    "SecureRandom",
    "secure_uniform",
    "secure_normal",
    "secure_randint",
    "secure_choice",
    "get_secure_random",
    "secure_dumps",
    "secure_loads",
    "ErrorHandlingMixin",
    "ColoredFormatter",
    "JsonFormatter",
    "get_logger",
    "setup_logging",
    # Configuration utilities
    "ConfigOptimizer",
    "OptimizationStrategy",
    "ParameterType",
    "ConfigParameter",
    "ParameterConstraint",
    "OptimizationTarget",
    "OptimizationResult",
    "get_global_optimizer",
    "create_cache_parameters",
    "create_database_parameters",
    "create_network_parameters",
    "create_performance_parameters",
    "create_monitoring_parameters",
    "ConfigurationWrapper",
    "ConfigFormat",
    "ConfigSchema",
    "ConfigValidationError",
    "create_config_schema",
    "create_basic_schema",
    "create_database_schema",
    "create_api_schema",
    "load_config",
    "get_global_config",
    "set_global_config",
    "init_global_config",
    "ensure_global_config",
    "reset_global_config",
    "is_global_config_initialized",
    "get_config_value",
    "set_config_value",
    "has_config_key",
    # Authentication utilities
    "CredentialValidator",
    "CredentialType",
    "ValidationResult",
    "validate_credential",
    "generate_secure_credential",
    "get_global_validator",
    # Data utilities
    "DataProcessor",
    "DataValidationRule",
    "ValidationLevel",
    "get_global_processor",
    "chunk_list",
    "dataframe_memory_usage",
    "safe_divide",
    "parse_numeric",
    "format_number",
    "calculate_percentage_change",
    "hash_dataframe",
    "compare_dataframes",
    # Event utilities
    "CallbackPriority",
    "EventStatus",
    "Event",
    "EventResult",
    "CallbackManager",
    "CallbackMixin",
    "callback",
    "event_handler",
    "auto_register_callbacks",
    "get_global_callback_manager",
    "on",
    "off",
    "emit",
    "emit_and_wait",
    # Monitoring utilities
    "PerformanceMonitor",
    "MetricType",
    "AlertLevel",
    "PerformanceMetric",
    "SystemResources",
    "FunctionMetrics",
    "Alert",
    "SystemMetricsCollector",
    "FunctionTracker",
    "get_global_monitor",
    "set_global_monitor",
    "reset_global_monitor",
    "is_global_monitor_initialized",
    "record_metric",
    "time_function",
    "timer",
    "start_monitoring",
    "stop_monitoring",
    "get_system_summary",
    "get_function_summary",
    "get_alerts_summary",
    "set_default_thresholds",
    "clear_metrics",
    "export_metrics",
    "MemoryMonitor",
    "MemorySnapshot",
    "MemoryThresholds",
    "get_memory_monitor",
    "memory_profiled",
    # Networking utilities
    "OptimizedWebSocketClient",
    "WebSocketManager",
    "WebSocketConnection",
    "MessageBuffer",
    "FailoverManager",
    "ConnectionPool",
    "ConnectionState",
    "MessagePriority",
    "LatencyMetrics",
    "BufferConfig",
    "ConnectionConfig",
    "WebSocketMessage",
    "ConnectionStats",
    "get_websocket_manager",
    "create_optimized_websocket",
    "websocket_context",
    # Resilience utilities
    "CircuitBreaker",
    "CircuitBreakerConfig",
    "CircuitBreakerManager",
    "CircuitBreakerState",
    "CircuitBreakerError",
    "circuit_breaker",
    "get_circuit_breaker",
    "circuit_breaker_call",
    "get_global_circuit_breaker_manager",
    "ErrorRecoveryManager",
    "RetryConfig",
    "RetryStrategy",
    "RecoveryAction",
    "RetryExhaustedError",
    "BulkRetryManager",
    "retry",
    "retry_call",
    "get_global_recovery_manager",
    "NETWORK_RETRY_CONFIG",
    "DATABASE_RETRY_CONFIG",
    "API_RETRY_CONFIG",
    # State utilities
    "StateManager",
    "StorageBackend",
    "SerializationFormat",
    "MemoryBackend",
    "FileBackend",
    "RedisBackend",
    "StatePersistence",
    "StateContext",
    "get_state_manager",
    # Trading utilities
    "UniverseManager",
    "UniverseType",
    "FilterCriteria",
    "Filter",
    "UniverseConfig",
    "UniverseSnapshot",
    "UniverseAnalyzer",
    "UniverseImportExport",
    "create_market_cap_filter",
    "create_volume_filter",
    "create_sector_filter",
    "create_exchange_filter",
    "create_price_range_filter",
    "create_liquidity_filter",
    "create_volatility_filter",
    "create_beta_filter",
    "create_dividend_yield_filter",
    "create_pe_ratio_filter",
    "create_industry_filter",
    "create_country_filter",
    "create_large_cap_filters",
    "create_high_volume_filters",
    "create_growth_filters",
    "create_dividend_filters",
    "create_value_filters",
    "get_global_manager",
    "set_global_manager",
    "init_global_manager",
    "ensure_global_manager",
    "reset_global_manager",
    "is_global_manager_initialized",
    # Cache utilities
    "CacheType",
    "CacheTier",
    "CompressionType",
    "CacheEntry",
    "CacheStats",
    "CacheBackend",
    "MemoryBackend",
    "RedisBackend",
    "CacheKeyGenerator",
    "get_key_generator",
    "set_key_generator",
    "generate_quotes_key",
    "generate_ohlcv_key",
    "generate_features_key",
    "generate_custom_key",
    "CacheMetricsService",
    "CompressionService",
    "BackgroundTasksService",
    # Database utilities
    "DatabasePool",
    "ConnectionPoolMetrics",
    "ConnectionHealthStatus",
    "PoolHealthMonitor",
    "QueryTracker",
    "QueryPerformanceTracker",
    "QueryType",
    "QueryPriority",
    "track_query",
    "get_global_tracker",
    # Processing utilities
    "StreamingConfig",
    "ProcessingStats",
    "StreamingAggregator",
    "ProcessingUtils",
    # Factory utilities
    # 'make_data_fetcher', 'UtilityManager',
    # API utilities
    "managed_aiohttp_session",
    "managed_httpx_client",
    # Market data utilities
    "MarketDataCache",
    "UniverseLoader",
    # Application utilities
    "StandardAppContext",
    "AppContextError",
    "create_app_context",
    "managed_app_context",
    "create_cli_app",
    "CLIAppConfig",
    "StandardCLIHandler",
    "create_data_pipeline_app",
    "create_training_app",
    "create_validation_app",
    "async_command",
    "success_message",
    "error_message",
    "info_message",
    "warning_message",
    "AppConfigValidator",
    "ValidationResult",
    "ConfigValidationError",
    "validate_trading_config",
    "validate_data_pipeline_config",
    "ensure_critical_config",
    "validate_app_startup_config",
    # App factory utilities
    "create_event_driven_app",
    "run_event_driven_app",
]
