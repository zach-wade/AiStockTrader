# Rate Limits Configuration
# Centralized API rate limiting and connection pool settings for all data sources

rate_limits:
  # Polygon (Stocks Starter - unlimited API calls with rate limits)
  polygon:
    requests_per_second: 50
    burst_limit: 100
    cooldown_seconds: 2
    internal_batch_size: 20
    request_timeout: 30
    retry_config:
      max_retries: 3
      initial_delay: 1.0
      max_delay: 10.0
      exponential_base: 2.0
    backoff:
      initial_delay: 1.0
      max_delay: 60.0
      multiplier: 2.0
      max_attempts: 5
    circuit_breaker:
      failure_threshold: 5
      recovery_timeout: 60
      success_threshold: 3
      expected_exceptions:
        - HTTPError
        - Timeout
        - ConnectionError

  # Alpaca (Algo Trader Plus - 10k requests/minute)
  alpaca:
    requests_per_second: 150
    burst_limit: 300
    cooldown_seconds: 1
    internal_batch_size: 50
    request_timeout: 30
    retry_config:
      max_retries: 3
      initial_delay: 0.5
      max_delay: 5.0
      exponential_base: 2.0
    circuit_breaker:
      failure_threshold: 10
      recovery_timeout: 30
      success_threshold: 5

  # Yahoo Finance (free tier - conservative limits)
  yahoo:
    requests_per_second: 5
    burst_limit: 10
    cooldown_seconds: 5
    internal_batch_size: 5
    request_timeout: 60
    retry_config:
      max_retries: 2
      initial_delay: 2.0
      max_delay: 20.0
      exponential_base: 2.0
    circuit_breaker:
      failure_threshold: 3
      recovery_timeout: 120
      success_threshold: 2

  # Benzinga
  benzinga:
    requests_per_second: 10
    burst_limit: 20
    cooldown_seconds: 2
    internal_batch_size: 10
    request_timeout: 30
    retry_config:
      max_retries: 3
      initial_delay: 1.0
      max_delay: 10.0
      exponential_base: 2.0
    circuit_breaker:
      failure_threshold: 5
      recovery_timeout: 60
      success_threshold: 3

  # Reddit API
  reddit:
    requests_per_second: 2
    burst_limit: 5
    cooldown_seconds: 10
    internal_batch_size: 1
    request_timeout: 30
    retry_config:
      max_retries: 2
      initial_delay: 5.0
      max_delay: 30.0
      exponential_base: 2.0
    circuit_breaker:
      failure_threshold: 3
      recovery_timeout: 300
      success_threshold: 2

  # Twitter/X API
  twitter:
    requests_per_second: 1
    burst_limit: 3
    cooldown_seconds: 15
    internal_batch_size: 1
    request_timeout: 30
    retry_config:
      max_retries: 2
      initial_delay: 10.0
      max_delay: 60.0
      exponential_base: 2.0
    circuit_breaker:
      failure_threshold: 3
      recovery_timeout: 600
      success_threshold: 2

  # Event processing rate limits
  events:
    backfill_rate_per_minute: 10        # Max backfills scheduled per minute
    event_publish_per_second: 100       # Max events published per second
    circuit_breaker:
      failure_threshold: 5
      recovery_timeout: 60
      success_threshold: 3

# Connection pool settings
connection_pools:
  default:
    max_connections: 20
    max_keepalive_connections: 10
    timeout_seconds: 30
    enable_http2: true

  polygon:
    max_connections: 15
    max_keepalive_connections: 8
    timeout_seconds: 30
    enable_http2: true
    verify_ssl: true

  alpaca:
    max_connections: 15
    max_keepalive_connections: 8
    timeout_seconds: 30
    enable_http2: true
    verify_ssl: true

  yahoo:
    max_connections: 5
    max_keepalive_connections: 2
    timeout_seconds: 60
    enable_http2: false  # Yahoo doesn't support HTTP/2 well
    verify_ssl: true

  social_media:  # Reddit, Twitter
    max_connections: 5
    max_keepalive_connections: 2
    timeout_seconds: 30
    enable_http2: true
    verify_ssl: true

# Global rate limiting settings
global:
  # Total API calls across all sources
  total_rate_limit_per_minute: 1000

  # Burst protection
  burst_window_seconds: 10
  max_burst_multiplier: 2.0

  # Adaptive rate limiting
  adaptive_limiting:
    enabled: true
    error_threshold: 0.1  # 10% error rate
    reduction_factor: 0.5  # Reduce to 50% on errors
    recovery_factor: 1.1   # Increase by 10% on success

  # Priority-based allocation
  priority_weights:
    realtime: 0.4    # 40% of rate limit
    backfill: 0.3    # 30% of rate limit
    scanner: 0.2     # 20% of rate limit
    analysis: 0.1    # 10% of rate limit
