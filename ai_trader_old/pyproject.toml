[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-trader"
version = "1.0.0"
description = "Enterprise-Grade Algorithmic Trading Platform"
readme = "README.md"
license = {text = "Private"}
authors = [
    {name = "AI Trader Development Team"},
]
maintainers = [
    {name = "AI Trader Development Team"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = [
    "trading",
    "algorithmic-trading",
    "machine-learning",
    "finance",
    "investment",
    "quantitative-finance",
    "market-data",
    "risk-management",
]
requires-python = ">=3.8"
dependencies = [
    # Core dependencies
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
    "antlr4-python3-runtime>=4.9.0",

    # Data processing
    "pandas>=2.0.0",
    "numpy>=1.24.0",

    # Database
    "psycopg2-binary>=2.9.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",

    # API clients
    "alpaca-py>=0.8.0",
    "polygon-api-client>=1.12.0",
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "yfinance>=0.2.0",

    # Async support
    "asyncio-extras>=1.3.2",
    "asyncpg>=0.28.0",
    "aiofiles>=23.0.0",

    # Data validation
    "pydantic>=2.0.0",

    # Time handling
    "pytz>=2023.3",
    "python-dateutil>=2.8.2",
    "pandas-market-calendars>=4.3.0",

    # Logging and monitoring
    "structlog>=23.1.0",

    # Web scraping (for news/sentiment)
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",

    # Redis (for caching)
    "redis>=4.6.0",

    # Math/Stats
    "scipy>=1.11.0",
    "scikit-learn>=1.3.0",

    # Dashboard framework
    "dash>=2.14.0",

    # Configuration management
    "python-dotenv>=1.0.0",

    # HTTP client enhancements
    "httpx>=0.24.0",

    # CLI framework
    "typer>=0.9.0",

    # CLI support (legacy)
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",

    # Code quality
    "black>=23.7.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
    "pylint>=2.17.0",

    # Pre-commit hooks
    "pre-commit>=3.3.0",

    # Documentation
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]
jupyter = [
    # Jupyter support
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "notebook>=7.0.0",
]
viz = [
    # Plotting and visualization
    "matplotlib>=3.7.0",
    "plotly>=5.15.0",
    "seaborn>=0.12.0",
]
ml = [
    # Advanced ML libraries
    "xgboost>=1.7.0",
    "lightgbm>=4.0.0",
    "catboost>=1.2.0",
    "optuna>=3.3.0",
]
all = [
    "ai-trader[dev,jupyter,viz,ml]"
]

[project.scripts]
ai-trader = "main.cli:main"
ai-trader-trade = "main.app.run_trading:main"
ai-trader-train = "main.app.run_training:main"
ai-trader-backfill = "main.app.run_backfill:main"
ai-trader-validate = "main.app.run_validation:main"

[project.urls]
Homepage = "https://github.com/your-username/ai-trader"
Repository = "https://github.com/your-username/ai-trader.git"
Documentation = "https://your-username.github.io/ai-trader/"
Changelog = "https://github.com/your-username/ai-trader/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/your-username/ai-trader/issues"

# Tool configurations

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["main*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
main = [
    "config/*.yaml",
    "config/settings/*.yaml",
    "monitoring/templates/*.html",
    "py.typed",
]

# Black code formatter
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | venv
  | data_lake
  | models
)/
'''

# isort import sorting
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["main"]
known_third_party = [
    "pandas", "numpy", "scipy", "sklearn", "plotly", "dash",
    "alpaca", "polygon", "requests", "aiohttp", "pydantic",
    "sqlalchemy", "psycopg2", "redis", "hydra", "omegaconf"
]
src_paths = ["src", "tests"]

# MyPy type checking
[tool.mypy]
python_version = "3.8"
files = ["src/main", "tests"]
show_error_codes = true
strict = true
warn_unreachable = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false  # Many trading libraries lack type annotations
ignore_missing_imports = true  # Many financial libraries lack stubs

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=main",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--tb=short",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "live: marks tests that require live market data",
    "paper: marks tests that use paper trading",
    "ml: marks tests that involve machine learning",
    "db: marks tests that require database",
    "network: marks tests that require network access",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore:.*SQLAlchemy.*:PendingDeprecationWarning",
    "ignore:.*pandas.*:FutureWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/main"]
omit = [
    "tests/*",
    "src/main/__pycache__/*",
    "*/venv/*",
    "*/site-packages/*",
    "data_lake/*",
    "models/*",
    "logs/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
precision = 2
