[tool:pytest]
# Pytest configuration for AI Trader
# This file provides pytest-specific configuration

# Minimum pytest version
minversion = 7.0

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Default pytest arguments
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=src/main
    --cov-report=term-missing:skip-covered
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10
    --color=yes

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests  
    live: marks tests that require live market data (use with caution)
    paper: marks tests that use paper trading environment
    ml: marks tests that involve machine learning models
    db: marks tests that require database connection
    network: marks tests that require network/internet access
    redis: marks tests that require Redis cache
    expensive: marks tests that are computationally expensive
    broker: marks tests that interact with broker APIs

# Warning filters
filterwarnings =
    error
    # Ignore specific warnings from dependencies
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore:.*use_2to3.*:UserWarning
    ignore:.*SQLAlchemy.*:PendingDeprecationWarning
    ignore:.*pandas.*:FutureWarning
    ignore:.*numpy.*:FutureWarning
    ignore:.*sklearn.*:FutureWarning
    ignore:.*distutils.*:DeprecationWarning
    # Trading-specific warnings to ignore
    ignore:.*yfinance.*:UserWarning
    ignore:.*alpaca.*:UserWarning
    ignore:.*polygon.*:UserWarning

# Logging configuration during tests
log_cli = false
log_cli_level = WARNING
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)d)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test timeout (prevent hanging tests)
timeout = 300
timeout_method = thread

# JUnit XML output for CI/CD
junit_family = xunit2
junit_logging = system-out
junit_log_passing_tests = false

# Test collection configuration
collect_ignore = setup.py data_lake models logs venv env .venv build dist

# Parallel test execution (if pytest-xdist is installed)
# Uncomment to enable parallel testing:
# addopts = ... -n auto

# Live trading test protection
# These environment variables must be set to run live trading tests
env =
    TESTING = 1
    AI_TRADER_ENV = test

# Test data directories
testmon_datadir = .testmondata
cache_dir = .pytest_cache