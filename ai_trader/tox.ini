[tox]
# AI Trader - Multi-environment testing configuration
# Supports testing across multiple Python versions and environments

# Python versions to test against
envlist = 
    py38,
    py39, 
    py310,
    py311,
    py312,
    lint,
    type,
    security,
    docs

# Skip missing interpreters (useful on development machines)
skip_missing_interpreters = true

[testenv]
# Base test environment configuration
description = Run tests with pytest under {basepython}

# Dependencies for all test environments
deps =
    pytest>=7.4.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.1.0
    pytest-mock>=3.11.0
    pytest-timeout>=2.1.0

# Install the package in development mode
usedevelop = true

# Environment variables for testing
setenv =
    PYTHONPATH = {toxinidir}/src
    TESTING = 1
    AI_TRADER_ENV = test
    # Prevent API calls during testing
    ALPACA_API_KEY = test_key
    POLYGON_API_KEY = test_key
    
# Commands to run tests
commands = 
    pytest {posargs:tests/unit tests/integration}

# Test environment with coverage reporting
[testenv:coverage]
description = Run tests with coverage reporting
deps =
    {[testenv]deps}
    coverage[toml]>=7.0.0
commands =
    coverage run -m pytest {posargs:tests}
    coverage report --show-missing
    coverage html
    coverage xml

# Linting environment
[testenv:lint]
description = Run code quality checks
deps =
    black>=23.7.0
    isort>=5.12.0
    flake8>=6.0.0
    pylint>=2.17.0
commands =
    black --check --diff src tests
    isort --check-only --diff src tests  
    flake8 src tests
    pylint src/ai_trader

# Type checking environment
[testenv:type]
description = Run static type checking
deps =
    mypy>=1.5.0
    types-requests>=2.31.0
    types-python-dateutil>=2.8.0
    types-pytz>=2023.3.0
    types-redis>=4.6.0
commands =
    mypy src/ai_trader

# Security scanning environment  
[testenv:security]
description = Run security vulnerability scanning
deps =
    bandit[toml]>=1.7.0
    safety>=2.3.0
commands =
    bandit -r src/ai_trader
    safety check

# Documentation building environment
[testenv:docs]
description = Build documentation
changedir = docs
deps =
    sphinx>=7.1.0
    sphinx-rtd-theme>=1.3.0
    sphinx-autodoc-typehints>=1.24.0
commands =
    sphinx-build -b html . _build/html
    sphinx-build -b linkcheck . _build/linkcheck

# Performance testing environment
[testenv:performance]
description = Run performance tests
deps = 
    {[testenv]deps}
    pytest-benchmark>=4.0.0
commands =
    pytest {posargs:tests/performance} --benchmark-only

# Integration testing with live APIs (use carefully)
[testenv:integration-live]
description = Run integration tests with live APIs
setenv =
    {[testenv]setenv}
    AI_TRADER_ENV = integration
    # These should be set externally for live testing
    # ALPACA_API_KEY = {env:ALPACA_API_KEY}
    # POLYGON_API_KEY = {env:POLYGON_API_KEY}
commands =
    pytest {posargs:tests/integration} -m "not slow"

# Development environment with all tools
[testenv:dev]
description = Development environment with all dependencies
deps =
    {[testenv]deps}
    {[testenv:lint]deps}
    {[testenv:type]deps}
    {[testenv:security]deps}
    ipython>=8.14.0
    ipdb>=0.13.0
commands =
    python -c "print('Development environment ready!')"
    python -c "import ai_trader; print(f'AI Trader version: {ai_trader.__version__ if hasattr(ai_trader, \"__version__\") else \"dev\"}')"

# Clean environment (remove build artifacts)
[testenv:clean]
description = Remove build artifacts and cache files
deps = 
skip_install = true
allowlist_externals = 
    rm
    find
commands =
    rm -rf build/
    rm -rf dist/
    rm -rf .coverage
    rm -rf htmlcov/
    rm -rf .pytest_cache/
    rm -rf .mypy_cache/
    rm -rf .tox/
    find . -type d -name __pycache__ -exec rm -rf {} +
    find . -type f -name "*.pyc" -delete

# Configuration for all environments
[gh-actions]
# GitHub Actions Python version mapping
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311, lint, type, security
    3.12: py312

[flake8]
# Flake8 configuration (used by lint environment)
max-line-length = 88
extend-ignore = E203, W503
exclude = 
    .git,
    __pycache__,
    .tox,
    .pytest_cache,
    build,
    dist,
    data_lake,
    models,
    venv
per-file-ignores =
    __init__.py:F401