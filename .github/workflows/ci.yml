---
name: Quality Gates CI

on:
  push:
    branches: [main, develop, feature/**]
  pull_request:
    branches: [main, develop]

jobs:
  quality-gates:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install pre-commit

      - name: Run black formatter check
        run: |
          black --check --diff .

      - name: Run ruff linter
        run: |
          ruff check .

      - name: Run mypy type checker
        run: |
          mypy . --config-file pyproject.toml || true  # Non-blocking for initial setup

      - name: Run bandit security scan
        run: |
          bandit -r . -ll -f json -o bandit-report.json || true
          if [ -f bandit-report.json ]; then
            echo "::warning::Security issues found. Check bandit-report.json"
          fi

      - name: Run pip-audit for vulnerabilities
        run: |
          pip-audit -r requirements-dev.txt --desc || true

      - name: Run safety check
        run: |
          safety check -r requirements-dev.txt --json || true

      - name: Run pytest with coverage
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term-missing -v || true

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Generate import graph
        if: matrix.python-version == '3.11'
        run: |
          python scripts/build_import_graph.py --root . --out graph

      - name: Upload artifacts
        if: always() && matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: quality-reports
          path: |
            bandit-report.json
            coverage.xml
            graph/import_graph.json

  code-quality-summary:
    needs: quality-gates
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Quality Check Summary
        run: |
          echo "âœ… Quality gates completed"
          echo "Check the artifacts for detailed reports"
