{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "path": "/Users/zachwade/StockMonitoring/trading_remediation_bootstrap/tests/e2e_smoke/test_smoke.py",
      "id": "trading_remediation_bootstrap.tests.e2e_smoke.test_smoke"
    },
    {
      "id": "subprocess"
    },
    {
      "id": "sys"
    },
    {
      "id": "pathlib"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/trading_remediation_bootstrap/scripts/ingest_issues.py",
      "id": "trading_remediation_bootstrap.scripts.ingest_issues"
    },
    {
      "id": "argparse"
    },
    {
      "id": "json"
    },
    {
      "id": "re"
    },
    {
      "id": "typing"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/trading_remediation_bootstrap/scripts/wave_planner.py",
      "id": "trading_remediation_bootstrap.scripts.wave_planner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/trading_remediation_bootstrap/scripts/build_import_graph.py",
      "id": "trading_remediation_bootstrap.scripts.build_import_graph"
    },
    {
      "id": "ast"
    },
    {
      "id": "os"
    },
    {
      "id": "networkx"
    },
    {
      "id": "graphviz"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/trading_remediation_bootstrap/scripts/run_smoke_paper.py",
      "id": "trading_remediation_bootstrap.scripts.run_smoke_paper"
    },
    {
      "id": "time"
    },
    {
      "id": "random"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/tests/conftest.py",
      "id": "tests.conftest"
    },
    {
      "id": "asyncio"
    },
    {
      "id": "decimal"
    },
    {
      "id": "unittest"
    },
    {
      "id": "pytest"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/tests/e2e_smoke/test_smoke.py",
      "id": "tests.e2e_smoke.test_smoke"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/scripts/ingest_issues.py",
      "id": "scripts.ingest_issues"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/scripts/wave_planner.py",
      "id": "scripts.wave_planner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/scripts/build_import_graph.py",
      "id": "scripts.build_import_graph"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/scripts/run_smoke_paper.py",
      "id": "scripts.run_smoke_paper"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/ai_trader.py",
      "id": "ai_trader.ai_trader"
    },
    {
      "id": "logging"
    },
    {
      "id": "datetime"
    },
    {
      "id": "click"
    },
    {
      "id": "main"
    },
    {
      "id": "signal"
    },
    {
      "id": "pandas"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/ai_trader_refactored.py",
      "id": "ai_trader.ai_trader_refactored"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/config_performance_benchmark.py",
      "id": "ai_trader.config_performance_benchmark"
    },
    {
      "id": "gc"
    },
    {
      "id": "dataclasses"
    },
    {
      "id": "memory_profiler"
    },
    {
      "id": "psutil"
    },
    {
      "id": "threading"
    },
    {
      "id": "concurrent"
    },
    {
      "id": "statistics"
    },
    {
      "id": "pydantic"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/start_paper_trading.py",
      "id": "ai_trader.start_paper_trading"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/ISSUES_interfaces.py",
      "id": "ai_trader.ISSUES_interfaces"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/test_trading_flow.py",
      "id": "ai_trader.test_trading_flow"
    },
    {
      "id": "traceback"
    },
    {
      "id": "test_helpers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/setup.py",
      "id": "ai_trader.setup"
    },
    {
      "id": "setuptools"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tools/system_cleanup.py",
      "id": "ai_trader.tools.system_cleanup"
    },
    {
      "id": "shutil"
    },
    {
      "id": "hashlib"
    },
    {
      "id": "collections"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tools/debug_config.py",
      "id": "ai_trader.tools.debug_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tools/validate_config.py",
      "id": "ai_trader.tools.validate_config"
    },
    {
      "id": "yaml"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tools/standardize_imports.py",
      "id": "ai_trader.tools.standardize_imports"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/setup_test_environment.py",
      "id": "ai_trader.tests.setup_test_environment"
    },
    {
      "id": "platform"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/test_integration_simple.py",
      "id": "ai_trader.tests.test_integration_simple"
    },
    {
      "id": "numpy"
    },
    {
      "id": "test_setup"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/conftest.py",
      "id": "ai_trader.tests.conftest"
    },
    {
      "id": "tempfile"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/quick_test.py",
      "id": "ai_trader.tests.quick_test"
    },
    {
      "id": "pytest_cov"
    },
    {
      "id": "coverage"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/test_setup.py",
      "id": "ai_trader.tests.test_setup"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/test_archive_integration.py",
      "id": "ai_trader.tests.test_archive_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/run_events_tests.py",
      "id": "ai_trader.tests.run_events_tests"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/test_phase1_utilities.py",
      "id": "ai_trader.tests.test_phase1_utilities"
    },
    {
      "id": "types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/run_data_pipeline_tests.py",
      "id": "ai_trader.tests.run_data_pipeline_tests"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/__init__.py",
      "id": "ai_trader.tests.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/test_correlation_matrix.py",
      "id": "ai_trader.tests.test_correlation_matrix"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/test_config_validation.py",
      "id": "ai_trader.tests.test_config_validation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/test_backfill_event_flow.py",
      "id": "ai_trader.tests.test_backfill_event_flow"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/run_integration_tests.py",
      "id": "ai_trader.tests.run_integration_tests"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/run_all_tests.py",
      "id": "ai_trader.tests.run_all_tests"
    },
    {
      "id": "xml"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/validate_system.py",
      "id": "ai_trader.tests.validate_system"
    },
    {
      "id": "psycopg2"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/coverage_report.py",
      "id": "ai_trader.tests.coverage_report"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_sector_analytics.py",
      "id": "ai_trader.tests.unit.test_sector_analytics"
    },
    {
      "id": "importlib"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_feature_adapter.py",
      "id": "ai_trader.tests.unit.test_feature_adapter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_microstructure.py",
      "id": "ai_trader.tests.unit.test_microstructure"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_sentiment_features.py",
      "id": "ai_trader.tests.unit.test_sentiment_features"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_dataloader.py",
      "id": "ai_trader.tests.unit.test_dataloader"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_feature_store.py",
      "id": "ai_trader.tests.unit.test_feature_store"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_feature_orchestrator.py",
      "id": "ai_trader.tests.unit.test_feature_orchestrator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_market_regime.py",
      "id": "ai_trader.tests.unit.test_market_regime"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_enhanced_sentiment_strategy.py",
      "id": "ai_trader.tests.unit.test_enhanced_sentiment_strategy"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_feature_config.py",
      "id": "ai_trader.tests.unit.test_feature_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/__init__.py",
      "id": "ai_trader.tests.unit.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_data_preprocessor.py",
      "id": "ai_trader.tests.unit.test_data_preprocessor"
    },
    {
      "id": "warnings"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_trading_engine_basic.py",
      "id": "ai_trader.tests.unit.test_trading_engine_basic"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_order_manager.py",
      "id": "ai_trader.tests.unit.test_order_manager"
    },
    {
      "id": "omegaconf"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_data_standardizer.py",
      "id": "ai_trader.tests.unit.test_data_standardizer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_insider_analytics.py",
      "id": "ai_trader.tests.unit.test_insider_analytics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_cross_asset.py",
      "id": "ai_trader.tests.unit.test_cross_asset"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_resilience_strategies.py",
      "id": "ai_trader.tests.unit.test_resilience_strategies"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_unified_features.py",
      "id": "ai_trader.tests.unit.test_unified_features"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_calculator_registry.py",
      "id": "ai_trader.tests.unit.test_calculator_registry"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_base_calculator.py",
      "id": "ai_trader.tests.unit.test_base_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_portfolio_manager_deadlock.py",
      "id": "ai_trader.tests.unit.test_portfolio_manager_deadlock"
    },
    {
      "id": "src"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_execution_engine.py",
      "id": "ai_trader.tests.unit.test_execution_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_technical_indicators.py",
      "id": "ai_trader.tests.unit.test_technical_indicators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/test_news_features.py",
      "id": "ai_trader.tests.unit.test_news_features"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/__init__.py",
      "id": "ai_trader.tests.unit.data_pipeline.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/test_types.py",
      "id": "ai_trader.tests.unit.data_pipeline.test_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/ingestion/__init__.py",
      "id": "ai_trader.tests.unit.data_pipeline.ingestion.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/ingestion/test_orchestrator.py",
      "id": "ai_trader.tests.unit.data_pipeline.ingestion.test_orchestrator"
    },
    {
      "id": "pytest_asyncio"
    },
    {
      "id": "tests"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/processing/__init__.py",
      "id": "ai_trader.tests.unit.data_pipeline.processing.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/storage/test_database_factory.py",
      "id": "ai_trader.tests.unit.data_pipeline.storage.test_database_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/storage/__init__.py",
      "id": "ai_trader.tests.unit.data_pipeline.storage.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/storage/test_base_repository.py",
      "id": "ai_trader.tests.unit.data_pipeline.storage.test_base_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/storage/repositories/__init__.py",
      "id": "ai_trader.tests.unit.data_pipeline.storage.repositories.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/storage/performance/__init__.py",
      "id": "ai_trader.tests.unit.data_pipeline.storage.performance.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/historical/__init__.py",
      "id": "ai_trader.tests.unit.data_pipeline.historical.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/monitoring/__init__.py",
      "id": "ai_trader.tests.unit.data_pipeline.monitoring.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/data_pipeline/validation/__init__.py",
      "id": "ai_trader.tests.unit.data_pipeline.validation.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/core/test_di_container.py",
      "id": "ai_trader.tests.unit.core.test_di_container"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_request_dispatcher.py",
      "id": "ai_trader.tests.unit.events.test_request_dispatcher"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_event_bus.py",
      "id": "ai_trader.tests.unit.events.test_event_bus"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_feature_computation_worker.py",
      "id": "ai_trader.tests.unit.events.test_feature_computation_worker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_event_bus_helpers_init.py",
      "id": "ai_trader.tests.unit.events.test_event_bus_helpers_init"
    },
    {
      "id": "inspect"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_feature_pipeline_handler.py",
      "id": "ai_trader.tests.unit.events.test_feature_pipeline_handler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_event_history_manager.py",
      "id": "ai_trader.tests.unit.events.test_event_history_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_bridge_stats_tracker.py",
      "id": "ai_trader.tests.unit.events.test_bridge_stats_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_feature_config.py",
      "id": "ai_trader.tests.unit.events.test_feature_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_feature_request_batcher.py",
      "id": "ai_trader.tests.unit.events.test_feature_request_batcher"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_event_bus_stats_tracker.py",
      "id": "ai_trader.tests.unit.events.test_event_bus_stats_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_feature_types.py",
      "id": "ai_trader.tests.unit.events.test_feature_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/__init__.py",
      "id": "ai_trader.tests.unit.events.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_scanner_feature_bridge.py",
      "id": "ai_trader.tests.unit.events.test_scanner_feature_bridge"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_scanner_bridge_helpers_init.py",
      "id": "ai_trader.tests.unit.events.test_scanner_bridge_helpers_init"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_alert_feature_mapper.py",
      "id": "ai_trader.tests.unit.events.test_alert_feature_mapper"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_event_bus_factory.py",
      "id": "ai_trader.tests.unit.events.test_event_bus_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_request_queue_manager.py",
      "id": "ai_trader.tests.unit.events.test_request_queue_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_event_driven_engine.py",
      "id": "ai_trader.tests.unit.events.test_event_driven_engine"
    },
    {
      "id": "io"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_queue_types.py",
      "id": "ai_trader.tests.unit.events.test_queue_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_feature_pipeline_helpers_init.py",
      "id": "ai_trader.tests.unit.events.test_feature_pipeline_helpers_init"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_event_types.py",
      "id": "ai_trader.tests.unit.events.test_event_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_event_bus_registry.py",
      "id": "ai_trader.tests.unit.events.test_event_bus_registry"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_deduplication_tracker.py",
      "id": "ai_trader.tests.unit.events.test_deduplication_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_feature_handler_stats_tracker.py",
      "id": "ai_trader.tests.unit.events.test_feature_handler_stats_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_scanner_feature_bridge_initializer.py",
      "id": "ai_trader.tests.unit.events.test_scanner_feature_bridge_initializer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_dead_letter_queue_manager.py",
      "id": "ai_trader.tests.unit.events.test_dead_letter_queue_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_feature_config_loading.py",
      "id": "ai_trader.tests.unit.events.test_feature_config_loading"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_events_init.py",
      "id": "ai_trader.tests.unit.events.test_events_init"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_priority_calculator.py",
      "id": "ai_trader.tests.unit.events.test_priority_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/unit/events/test_feature_group_mapper.py",
      "id": "ai_trader.tests.unit.events.test_feature_group_mapper"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/conftest.py",
      "id": "ai_trader.tests.integration.conftest"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_complete_trading_workflow.py",
      "id": "ai_trader.tests.integration.test_complete_trading_workflow"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_unified_feature_engine_integration.py",
      "id": "ai_trader.tests.integration.test_unified_feature_engine_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_end_to_end_workflow.py",
      "id": "ai_trader.tests.integration.test_end_to_end_workflow"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_critical_calculators.py",
      "id": "ai_trader.tests.integration.test_critical_calculators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_execution_engine_integration.py",
      "id": "ai_trader.tests.integration.test_execution_engine_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_dual_storage.py",
      "id": "ai_trader.tests.integration.test_dual_storage"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_scanner_feature_bridge.py",
      "id": "ai_trader.tests.integration.test_scanner_feature_bridge"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_end_to_end.py",
      "id": "ai_trader.tests.integration.test_end_to_end"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_feature_pipeline_integration.py",
      "id": "ai_trader.tests.integration.test_feature_pipeline_integration"
    },
    {
      "id": "redis"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_dual_storage_complete.py",
      "id": "ai_trader.tests.integration.test_dual_storage_complete"
    },
    {
      "id": "uuid"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_dual_storage_integration.py",
      "id": "ai_trader.tests.integration.test_dual_storage_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_infrastructure.py",
      "id": "ai_trader.tests.integration.test_infrastructure"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_bulk_loaders.py",
      "id": "ai_trader.tests.integration.test_bulk_loaders"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_backfill_event_system.py",
      "id": "ai_trader.tests.integration.test_backfill_event_system"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_comprehensive_pipeline.py",
      "id": "ai_trader.tests.integration.test_comprehensive_pipeline"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_orchestrator_priority.py",
      "id": "ai_trader.tests.integration.test_orchestrator_priority"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/run_integration_tests.py",
      "id": "ai_trader.tests.integration.run_integration_tests"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_event_feature_integration.py",
      "id": "ai_trader.tests.integration.test_event_feature_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_corporate_actions_etl.py",
      "id": "ai_trader.tests.integration.test_corporate_actions_etl"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/test_feature_storage_integration.py",
      "id": "ai_trader.tests.integration.test_feature_storage_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/data_pipeline/test_complete_flow.py",
      "id": "ai_trader.tests.integration.data_pipeline.test_complete_flow"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/data_pipeline/__init__.py",
      "id": "ai_trader.tests.integration.data_pipeline.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/data_flow/test_news_data_flow.py",
      "id": "ai_trader.tests.integration.data_flow.test_news_data_flow"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/data_flow/test_market_data_flow.py",
      "id": "ai_trader.tests.integration.data_flow.test_market_data_flow"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/test_multi_layer_scanning.py",
      "id": "ai_trader.tests.integration.scanners.test_multi_layer_scanning"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/repository/test_technical_scanner_repository.py",
      "id": "ai_trader.tests.integration.scanners.repository.test_technical_scanner_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/repository/conftest.py",
      "id": "ai_trader.tests.integration.scanners.repository.conftest"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/repository/test_volume_scanner_repository.py",
      "id": "ai_trader.tests.integration.scanners.repository.test_volume_scanner_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/repository/test_storage_tier_integration.py",
      "id": "ai_trader.tests.integration.scanners.repository.test_storage_tier_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/repository/test_social_scanner_repository.py",
      "id": "ai_trader.tests.integration.scanners.repository.test_social_scanner_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/repository/test_news_scanner_repository.py",
      "id": "ai_trader.tests.integration.scanners.repository.test_news_scanner_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/repository/test_earnings_scanner_repository.py",
      "id": "ai_trader.tests.integration.scanners.repository.test_earnings_scanner_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/repository/test_scanner_data_repository.py",
      "id": "ai_trader.tests.integration.scanners.repository.test_scanner_data_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/end_to_end/conftest.py",
      "id": "ai_trader.tests.integration.scanners.end_to_end.conftest"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/end_to_end/test_complete_scanner_workflow.py",
      "id": "ai_trader.tests.integration.scanners.end_to_end.test_complete_scanner_workflow"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/end_to_end/test_scanner_orchestrator_integration.py",
      "id": "ai_trader.tests.integration.scanners.end_to_end.test_scanner_orchestrator_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/event_bus/test_event_bus_scanner_integration.py",
      "id": "ai_trader.tests.integration.scanners.event_bus.test_event_bus_scanner_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/event_bus/conftest.py",
      "id": "ai_trader.tests.integration.scanners.event_bus.conftest"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/event_bus/test_scanner_feature_bridge_events.py",
      "id": "ai_trader.tests.integration.scanners.event_bus.test_scanner_feature_bridge_events"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/scanners/event_bus/test_scanner_event_publishing.py",
      "id": "ai_trader.tests.integration.scanners.event_bus.test_scanner_event_publishing"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/fixtures/mock_services.py",
      "id": "ai_trader.tests.integration.fixtures.mock_services"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/fixtures/feature_pipeline_fixtures.py",
      "id": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures"
    },
    {
      "id": "fnmatch"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/events/test_event_coordination_integration.py",
      "id": "ai_trader.tests.integration.events.test_event_coordination_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/events/test_feature_pipeline_helpers_integration.py",
      "id": "ai_trader.tests.integration.events.test_feature_pipeline_helpers_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/events/test_performance_integration.py",
      "id": "ai_trader.tests.integration.events.test_performance_integration"
    },
    {
      "id": "resource"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/events/test_event_driven_engine.py",
      "id": "ai_trader.tests.integration.events.test_event_driven_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/events/test_error_handling_integration.py",
      "id": "ai_trader.tests.integration.events.test_error_handling_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/events/test_event_bus_integration.py",
      "id": "ai_trader.tests.integration.events.test_event_bus_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/events/test_scanner_bridge_helpers_integration.py",
      "id": "ai_trader.tests.integration.events.test_scanner_bridge_helpers_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/events/test_event_bus_helpers_integration.py",
      "id": "ai_trader.tests.integration.events.test_event_bus_helpers_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/trading/test_order_lifecycle.py",
      "id": "ai_trader.tests.integration.trading.test_order_lifecycle"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/risk/test_live_risk_monitor.py",
      "id": "ai_trader.tests.integration.risk.test_live_risk_monitor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/integration/risk/test_position_sizing.py",
      "id": "ai_trader.tests.integration.risk.test_position_sizing"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/__init__.py",
      "id": "ai_trader.tests.fixtures.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/mock_broker.py",
      "id": "ai_trader.tests.fixtures.mock_broker"
    },
    {
      "id": "trading_engine"
    },
    {
      "id": "models"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/test_unified_features_fixtures.py",
      "id": "ai_trader.tests.fixtures.test_unified_features_fixtures"
    },
    {
      "id": "pyarrow"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/data_pipeline/test_configs.py",
      "id": "ai_trader.tests.fixtures.data_pipeline.test_configs"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/data_pipeline/__init__.py",
      "id": "ai_trader.tests.fixtures.data_pipeline.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/data_pipeline/mock_data.py",
      "id": "ai_trader.tests.fixtures.data_pipeline.mock_data"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/data_pipeline/mock_clients.py",
      "id": "ai_trader.tests.fixtures.data_pipeline.mock_clients"
    },
    {
      "id": "mock_data"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/data_pipeline/database_fixtures.py",
      "id": "ai_trader.tests.fixtures.data_pipeline.database_fixtures"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/events/mock_events.py",
      "id": "ai_trader.tests.fixtures.events.mock_events"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/events/mock_configs.py",
      "id": "ai_trader.tests.fixtures.events.mock_configs"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/events/__init__.py",
      "id": "ai_trader.tests.fixtures.events.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/fixtures/events/mock_database.py",
      "id": "ai_trader.tests.fixtures.events.mock_database"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/monitoring/test_archive_widget.py",
      "id": "ai_trader.tests.monitoring.test_archive_widget"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/performance/test_system_performance.py",
      "id": "ai_trader.tests.performance.test_system_performance"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/performance/test_integration_pipeline_stress.py",
      "id": "ai_trader.tests.performance.test_integration_pipeline_stress"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/performance/test_archive_performance.py",
      "id": "ai_trader.tests.performance.test_archive_performance"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/performance/test_system_health_validation.py",
      "id": "ai_trader.tests.performance.test_system_health_validation"
    },
    {
      "id": "queue"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/stress/test_archive_stress_simple.py",
      "id": "ai_trader.tests.stress.test_archive_stress_simple"
    },
    {
      "id": "string"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/tests/stress/test_archive_stress.py",
      "id": "ai_trader.tests.stress.test_archive_stress"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/execution_engine_example.py",
      "id": "ai_trader.examples.execution_engine_example"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/risk_management_demo.py",
      "id": "ai_trader.examples.risk_management_demo"
    },
    {
      "id": "risk_management"
    },
    {
      "id": "config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/data_pipeline_integration_example.py",
      "id": "ai_trader.examples.data_pipeline_integration_example"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/ml_trading_example.py",
      "id": "ai_trader.examples.ml_trading_example"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/backtests/strategy_backtest.py",
      "id": "ai_trader.examples.backtests.strategy_backtest"
    },
    {
      "id": "structlog"
    },
    {
      "id": "strategies"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/strategies/mean_reversion.py",
      "id": "ai_trader.examples.strategies.mean_reversion"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/indicators/custom_rsi.py",
      "id": "ai_trader.examples.indicators.custom_rsi"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/configs/environment_override.py",
      "id": "ai_trader.examples.configs.environment_override"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/configs/basic_config.py",
      "id": "ai_trader.examples.configs.basic_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/scanners/volume_scanner.py",
      "id": "ai_trader.examples.scanners.volume_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/examples/monitoring/alert_setup.py",
      "id": "ai_trader.examples.monitoring.alert_setup"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/generate_tsla_validation_report.py",
      "id": "ai_trader.scripts.generate_tsla_validation_report"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/debug_corporate_actions_freeze.py",
      "id": "ai_trader.scripts.debug_corporate_actions_freeze"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/analyze_layer1_limits.py",
      "id": "ai_trader.scripts.analyze_layer1_limits"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/run_tsla_full_test.py",
      "id": "ai_trader.scripts.run_tsla_full_test"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/trace_layer1_issue.py",
      "id": "ai_trader.scripts.trace_layer1_issue"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/check_market_data.py",
      "id": "ai_trader.scripts.check_market_data"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/run_scanner_pipeline.py",
      "id": "ai_trader.scripts.run_scanner_pipeline"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/test_corporate_actions_fix.py",
      "id": "ai_trader.scripts.test_corporate_actions_fix"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/check_aa_liquidity.py",
      "id": "ai_trader.scripts.check_aa_liquidity"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/verify_conflict_behavior.py",
      "id": "ai_trader.scripts.verify_conflict_behavior"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/analyze_database_schema.py",
      "id": "ai_trader.scripts.analyze_database_schema"
    },
    {
      "id": "sqlalchemy"
    },
    {
      "id": "dotenv"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/calculate_pairs_stats.py",
      "id": "ai_trader.scripts.calculate_pairs_stats"
    },
    {
      "id": "statsmodels"
    },
    {
      "id": "ai_trader"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/test_backfill_fixes.py",
      "id": "ai_trader.scripts.test_backfill_fixes"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/run_layer1_backfill.py",
      "id": "ai_trader.scripts.run_layer1_backfill"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/deploy_database_optimizations.py",
      "id": "ai_trader.scripts.deploy_database_optimizations"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/validate_db_empty.py",
      "id": "ai_trader.scripts.validate_db_empty"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/debug_layer1_aa.py",
      "id": "ai_trader.scripts.debug_layer1_aa"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/analyze_archive_duplicates.py",
      "id": "ai_trader.scripts.analyze_archive_duplicates"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/test_ml_trading.py",
      "id": "ai_trader.scripts.test_ml_trading"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/code_analyzer.py",
      "id": "ai_trader.scripts.code_analyzer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/health_check.py",
      "id": "ai_trader.scripts.health_check"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/init_database.py",
      "id": "ai_trader.scripts.init_database"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/test_polygon_reference.py",
      "id": "ai_trader.scripts.test_polygon_reference"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/test_tsla_scanner_pipeline.py",
      "id": "ai_trader.scripts.test_tsla_scanner_pipeline"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/load_datalake_to_db.py",
      "id": "ai_trader.scripts.load_datalake_to_db"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/validate_tsla_backfill.py",
      "id": "ai_trader.scripts.validate_tsla_backfill"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/deploy_ml_model.py",
      "id": "ai_trader.scripts.deploy_ml_model"
    },
    {
      "id": "joblib"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/discover_stat_arb_pairs.py",
      "id": "ai_trader.scripts.discover_stat_arb_pairs"
    },
    {
      "id": "itertools"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/run_migration.py",
      "id": "ai_trader.scripts.run_migration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/research/run_simple_backtest.py",
      "id": "ai_trader.scripts.research.run_simple_backtest"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/migrations/migrate_features_table.py",
      "id": "ai_trader.scripts.migrations.migrate_features_table"
    },
    {
      "id": "asyncpg"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/migrations/migrate_to_layer_system_direct.py",
      "id": "ai_trader.scripts.migrations.migrate_to_layer_system_direct"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/migrations/migrate_to_layer_system.py",
      "id": "ai_trader.scripts.migrations.migrate_to_layer_system"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/migrations/rollback_layer_migration.py",
      "id": "ai_trader.scripts.migrations.rollback_layer_migration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/analysis/discover_features.py",
      "id": "ai_trader.scripts.analysis.discover_features"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/scheduler/master_scheduler.py",
      "id": "ai_trader.scripts.scheduler.master_scheduler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/testing/test_webhook.py",
      "id": "ai_trader.scripts.testing.test_webhook"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/maintenance/migrate_data_lake.py",
      "id": "ai_trader.scripts.maintenance.migrate_data_lake"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/scripts/maintenance/compress_cache.py",
      "id": "ai_trader.scripts.maintenance.compress_cache"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/test_helpers/test_position_manager.py",
      "id": "ai_trader.test_helpers.test_position_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/__init__.py",
      "id": "ai_trader.src.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/tests/test_scanner_to_backfill_e2e.py",
      "id": "ai_trader.src.tests.test_scanner_to_backfill_e2e"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/tests/integration/test_layer_migration_e2e.py",
      "id": "ai_trader.src.tests.integration.test_layer_migration_e2e"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/__init__.py",
      "id": "ai_trader.src.main.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.__init__"
    },
    {
      "id": "core"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/types.py",
      "id": "ai_trader.src.main.data_pipeline.types"
    },
    {
      "id": "enum"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/alpaca_assets_client.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.alpaca_assets_client"
    },
    {
      "id": "alpaca"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/clients/base_client.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.clients.base_client"
    },
    {
      "id": "abc"
    },
    {
      "id": "aiohttp"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/clients/polygon_corporate_actions_client.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_corporate_actions_client"
    },
    {
      "id": "base_client"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/clients/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.clients.__init__"
    },
    {
      "id": "polygon_market_client"
    },
    {
      "id": "polygon_news_client"
    },
    {
      "id": "polygon_fundamentals_client"
    },
    {
      "id": "polygon_corporate_actions_client"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/clients/polygon_fundamentals_client.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_fundamentals_client"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/clients/polygon_news_client.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_news_client"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/clients/polygon_market_client.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_market_client"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/factories/bulk_loader_factory.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.factories.bulk_loader_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/factories/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.factories.__init__"
    },
    {
      "id": "fundamentals_format_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/factories/fundamentals_format_factory.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.factories.fundamentals_format_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/loaders/fundamentals.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.loaders.fundamentals"
    },
    {
      "id": "base"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/loaders/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.loaders.__init__"
    },
    {
      "id": "market_data"
    },
    {
      "id": "market_data_split"
    },
    {
      "id": "news"
    },
    {
      "id": "fundamentals"
    },
    {
      "id": "corporate_actions"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/loaders/market_data_split.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data_split"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/loaders/corporate_actions.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.loaders.corporate_actions"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/loaders/market_data.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data"
    },
    {
      "id": "csv"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/loaders/base.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.loaders.base"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/ingestion/loaders/news.py",
      "id": "ai_trader.src.main.data_pipeline.ingestion.loaders.news"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/core/enums.py",
      "id": "ai_trader.src.main.data_pipeline.core.enums"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/core/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.core.__init__"
    },
    {
      "id": "enums"
    },
    {
      "id": "exceptions"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/core/exceptions.py",
      "id": "ai_trader.src.main.data_pipeline.core.exceptions"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/core/base_classes/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.core.base_classes.__init__"
    },
    {
      "id": "base_processor"
    },
    {
      "id": "base_manager"
    },
    {
      "id": "base_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/core/base_classes/base_manager.py",
      "id": "ai_trader.src.main.data_pipeline.core.base_classes.base_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/core/base_classes/base_service.py",
      "id": "ai_trader.src.main.data_pipeline.core.base_classes.base_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/core/base_classes/base_processor.py",
      "id": "ai_trader.src.main.data_pipeline.core.base_classes.base_processor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.processing.__init__"
    },
    {
      "id": "transformers"
    },
    {
      "id": "standardizers"
    },
    {
      "id": "cleaners"
    },
    {
      "id": "validators"
    },
    {
      "id": "etl"
    },
    {
      "id": "orchestrator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/orchestrator.py",
      "id": "ai_trader.src.main.data_pipeline.processing.orchestrator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/cleaners/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.processing.cleaners.__init__"
    },
    {
      "id": "data_cleaner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/cleaners/data_cleaner.py",
      "id": "ai_trader.src.main.data_pipeline.processing.cleaners.data_cleaner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/etl/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.processing.etl.__init__"
    },
    {
      "id": "etl_manager"
    },
    {
      "id": "loader_coordinator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/etl/etl_manager.py",
      "id": "ai_trader.src.main.data_pipeline.processing.etl.etl_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/etl/loader_coordinator.py",
      "id": "ai_trader.src.main.data_pipeline.processing.etl.loader_coordinator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/transformers/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.processing.transformers.__init__"
    },
    {
      "id": "base_transformer"
    },
    {
      "id": "data_transformer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/transformers/data_transformer.py",
      "id": "ai_trader.src.main.data_pipeline.processing.transformers.data_transformer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/transformers/base_transformer.py",
      "id": "ai_trader.src.main.data_pipeline.processing.transformers.base_transformer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/validators/pipeline_validator.py",
      "id": "ai_trader.src.main.data_pipeline.processing.validators.pipeline_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/validators/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.processing.validators.__init__"
    },
    {
      "id": "pipeline_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/standardizers/data_standardizer.py",
      "id": "ai_trader.src.main.data_pipeline.processing.standardizers.data_standardizer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/processing/standardizers/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.processing.standardizers.__init__"
    },
    {
      "id": "data_standardizer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/dual_storage_startup.py",
      "id": "ai_trader.src.main.data_pipeline.storage.dual_storage_startup"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/archive_initializer.py",
      "id": "ai_trader.src.main.data_pipeline.storage.archive_initializer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/storage_router.py",
      "id": "ai_trader.src.main.data_pipeline.storage.storage_router"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/database_factory.py",
      "id": "ai_trader.src.main.data_pipeline.storage.database_factory"
    },
    {
      "id": "database_adapter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/database_adapter.py",
      "id": "ai_trader.src.main.data_pipeline.storage.database_adapter"
    },
    {
      "id": "contextlib"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/archive/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.storage.archive.__init__"
    },
    {
      "id": "data_archive"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/archive/data_archive.py",
      "id": "ai_trader.src.main.data_pipeline.storage.archive.data_archive"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/bulk_loaders/fundamentals.py",
      "id": "ai_trader.src.main.data_pipeline.storage.bulk_loaders.fundamentals"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/bulk_loaders/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.storage.bulk_loaders.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/bulk_loaders/market_data_split.py",
      "id": "ai_trader.src.main.data_pipeline.storage.bulk_loaders.market_data_split"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/bulk_loaders/corporate_actions.py",
      "id": "ai_trader.src.main.data_pipeline.storage.bulk_loaders.corporate_actions"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/bulk_loaders/news.py",
      "id": "ai_trader.src.main.data_pipeline.storage.bulk_loaders.news"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/news_repository.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.news_repository"
    },
    {
      "id": "base_repository"
    },
    {
      "id": "helpers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/base_repository_coordinator.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_coordinator"
    },
    {
      "id": "repository_patterns"
    },
    {
      "id": "repository_query_builder"
    },
    {
      "id": "repository_core_operations"
    },
    {
      "id": "repository_query_processor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/base_repository.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository"
    },
    {
      "id": "base_repository_coordinator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/models.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.models"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/feature_repository.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository"
    },
    {
      "id": "constants"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/repository_query_processor.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.repository_query_processor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/specialized_repositories.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.specialized_repositories"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/repository_factory.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory"
    },
    {
      "id": "market_data_repository"
    },
    {
      "id": "company_repository"
    },
    {
      "id": "feature_repository"
    },
    {
      "id": "scanner_data_repository"
    },
    {
      "id": "news_repository"
    },
    {
      "id": "financials_repository"
    },
    {
      "id": "specialized_repositories"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/constants.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.constants"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.__init__"
    },
    {
      "id": "repository_types"
    },
    {
      "id": "repository_factory"
    },
    {
      "id": "repository_provider"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/financials_repository.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.financials_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/scanner_data_repository.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.scanner_data_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/company_repository.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.company_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/repository_provider.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.repository_provider"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/repository_patterns.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.repository_patterns"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/repository_core_operations.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.repository_core_operations"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/repository_types.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.repository_types"
    },
    {
      "id": "copy"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/base_repository_original.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_original"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/repository_query_builder.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.repository_query_builder"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/market_data_repository.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.market_data_repository"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/helpers/technical_analyzer.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.technical_analyzer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/helpers/batch_processor.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.batch_processor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/helpers/query_builder.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.query_builder"
    },
    {
      "id": "sql_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/helpers/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.__init__"
    },
    {
      "id": "query_builder"
    },
    {
      "id": "record_validator"
    },
    {
      "id": "batch_processor"
    },
    {
      "id": "crud_executor"
    },
    {
      "id": "metrics_collector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/helpers/pattern_detector.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.pattern_detector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/helpers/metrics_collector.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.metrics_collector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/helpers/crud_executor.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.crud_executor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/helpers/record_validator.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.record_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/storage/repositories/helpers/sql_validator.py",
      "id": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.sql_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/historical/timeline_analyzer.py",
      "id": "ai_trader.src.main.data_pipeline.historical.timeline_analyzer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/historical/gap_detection_service.py",
      "id": "ai_trader.src.main.data_pipeline.historical.gap_detection_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/historical/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.historical.__init__"
    },
    {
      "id": "data_fetch_service"
    },
    {
      "id": "gap_detection_service"
    },
    {
      "id": "etl_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/historical/data_fetch_service.py",
      "id": "ai_trader.src.main.data_pipeline.historical.data_fetch_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/historical/etl_service.py",
      "id": "ai_trader.src.main.data_pipeline.historical.etl_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/historical/gap_priority_calculator.py",
      "id": "ai_trader.src.main.data_pipeline.historical.gap_priority_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/historical/data_existence_checker.py",
      "id": "ai_trader.src.main.data_pipeline.historical.data_existence_checker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/historical/gap_analyzer.py",
      "id": "ai_trader.src.main.data_pipeline.historical.gap_analyzer"
    },
    {
      "id": "timeline_analyzer"
    },
    {
      "id": "data_existence_checker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/historical/gap_detection_coordinator.py",
      "id": "ai_trader.src.main.data_pipeline.historical.gap_detection_coordinator"
    },
    {
      "id": "gap_analyzer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/orchestration/retention_manager.py",
      "id": "ai_trader.src.main.data_pipeline.orchestration.retention_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/orchestration/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.orchestration.__init__"
    },
    {
      "id": "layer_manager"
    },
    {
      "id": "retention_manager"
    },
    {
      "id": "event_coordinator"
    },
    {
      "id": "coordinators"
    },
    {
      "id": "unified_pipeline"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/orchestration/unified_pipeline.py",
      "id": "ai_trader.src.main.data_pipeline.orchestration.unified_pipeline"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/orchestration/layer_manager.py",
      "id": "ai_trader.src.main.data_pipeline.orchestration.layer_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/orchestration/event_coordinator.py",
      "id": "ai_trader.src.main.data_pipeline.orchestration.event_coordinator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/orchestration/coordinators/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.orchestration.coordinators.__init__"
    },
    {
      "id": "layer_coordinator"
    },
    {
      "id": "data_fetch_coordinator"
    },
    {
      "id": "storage_coordinator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/orchestration/coordinators/storage_coordinator.py",
      "id": "ai_trader.src.main.data_pipeline.orchestration.coordinators.storage_coordinator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/orchestration/coordinators/data_fetch_coordinator.py",
      "id": "ai_trader.src.main.data_pipeline.orchestration.coordinators.data_fetch_coordinator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/orchestration/coordinators/layer_coordinator.py",
      "id": "ai_trader.src.main.data_pipeline.orchestration.coordinators.layer_coordinator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.services.__init__"
    },
    {
      "id": "container"
    },
    {
      "id": "ingestion"
    },
    {
      "id": "storage"
    },
    {
      "id": "processing"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/ingestion/text_processing_service.py",
      "id": "ai_trader.src.main.data_pipeline.services.ingestion.text_processing_service"
    },
    {
      "id": "html"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/ingestion/polygon_api_handler.py",
      "id": "ai_trader.src.main.data_pipeline.services.ingestion.polygon_api_handler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/ingestion/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.services.ingestion.__init__"
    },
    {
      "id": "deduplication_service"
    },
    {
      "id": "text_processing_service"
    },
    {
      "id": "metric_extraction_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/ingestion/deduplication_service.py",
      "id": "ai_trader.src.main.data_pipeline.services.ingestion.deduplication_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/ingestion/metric_extraction_service.py",
      "id": "ai_trader.src.main.data_pipeline.services.ingestion.metric_extraction_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/processing/corporate_actions_service.py",
      "id": "ai_trader.src.main.data_pipeline.services.processing.corporate_actions_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/processing/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.services.processing.__init__"
    },
    {
      "id": "corporate_actions_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/processing/action_processors/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.services.processing.action_processors.__init__"
    },
    {
      "id": "dividend"
    },
    {
      "id": "split"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/processing/action_processors/split.py",
      "id": "ai_trader.src.main.data_pipeline.services.processing.action_processors.split"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/processing/action_processors/dividend.py",
      "id": "ai_trader.src.main.data_pipeline.services.processing.action_processors.dividend"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/processing/action_processors/base.py",
      "id": "ai_trader.src.main.data_pipeline.services.processing.action_processors.base"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/format_handlers/yahoo.py",
      "id": "ai_trader.src.main.data_pipeline.services.format_handlers.yahoo"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/format_handlers/polygon.py",
      "id": "ai_trader.src.main.data_pipeline.services.format_handlers.polygon"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/format_handlers/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.services.format_handlers.__init__"
    },
    {
      "id": "polygon"
    },
    {
      "id": "yahoo"
    },
    {
      "id": "preprocessed"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/format_handlers/preprocessed.py",
      "id": "ai_trader.src.main.data_pipeline.services.format_handlers.preprocessed"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/format_handlers/base.py",
      "id": "ai_trader.src.main.data_pipeline.services.format_handlers.base"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/storage/qualification_service.py",
      "id": "ai_trader.src.main.data_pipeline.services.storage.qualification_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/storage/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.services.storage.__init__"
    },
    {
      "id": "qualification_service"
    },
    {
      "id": "table_routing_service"
    },
    {
      "id": "partition_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/storage/table_routing_service.py",
      "id": "ai_trader.src.main.data_pipeline.services.storage.table_routing_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/storage/partition_manager.py",
      "id": "ai_trader.src.main.data_pipeline.services.storage.partition_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/container/service_container.py",
      "id": "ai_trader.src.main.data_pipeline.services.container.service_container"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/services/container/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.services.container.__init__"
    },
    {
      "id": "service_container"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.__init__"
    },
    {
      "id": "quality"
    },
    {
      "id": "metrics"
    },
    {
      "id": "utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/prometheus_exporter.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.prometheus_exporter"
    },
    {
      "id": "exporters"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/validation_stats_reporter.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.validation_stats_reporter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.__init__"
    },
    {
      "id": "validation_metrics"
    },
    {
      "id": "prometheus_exporter"
    },
    {
      "id": "dashboard_generator"
    },
    {
      "id": "validation_stats_reporter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/dashboard_generator.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard_generator"
    },
    {
      "id": "dashboard"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/validation_metrics.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.validation_metrics"
    },
    {
      "id": "functools"
    },
    {
      "id": "collectors"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/collectors/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.__init__"
    },
    {
      "id": "metric_aggregators"
    },
    {
      "id": "active_tracker"
    },
    {
      "id": "dashboard_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/collectors/metrics_collector.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metrics_collector"
    },
    {
      "id": "legacy_compatibility"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/collectors/active_tracker.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.active_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/collectors/dashboard_config.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.dashboard_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/collectors/legacy_compatibility.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.legacy_compatibility"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/collectors/metric_aggregators.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metric_aggregators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/exporters/prometheus_exporter.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_exporter"
    },
    {
      "id": "prometheus_registry"
    },
    {
      "id": "metric_processors"
    },
    {
      "id": "metric_formatters"
    },
    {
      "id": "prometheus_client"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/exporters/prometheus_registry.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_registry"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/exporters/metric_formatters.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_formatters"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/exporters/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/exporters/metric_processors.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_processors"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/dashboard/grafana_config.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.grafana_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/dashboard/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.__init__"
    },
    {
      "id": "grafana_config"
    },
    {
      "id": "panel_builders"
    },
    {
      "id": "alert_rules"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/dashboard/alert_rules.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.alert_rules"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/dashboard/panel_builders.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.panel_builders"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/metrics/dashboard/dashboard_generator.py",
      "id": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.dashboard_generator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/core/validation_pipeline.py",
      "id": "ai_trader.src.main.data_pipeline.validation.core.validation_pipeline"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/core/validation_stage_factory.py",
      "id": "ai_trader.src.main.data_pipeline.validation.core.validation_stage_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/core/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.core.__init__"
    },
    {
      "id": "validation_pipeline"
    },
    {
      "id": "validation_factory"
    },
    {
      "id": "validation_stage_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/core/validation_types.py",
      "id": "ai_trader.src.main.data_pipeline.validation.core.validation_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/core/validation_factory.py",
      "id": "ai_trader.src.main.data_pipeline.validation.core.validation_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/core/stage_validators.py",
      "id": "ai_trader.src.main.data_pipeline.validation.core.stage_validators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/quality/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.quality.__init__"
    },
    {
      "id": "data_quality_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/quality/data_cleaner.py",
      "id": "ai_trader.src.main.data_pipeline.validation.quality.data_cleaner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/quality/data_quality_calculator.py",
      "id": "ai_trader.src.main.data_pipeline.validation.quality.data_quality_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/config/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.config.__init__"
    },
    {
      "id": "validation_profile_manager"
    },
    {
      "id": "validation_rules_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/config/validation_rules_engine.py",
      "id": "ai_trader.src.main.data_pipeline.validation.config.validation_rules_engine"
    },
    {
      "id": "rules"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/config/validation_profile_manager.py",
      "id": "ai_trader.src.main.data_pipeline.validation.config.validation_profile_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/utils/cache_manager.py",
      "id": "ai_trader.src.main.data_pipeline.validation.utils.cache_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/utils/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.utils.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/rules/rule_registry.py",
      "id": "ai_trader.src.main.data_pipeline.validation.rules.rule_registry"
    },
    {
      "id": "rule_definitions"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/rules/rule_definitions.py",
      "id": "ai_trader.src.main.data_pipeline.validation.rules.rule_definitions"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/rules/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.rules.__init__"
    },
    {
      "id": "rule_parser"
    },
    {
      "id": "rule_executor"
    },
    {
      "id": "rule_registry"
    },
    {
      "id": "rules_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/rules/rule_parser.py",
      "id": "ai_trader.src.main.data_pipeline.validation.rules.rule_parser"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/rules/rule_executor.py",
      "id": "ai_trader.src.main.data_pipeline.validation.rules.rule_executor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/rules/rules_engine.py",
      "id": "ai_trader.src.main.data_pipeline.validation.rules.rules_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/validators/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.validators.__init__"
    },
    {
      "id": "feature_validator"
    },
    {
      "id": "market_data_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/validators/market_data_validator.py",
      "id": "ai_trader.src.main.data_pipeline.validation.validators.market_data_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/validators/record_validator.py",
      "id": "ai_trader.src.main.data_pipeline.validation.validators.record_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/validators/feature_validator.py",
      "id": "ai_trader.src.main.data_pipeline.validation.validators.feature_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/coverage/data_coverage_analyzer.py",
      "id": "ai_trader.src.main.data_pipeline.validation.coverage.data_coverage_analyzer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/data_pipeline/validation/coverage/__init__.py",
      "id": "ai_trader.src.main.data_pipeline.validation.coverage.__init__"
    },
    {
      "id": "data_coverage_analyzer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/__init__.py",
      "id": "ai_trader.src.main.backtesting.__init__"
    },
    {
      "id": "factories"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/factories.py",
      "id": "ai_trader.src.main.backtesting.factories"
    },
    {
      "id": "engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/run_system_backtest.py",
      "id": "ai_trader.src.main.backtesting.run_system_backtest"
    },
    {
      "id": "analysis"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/analysis/validation_suite.py",
      "id": "ai_trader.src.main.backtesting.analysis.validation_suite"
    },
    {
      "id": "performance_metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/analysis/symbol_selector.py",
      "id": "ai_trader.src.main.backtesting.analysis.symbol_selector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/analysis/correlation_matrix.py",
      "id": "ai_trader.src.main.backtesting.analysis.correlation_matrix"
    },
    {
      "id": "scipy"
    },
    {
      "id": "sklearn"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/analysis/performance_metrics.py",
      "id": "ai_trader.src.main.backtesting.analysis.performance_metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/analysis/__init__.py",
      "id": "ai_trader.src.main.backtesting.analysis.__init__"
    },
    {
      "id": "risk_analysis"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/analysis/risk_analysis.py",
      "id": "ai_trader.src.main.backtesting.analysis.risk_analysis"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/optimization/__init__.py",
      "id": "ai_trader.src.main.backtesting.optimization.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/engine/bar_aggregator.py",
      "id": "ai_trader.src.main.backtesting.engine.bar_aggregator"
    },
    {
      "id": "backtest_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/engine/__init__.py",
      "id": "ai_trader.src.main.backtesting.engine.__init__"
    },
    {
      "id": "cost_model"
    },
    {
      "id": "market_simulator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/engine/backtest_engine.py",
      "id": "ai_trader.src.main.backtesting.engine.backtest_engine"
    },
    {
      "id": "heapq"
    },
    {
      "id": "portfolio"
    },
    {
      "id": "bar_aggregator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/engine/cost_model.py",
      "id": "ai_trader.src.main.backtesting.engine.cost_model"
    },
    {
      "id": "math"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/engine/portfolio.py",
      "id": "ai_trader.src.main.backtesting.engine.portfolio"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/backtesting/engine/market_simulator.py",
      "id": "ai_trader.src.main.backtesting.engine.market_simulator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/feature_store.py",
      "id": "ai_trader.src.main.feature_pipeline.feature_store"
    },
    {
      "id": "h5py"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/__init__.py",
      "id": "ai_trader.src.main.feature_pipeline.__init__"
    },
    {
      "id": "feature_orchestrator"
    },
    {
      "id": "unified_feature_engine"
    },
    {
      "id": "feature_store"
    },
    {
      "id": "feature_adapter"
    },
    {
      "id": "data_preprocessor"
    },
    {
      "id": "dataloader"
    },
    {
      "id": "feature_config"
    },
    {
      "id": "feature_store_compat"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/feature_store_compat.py",
      "id": "ai_trader.src.main.feature_pipeline.feature_store_compat"
    },
    {
      "id": "target_generator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/feature_config.py",
      "id": "ai_trader.src.main.feature_pipeline.feature_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/unified_feature_engine.py",
      "id": "ai_trader.src.main.feature_pipeline.unified_feature_engine"
    },
    {
      "id": "calculators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/feature_adapter.py",
      "id": "ai_trader.src.main.feature_pipeline.feature_adapter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculator_factory.py",
      "id": "ai_trader.src.main.feature_pipeline.calculator_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/feature_orchestrator.py",
      "id": "ai_trader.src.main.feature_pipeline.feature_orchestrator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/dataloader.py",
      "id": "ai_trader.src.main.feature_pipeline.dataloader"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/target_generator.py",
      "id": "ai_trader.src.main.feature_pipeline.target_generator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/data_preprocessor.py",
      "id": "ai_trader.src.main.feature_pipeline.data_preprocessor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/sentiment_adapter.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.sentiment_adapter"
    },
    {
      "id": "sentiment_features"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/market_regime.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.market_regime"
    },
    {
      "id": "talib"
    },
    {
      "id": "base_calculator"
    },
    {
      "id": "hmmlearn"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/insider_analytics.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/technical_indicators.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.technical_indicators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/base_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.base_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/__init__.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.__init__"
    },
    {
      "id": "technical_indicators"
    },
    {
      "id": "technical"
    },
    {
      "id": "statistical"
    },
    {
      "id": "cross_asset"
    },
    {
      "id": "cross_sectional"
    },
    {
      "id": "enhanced_cross_sectional"
    },
    {
      "id": "correlation"
    },
    {
      "id": "market_regime"
    },
    {
      "id": "microstructure"
    },
    {
      "id": "insider_analytics"
    },
    {
      "id": "sector_analytics"
    },
    {
      "id": "options"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/cross_sectional.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.cross_sectional"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/sentiment_features.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features"
    },
    {
      "id": "textblob"
    },
    {
      "id": "yfinance"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/sector_analytics.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.sector_analytics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/microstructure.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.microstructure"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/enhanced_cross_sectional.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/technical_adapter.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.technical_adapter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/cross_asset.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.cross_asset"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/strategy_affinity_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.strategy_affinity_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/sentiment_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.sentiment_calculator"
    },
    {
      "id": "base_options"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/unusual_activity_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.unusual_activity_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/iv_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.iv_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/moneyness_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.moneyness_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/putcall_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.putcall_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/blackscholes_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.blackscholes_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/volume_flow_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.volume_flow_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/options_config.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.options_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/__init__.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.__init__"
    },
    {
      "id": "options_config"
    },
    {
      "id": "volume_flow_calculator"
    },
    {
      "id": "putcall_calculator"
    },
    {
      "id": "iv_calculator"
    },
    {
      "id": "greeks_calculator"
    },
    {
      "id": "moneyness_calculator"
    },
    {
      "id": "unusual_activity_calculator"
    },
    {
      "id": "sentiment_calculator"
    },
    {
      "id": "blackscholes_calculator"
    },
    {
      "id": "options_analytics_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/base_options.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.base_options"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/options_analytics_facade.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/options/greeks_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.options.greeks_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/correlation/pca_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.correlation.pca_calculator"
    },
    {
      "id": "base_correlation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/correlation/__init__.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.correlation.__init__"
    },
    {
      "id": "correlation_config"
    },
    {
      "id": "rolling_calculator"
    },
    {
      "id": "beta_calculator"
    },
    {
      "id": "stability_calculator"
    },
    {
      "id": "leadlag_calculator"
    },
    {
      "id": "pca_calculator"
    },
    {
      "id": "regime_calculator"
    },
    {
      "id": "enhanced_correlation_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/correlation/correlation_config.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.correlation.correlation_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/correlation/rolling_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.correlation.rolling_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/correlation/regime_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.correlation.regime_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/correlation/leadlag_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.correlation.leadlag_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/correlation/stability_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.correlation.stability_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/correlation/enhanced_correlation_facade.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/correlation/beta_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.correlation.beta_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/correlation/base_correlation.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/news/sentiment_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.news.sentiment_calculator"
    },
    {
      "id": "base_news"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/news/topic_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.news.topic_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/news/__init__.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.news.__init__"
    },
    {
      "id": "news_config"
    },
    {
      "id": "volume_calculator"
    },
    {
      "id": "monetary_calculator"
    },
    {
      "id": "topic_calculator"
    },
    {
      "id": "event_calculator"
    },
    {
      "id": "credibility_calculator"
    },
    {
      "id": "news_feature_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/news/base_news.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.news.base_news"
    },
    {
      "id": "nltk"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/news/news_config.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.news.news_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/news/monetary_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.news.monetary_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/news/volume_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.news.volume_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/news/credibility_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.news.credibility_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/news/news_feature_facade.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/news/event_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.news.event_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/statistical/statistical_config.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.statistical.statistical_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/statistical/entropy_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator"
    },
    {
      "id": "base_statistical"
    },
    {
      "id": "statistical_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/statistical/base_statistical.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.statistical.base_statistical"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/statistical/fractal_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.statistical.fractal_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/statistical/multivariate_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.statistical.multivariate_calculator"
    },
    {
      "id": "pywt"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/statistical/__init__.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.statistical.__init__"
    },
    {
      "id": "entropy_calculator"
    },
    {
      "id": "moments_calculator"
    },
    {
      "id": "fractal_calculator"
    },
    {
      "id": "multivariate_calculator"
    },
    {
      "id": "nonlinear_calculator"
    },
    {
      "id": "timeseries_calculator"
    },
    {
      "id": "advanced_statistical_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/statistical/moments_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.statistical.moments_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/statistical/nonlinear_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.statistical.nonlinear_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/statistical/timeseries_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.statistical.timeseries_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/statistical/advanced_statistical_facade.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/risk/stress_test_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.risk.stress_test_calculator"
    },
    {
      "id": "base_risk"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/risk/volatility_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.risk.volatility_calculator"
    },
    {
      "id": "risk_config"
    },
    {
      "id": "arch"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/risk/__init__.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__"
    },
    {
      "id": "var_calculator"
    },
    {
      "id": "volatility_calculator"
    },
    {
      "id": "drawdown_calculator"
    },
    {
      "id": "performance_calculator"
    },
    {
      "id": "stress_test_calculator"
    },
    {
      "id": "tail_risk_calculator"
    },
    {
      "id": "risk_metrics_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/risk/tail_risk_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.risk.tail_risk_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/risk/performance_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.risk.performance_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/risk/risk_metrics_facade.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/risk/base_risk.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/risk/var_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.risk.var_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/risk/risk_config.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/risk/drawdown_calculator.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.risk.drawdown_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/helpers/math_utils.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.helpers.math_utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/helpers/__init__.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.helpers.__init__"
    },
    {
      "id": "math_utils"
    },
    {
      "id": "validation"
    },
    {
      "id": "feature_utils"
    },
    {
      "id": "time_utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/helpers/time_utils.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.helpers.time_utils"
    },
    {
      "id": "pytz"
    },
    {
      "id": "pandas_market_calendars"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/helpers/feature_utils.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.helpers.feature_utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/helpers/validation.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.helpers.validation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/technical/volume_indicators.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.technical.volume_indicators"
    },
    {
      "id": "base_technical"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/technical/__init__.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.technical.__init__"
    },
    {
      "id": "trend_indicators"
    },
    {
      "id": "momentum_indicators"
    },
    {
      "id": "volatility_indicators"
    },
    {
      "id": "volume_indicators"
    },
    {
      "id": "adaptive_indicators"
    },
    {
      "id": "unified_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/technical/trend_indicators.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.technical.trend_indicators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/technical/base_technical.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.technical.base_technical"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/technical/volatility_indicators.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.technical.volatility_indicators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/technical/adaptive_indicators.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.technical.adaptive_indicators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/technical/momentum_indicators.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.technical.momentum_indicators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/feature_pipeline/calculators/technical/unified_facade.py",
      "id": "ai_trader.src.main.feature_pipeline.calculators.technical.unified_facade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/__init__.py",
      "id": "ai_trader.src.main.app.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/calculate_features.py",
      "id": "ai_trader.src.main.app.calculate_features"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/run_validation.py",
      "id": "ai_trader.src.main.app.run_validation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/process_raw_data.py",
      "id": "ai_trader.src.main.app.process_raw_data"
    },
    {
      "id": "typer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/emergency_shutdown.py",
      "id": "ai_trader.src.main.app.emergency_shutdown"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/historical_backfill.py",
      "id": "ai_trader.src.main.app.historical_backfill"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/run_backtest.py",
      "id": "ai_trader.src.main.app.run_backtest"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/commands/scanner_commands.py",
      "id": "ai_trader.src.main.app.commands.scanner_commands"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/commands/__init__.py",
      "id": "ai_trader.src.main.app.commands.__init__"
    },
    {
      "id": "trading_commands"
    },
    {
      "id": "data_commands"
    },
    {
      "id": "scanner_commands"
    },
    {
      "id": "universe_commands"
    },
    {
      "id": "utility_commands"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/commands/data_commands.py",
      "id": "ai_trader.src.main.app.commands.data_commands"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/commands/trading_commands.py",
      "id": "ai_trader.src.main.app.commands.trading_commands"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/commands/utility_commands.py",
      "id": "ai_trader.src.main.app.commands.utility_commands"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/app/commands/universe_commands.py",
      "id": "ai_trader.src.main.app.commands.universe_commands"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/field_mappings.py",
      "id": "ai_trader.src.main.config.field_mappings"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/config_manager.py",
      "id": "ai_trader.src.main.config.config_manager"
    },
    {
      "id": "validation_models"
    },
    {
      "id": "validation_utils"
    },
    {
      "id": "env_loader"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/__init__.py",
      "id": "ai_trader.src.main.config.__init__"
    },
    {
      "id": "config_manager"
    },
    {
      "id": "field_mappings"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/validation_utils.py",
      "id": "ai_trader.src.main.config.validation_utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/database_field_mappings.py",
      "id": "ai_trader.src.main.config.database_field_mappings"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/env_loader.py",
      "id": "ai_trader.src.main.config.env_loader"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/validation_models/services.py",
      "id": "ai_trader.src.main.config.validation_models.services"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/validation_models/__init__.py",
      "id": "ai_trader.src.main.config.validation_models.__init__"
    },
    {
      "id": "trading"
    },
    {
      "id": "data"
    },
    {
      "id": "services"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/validation_models/trading.py",
      "id": "ai_trader.src.main.config.validation_models.trading"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/validation_models/core.py",
      "id": "ai_trader.src.main.config.validation_models.core"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/validation_models/main.py",
      "id": "ai_trader.src.main.config.validation_models.main"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/config/validation_models/data.py",
      "id": "ai_trader.src.main.config.validation_models.data"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/__init__.py",
      "id": "ai_trader.src.main.trading_engine.__init__"
    },
    {
      "id": "signals"
    },
    {
      "id": "algorithms"
    },
    {
      "id": "brokers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/brokers/backtest_broker.py",
      "id": "ai_trader.src.main.trading_engine.brokers.backtest_broker"
    },
    {
      "id": "broker_interface"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/brokers/paper_broker.py",
      "id": "ai_trader.src.main.trading_engine.brokers.paper_broker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/brokers/ib_broker.py",
      "id": "ai_trader.src.main.trading_engine.brokers.ib_broker"
    },
    {
      "id": "ib_insync"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/brokers/__init__.py",
      "id": "ai_trader.src.main.trading_engine.brokers.__init__"
    },
    {
      "id": "broker_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/brokers/broker_factory.py",
      "id": "ai_trader.src.main.trading_engine.brokers.broker_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/brokers/broker_interface.py",
      "id": "ai_trader.src.main.trading_engine.brokers.broker_interface"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/brokers/mock_broker.py",
      "id": "ai_trader.src.main.trading_engine.brokers.mock_broker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/brokers/alpaca_broker.py",
      "id": "ai_trader.src.main.trading_engine.brokers.alpaca_broker"
    },
    {
      "id": "httpx"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/fast_execution_path.py",
      "id": "ai_trader.src.main.trading_engine.core.fast_execution_path"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/trading_system.py",
      "id": "ai_trader.src.main.trading_engine.core.trading_system"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/tca.py",
      "id": "ai_trader.src.main.trading_engine.core.tca"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/risk_integrated_order_manager.py",
      "id": "ai_trader.src.main.trading_engine.core.risk_integrated_order_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/execution_engine.py",
      "id": "ai_trader.src.main.trading_engine.core.execution_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/__init__.py",
      "id": "ai_trader.src.main.trading_engine.core.__init__"
    },
    {
      "id": "execution_engine"
    },
    {
      "id": "order_manager"
    },
    {
      "id": "portfolio_manager"
    },
    {
      "id": "risk"
    },
    {
      "id": "position_manager"
    },
    {
      "id": "position_tracker"
    },
    {
      "id": "fill_processor"
    },
    {
      "id": "position_validator"
    },
    {
      "id": "position_risk_validator"
    },
    {
      "id": "broker_reconciler"
    },
    {
      "id": "position_events"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/portfolio_manager.py",
      "id": "ai_trader.src.main.trading_engine.core.portfolio_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/position_validator.py",
      "id": "ai_trader.src.main.trading_engine.core.position_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/broker_reconciler.py",
      "id": "ai_trader.src.main.trading_engine.core.broker_reconciler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/position_manager.py",
      "id": "ai_trader.src.main.trading_engine.core.position_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/position_risk_validator.py",
      "id": "ai_trader.src.main.trading_engine.core.position_risk_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/order_manager.py",
      "id": "ai_trader.src.main.trading_engine.core.order_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/fill_processor.py",
      "id": "ai_trader.src.main.trading_engine.core.fill_processor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/position_tracker.py",
      "id": "ai_trader.src.main.trading_engine.core.position_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/core/position_events.py",
      "id": "ai_trader.src.main.trading_engine.core.position_events"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/signals/__init__.py",
      "id": "ai_trader.src.main.trading_engine.signals.__init__"
    },
    {
      "id": "unified_signal"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/signals/unified_signal.py",
      "id": "ai_trader.src.main.trading_engine.signals.unified_signal"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/algorithms/vwap.py",
      "id": "ai_trader.src.main.trading_engine.algorithms.vwap"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/algorithms/twap.py",
      "id": "ai_trader.src.main.trading_engine.algorithms.twap"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/algorithms/__init__.py",
      "id": "ai_trader.src.main.trading_engine.algorithms.__init__"
    },
    {
      "id": "base_algorithm"
    },
    {
      "id": "twap"
    },
    {
      "id": "vwap"
    },
    {
      "id": "iceberg"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/algorithms/iceberg.py",
      "id": "ai_trader.src.main.trading_engine.algorithms.iceberg"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/algorithms/base_algorithm.py",
      "id": "ai_trader.src.main.trading_engine.algorithms.base_algorithm"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/risk/__init__.py",
      "id": "ai_trader.src.main.trading_engine.risk.__init__"
    },
    {
      "id": "risk_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/trading_engine/risk/risk_manager.py",
      "id": "ai_trader.src.main.trading_engine.risk.risk_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/features/__init__.py",
      "id": "ai_trader.src.main.features.__init__"
    },
    {
      "id": "precompute_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/features/precompute_engine.py",
      "id": "ai_trader.src.main.features.precompute_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/app_factory.py",
      "id": "ai_trader.src.main.utils.app_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/layer_utils.py",
      "id": "ai_trader.src.main.utils.layer_utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/math_utils.py",
      "id": "ai_trader.src.main.utils.math_utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/timeout_calculator.py",
      "id": "ai_trader.src.main.utils.timeout_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/layer_metrics.py",
      "id": "ai_trader.src.main.utils.layer_metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring.py",
      "id": "ai_trader.src.main.utils.monitoring"
    },
    {
      "id": "monitoring"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/database.py",
      "id": "ai_trader.src.main.utils.database"
    },
    {
      "id": "database"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/__init__.py",
      "id": "ai_trader.src.main.utils.__init__"
    },
    {
      "id": "auth"
    },
    {
      "id": "events"
    },
    {
      "id": "networking"
    },
    {
      "id": "resilience"
    },
    {
      "id": "state"
    },
    {
      "id": "cache"
    },
    {
      "id": "api"
    },
    {
      "id": "app"
    },
    {
      "id": "app_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core.py",
      "id": "ai_trader.src.main.utils.core"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/exceptions.py",
      "id": "ai_trader.src.main.utils.exceptions"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/alerting/alerting_service.py",
      "id": "ai_trader.src.main.utils.alerting.alerting_service"
    },
    {
      "id": "smtplib"
    },
    {
      "id": "email"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/alerting/__init__.py",
      "id": "ai_trader.src.main.utils.alerting.__init__"
    },
    {
      "id": "alerting_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/database/__init__.py",
      "id": "ai_trader.src.main.utils.database.__init__"
    },
    {
      "id": "pool"
    },
    {
      "id": "operations"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/database/operations.py",
      "id": "ai_trader.src.main.utils.database.operations"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/database/pool.py",
      "id": "ai_trader.src.main.utils.database.pool"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/database/helpers/query_tracker.py",
      "id": "ai_trader.src.main.utils.database.helpers.query_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/database/helpers/connection_metrics.py",
      "id": "ai_trader.src.main.utils.database.helpers.connection_metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/database/helpers/__init__.py",
      "id": "ai_trader.src.main.utils.database.helpers.__init__"
    },
    {
      "id": "connection_metrics"
    },
    {
      "id": "health_monitor"
    },
    {
      "id": "query_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/database/helpers/health_monitor.py",
      "id": "ai_trader.src.main.utils.database.helpers.health_monitor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/async_helpers.py",
      "id": "ai_trader.src.main.utils.core.async_helpers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/json_helpers.py",
      "id": "ai_trader.src.main.utils.core.json_helpers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/logging.py",
      "id": "ai_trader.src.main.utils.core.logging"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/text_helpers.py",
      "id": "ai_trader.src.main.utils.core.text_helpers"
    },
    {
      "id": "difflib"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/exception_types.py",
      "id": "ai_trader.src.main.utils.core.exception_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/__init__.py",
      "id": "ai_trader.src.main.utils.core.__init__"
    },
    {
      "id": "async_helpers"
    },
    {
      "id": "exception_types"
    },
    {
      "id": "time_helpers"
    },
    {
      "id": "file_helpers"
    },
    {
      "id": "secure_random"
    },
    {
      "id": "secure_serializer"
    },
    {
      "id": "error_handling"
    },
    {
      "id": "text_helpers"
    },
    {
      "id": "json_helpers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/time_helpers.py",
      "id": "ai_trader.src.main.utils.core.time_helpers"
    },
    {
      "id": "zoneinfo"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/error_handling.py",
      "id": "ai_trader.src.main.utils.core.error_handling"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/secure_serializer.py",
      "id": "ai_trader.src.main.utils.core.secure_serializer"
    },
    {
      "id": "pickle"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/file_helpers.py",
      "id": "ai_trader.src.main.utils.core.file_helpers"
    },
    {
      "id": "aiofiles"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/core/secure_random.py",
      "id": "ai_trader.src.main.utils.core.secure_random"
    },
    {
      "id": "secrets"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/app/__init__.py",
      "id": "ai_trader.src.main.utils.app.__init__"
    },
    {
      "id": "context"
    },
    {
      "id": "cli"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/app/context.py",
      "id": "ai_trader.src.main.utils.app.context"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/app/cli.py",
      "id": "ai_trader.src.main.utils.app.cli"
    },
    {
      "id": "rich"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/app/validation.py",
      "id": "ai_trader.src.main.utils.app.validation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/cache/metrics.py",
      "id": "ai_trader.src.main.utils.cache.metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/cache/background_tasks.py",
      "id": "ai_trader.src.main.utils.cache.background_tasks"
    },
    {
      "id": "backends"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/cache/models.py",
      "id": "ai_trader.src.main.utils.cache.models"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/cache/compression.py",
      "id": "ai_trader.src.main.utils.cache.compression"
    },
    {
      "id": "gzip"
    },
    {
      "id": "zlib"
    },
    {
      "id": "lz4"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/cache/__init__.py",
      "id": "ai_trader.src.main.utils.cache.__init__"
    },
    {
      "id": "keys"
    },
    {
      "id": "compression"
    },
    {
      "id": "background_tasks"
    },
    {
      "id": "simple_cache"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/cache/keys.py",
      "id": "ai_trader.src.main.utils.cache.keys"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/cache/types.py",
      "id": "ai_trader.src.main.utils.cache.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/cache/backends.py",
      "id": "ai_trader.src.main.utils.cache.backends"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/cache/simple_cache.py",
      "id": "ai_trader.src.main.utils.cache.simple_cache"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/config/wrapper.py",
      "id": "ai_trader.src.main.utils.config.wrapper"
    },
    {
      "id": "schema"
    },
    {
      "id": "sources"
    },
    {
      "id": "loaders"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/config/persistence.py",
      "id": "ai_trader.src.main.utils.config.persistence"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/config/global_config.py",
      "id": "ai_trader.src.main.utils.config.global_config"
    },
    {
      "id": "wrapper"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/config/loaders.py",
      "id": "ai_trader.src.main.utils.config.loaders"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/config/__init__.py",
      "id": "ai_trader.src.main.utils.config.__init__"
    },
    {
      "id": "optimizer"
    },
    {
      "id": "templates"
    },
    {
      "id": "persistence"
    },
    {
      "id": "global_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/config/types.py",
      "id": "ai_trader.src.main.utils.config.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/config/templates.py",
      "id": "ai_trader.src.main.utils.config.templates"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/config/sources.py",
      "id": "ai_trader.src.main.utils.config.sources"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/config/optimizer.py",
      "id": "ai_trader.src.main.utils.config.optimizer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/config/schema.py",
      "id": "ai_trader.src.main.utils.config.schema"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/security/__init__.py",
      "id": "ai_trader.src.main.utils.security.__init__"
    },
    {
      "id": "sql_security"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/security/sql_security.py",
      "id": "ai_trader.src.main.utils.security.sql_security"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/auth/validator.py",
      "id": "ai_trader.src.main.utils.auth.validator"
    },
    {
      "id": "security_checks"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/auth/validators.py",
      "id": "ai_trader.src.main.utils.auth.validators"
    },
    {
      "id": "base64"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/auth/__init__.py",
      "id": "ai_trader.src.main.utils.auth.__init__"
    },
    {
      "id": "validator"
    },
    {
      "id": "generators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/auth/types.py",
      "id": "ai_trader.src.main.utils.auth.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/auth/generators.py",
      "id": "ai_trader.src.main.utils.auth.generators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/auth/security_checks.py",
      "id": "ai_trader.src.main.utils.auth.security_checks"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/processing/__init__.py",
      "id": "ai_trader.src.main.utils.processing.__init__"
    },
    {
      "id": "streaming"
    },
    {
      "id": "historical"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/processing/historical.py",
      "id": "ai_trader.src.main.utils.processing.historical"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/processing/streaming.py",
      "id": "ai_trader.src.main.utils.processing.streaming"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/market_data/cache.py",
      "id": "ai_trader.src.main.utils.market_data.cache"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/market_data/__init__.py",
      "id": "ai_trader.src.main.utils.market_data.__init__"
    },
    {
      "id": "universe_loader"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/market_data/universe_loader.py",
      "id": "ai_trader.src.main.utils.market_data.universe_loader"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/networking/__init__.py",
      "id": "ai_trader.src.main.utils.networking.__init__"
    },
    {
      "id": "buffering"
    },
    {
      "id": "connection"
    },
    {
      "id": "failover"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/networking/failover.py",
      "id": "ai_trader.src.main.utils.networking.failover"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/networking/types.py",
      "id": "ai_trader.src.main.utils.networking.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/networking/connection.py",
      "id": "ai_trader.src.main.utils.networking.connection"
    },
    {
      "id": "websockets"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/networking/optimizer.py",
      "id": "ai_trader.src.main.utils.networking.optimizer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/networking/buffering.py",
      "id": "ai_trader.src.main.utils.networking.buffering"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/state/persistence.py",
      "id": "ai_trader.src.main.utils.state.persistence"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/state/__init__.py",
      "id": "ai_trader.src.main.utils.state.__init__"
    },
    {
      "id": "manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/state/types.py",
      "id": "ai_trader.src.main.utils.state.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/state/backends.py",
      "id": "ai_trader.src.main.utils.state.backends"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/state/context.py",
      "id": "ai_trader.src.main.utils.state.context"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/state/manager.py",
      "id": "ai_trader.src.main.utils.state.manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/time/interval_utils.py",
      "id": "ai_trader.src.main.utils.time.interval_utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/resilience/strategies.py",
      "id": "ai_trader.src.main.utils.resilience.strategies"
    },
    {
      "id": "circuit_breaker"
    },
    {
      "id": "error_recovery"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/resilience/__init__.py",
      "id": "ai_trader.src.main.utils.resilience.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/resilience/error_recovery.py",
      "id": "ai_trader.src.main.utils.resilience.error_recovery"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/resilience/circuit_breaker.py",
      "id": "ai_trader.src.main.utils.resilience.circuit_breaker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/review/pattern_check.py",
      "id": "ai_trader.src.main.utils.review.pattern_check"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/review/syntax_check.py",
      "id": "ai_trader.src.main.utils.review.syntax_check"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/factories/services.py",
      "id": "ai_trader.src.main.utils.factories.services"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/factories/di_container.py",
      "id": "ai_trader.src.main.utils.factories.di_container"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/factories/__init__.py",
      "id": "ai_trader.src.main.utils.factories.__init__"
    },
    {
      "id": "utility_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/factories/utility_manager.py",
      "id": "ai_trader.src.main.utils.factories.utility_manager"
    },
    {
      "id": "weakref"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/scanners/query_builder.py",
      "id": "ai_trader.src.main.utils.scanners.query_builder"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/scanners/cache_manager.py",
      "id": "ai_trader.src.main.utils.scanners.cache_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/scanners/__init__.py",
      "id": "ai_trader.src.main.utils.scanners.__init__"
    },
    {
      "id": "data_access"
    },
    {
      "id": "cache_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/scanners/data_access.py",
      "id": "ai_trader.src.main.utils.scanners.data_access"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/scanners/metrics_collector.py",
      "id": "ai_trader.src.main.utils.scanners.metrics_collector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/api/base_client.py",
      "id": "ai_trader.src.main.utils.api.base_client"
    },
    {
      "id": "backoff"
    },
    {
      "id": "rate_monitor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/api/__init__.py",
      "id": "ai_trader.src.main.utils.api.__init__"
    },
    {
      "id": "session_helpers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/api/session_helpers.py",
      "id": "ai_trader.src.main.utils.api.session_helpers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/api/rate_monitor.py",
      "id": "ai_trader.src.main.utils.api.rate_monitor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/alerts.py",
      "id": "ai_trader.src.main.utils.monitoring.alerts"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/metrics.py",
      "id": "ai_trader.src.main.utils.monitoring.metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/dashboard_adapters.py",
      "id": "ai_trader.src.main.utils.monitoring.dashboard_adapters"
    },
    {
      "id": "global_monitor"
    },
    {
      "id": "migration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/dashboard_factory.py",
      "id": "ai_trader.src.main.utils.monitoring.dashboard_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/collectors.py",
      "id": "ai_trader.src.main.utils.monitoring.collectors"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/monitor.py",
      "id": "ai_trader.src.main.utils.monitoring.monitor"
    },
    {
      "id": "function_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/function_tracker.py",
      "id": "ai_trader.src.main.utils.monitoring.function_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/memory.py",
      "id": "ai_trader.src.main.utils.monitoring.memory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/rate_monitor_dashboard.py",
      "id": "ai_trader.src.main.utils.monitoring.rate_monitor_dashboard"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/__init__.py",
      "id": "ai_trader.src.main.utils.monitoring.__init__"
    },
    {
      "id": "monitor"
    },
    {
      "id": "memory"
    },
    {
      "id": "dashboard_factory"
    },
    {
      "id": "metrics_utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/types.py",
      "id": "ai_trader.src.main.utils.monitoring.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/global_monitor.py",
      "id": "ai_trader.src.main.utils.monitoring.global_monitor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/metrics_adapter.py",
      "id": "ai_trader.src.main.utils.monitoring.metrics_adapter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/examples.py",
      "id": "ai_trader.src.main.utils.monitoring.examples"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/enhanced.py",
      "id": "ai_trader.src.main.utils.monitoring.enhanced"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/migration.py",
      "id": "ai_trader.src.main.utils.monitoring.migration"
    },
    {
      "id": "enhanced"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/alerts/__init__.py",
      "id": "ai_trader.src.main.utils.monitoring.alerts.__init__"
    },
    {
      "id": "email_channel"
    },
    {
      "id": "slack_channel"
    },
    {
      "id": "sms_channel"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/alerts/sms_channel.py",
      "id": "ai_trader.src.main.utils.monitoring.alerts.sms_channel"
    },
    {
      "id": "twilio"
    },
    {
      "id": "boto3"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/alerts/slack_channel.py",
      "id": "ai_trader.src.main.utils.monitoring.alerts.slack_channel"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/alerts/email_channel.py",
      "id": "ai_trader.src.main.utils.monitoring.alerts.email_channel"
    },
    {
      "id": "ssl"
    },
    {
      "id": "jinja2"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/metrics_utils/exporter.py",
      "id": "ai_trader.src.main.utils.monitoring.metrics_utils.exporter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/metrics_utils/__init__.py",
      "id": "ai_trader.src.main.utils.monitoring.metrics_utils.__init__"
    },
    {
      "id": "buffer"
    },
    {
      "id": "exporter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/monitoring/metrics_utils/buffer.py",
      "id": "ai_trader.src.main.utils.monitoring.metrics_utils.buffer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/events/mixin.py",
      "id": "ai_trader.src.main.utils.events.mixin"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/events/__init__.py",
      "id": "ai_trader.src.main.utils.events.__init__"
    },
    {
      "id": "mixin"
    },
    {
      "id": "decorators"
    },
    {
      "id": "global_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/events/types.py",
      "id": "ai_trader.src.main.utils.events.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/events/global_manager.py",
      "id": "ai_trader.src.main.utils.events.global_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/events/manager.py",
      "id": "ai_trader.src.main.utils.events.manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/events/decorators.py",
      "id": "ai_trader.src.main.utils.events.decorators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/data/analysis.py",
      "id": "ai_trader.src.main.utils.data.analysis"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/data/validators.py",
      "id": "ai_trader.src.main.utils.data.validators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/data/__init__.py",
      "id": "ai_trader.src.main.utils.data.__init__"
    },
    {
      "id": "processor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/data/processor.py",
      "id": "ai_trader.src.main.utils.data.processor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/data/types.py",
      "id": "ai_trader.src.main.utils.data.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/data/utils.py",
      "id": "ai_trader.src.main.utils.data.utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/trading/analysis.py",
      "id": "ai_trader.src.main.utils.trading.analysis"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/trading/io.py",
      "id": "ai_trader.src.main.utils.trading.io"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/trading/__init__.py",
      "id": "ai_trader.src.main.utils.trading.__init__"
    },
    {
      "id": "filters"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/trading/types.py",
      "id": "ai_trader.src.main.utils.trading.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/trading/global_manager.py",
      "id": "ai_trader.src.main.utils.trading.global_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/trading/manager.py",
      "id": "ai_trader.src.main.utils.trading.manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/trading/filters.py",
      "id": "ai_trader.src.main.utils.trading.filters"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/logging/trade_logger.py",
      "id": "ai_trader.src.main.utils.logging.trade_logger"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/logging/__init__.py",
      "id": "ai_trader.src.main.utils.logging.__init__"
    },
    {
      "id": "trade_logger"
    },
    {
      "id": "performance_logger"
    },
    {
      "id": "error_logger"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/logging/error_logger.py",
      "id": "ai_trader.src.main.utils.logging.error_logger"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/utils/logging/performance_logger.py",
      "id": "ai_trader.src.main.utils.logging.performance_logger"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/live_risk_monitor.py",
      "id": "ai_trader.src.main.risk_management.live_risk_monitor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/__init__.py",
      "id": "ai_trader.src.main.risk_management.__init__"
    },
    {
      "id": "pre_trade"
    },
    {
      "id": "real_time"
    },
    {
      "id": "position_sizing"
    },
    {
      "id": "integration"
    },
    {
      "id": "post_trade"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/types.py",
      "id": "ai_trader.src.main.risk_management.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/var_position_sizing.py",
      "id": "ai_trader.src.main.risk_management.var_position_sizing"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/metrics/__init__.py",
      "id": "ai_trader.src.main.risk_management.metrics.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/regime_detector.py",
      "id": "ai_trader.src.main.risk_management.real_time.regime_detector"
    },
    {
      "id": "anomaly_types"
    },
    {
      "id": "anomaly_models"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/live_risk_monitor.py",
      "id": "ai_trader.src.main.risk_management.real_time.live_risk_monitor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/stop_loss.py",
      "id": "ai_trader.src.main.risk_management.real_time.stop_loss"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/anomaly_detector.py",
      "id": "ai_trader.src.main.risk_management.real_time.anomaly_detector"
    },
    {
      "id": "statistical_detector"
    },
    {
      "id": "correlation_detector"
    },
    {
      "id": "regime_detector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/position_liquidator.py",
      "id": "ai_trader.src.main.risk_management.real_time.position_liquidator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/__init__.py",
      "id": "ai_trader.src.main.risk_management.real_time.__init__"
    },
    {
      "id": "anomaly_detector"
    },
    {
      "id": "live_risk_monitor"
    },
    {
      "id": "drawdown_control"
    },
    {
      "id": "stop_loss"
    },
    {
      "id": "position_liquidator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/correlation_detector.py",
      "id": "ai_trader.src.main.risk_management.real_time.correlation_detector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/statistical_detector.py",
      "id": "ai_trader.src.main.risk_management.real_time.statistical_detector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/drawdown_control.py",
      "id": "ai_trader.src.main.risk_management.real_time.drawdown_control"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/anomaly_models.py",
      "id": "ai_trader.src.main.risk_management.real_time.anomaly_models"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/anomaly_types.py",
      "id": "ai_trader.src.main.risk_management.real_time.anomaly_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/facade.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade"
    },
    {
      "id": "registry"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/config.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/registry.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.registry"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/events.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.events"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/__init__.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.__init__"
    },
    {
      "id": "facade"
    },
    {
      "id": "breakers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/types.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/breakers/__init__.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.__init__"
    },
    {
      "id": "volatility_breaker"
    },
    {
      "id": "drawdown_breaker"
    },
    {
      "id": "loss_rate_breaker"
    },
    {
      "id": "position_limit_breaker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/breakers/loss_rate_breaker.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.loss_rate_breaker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/breakers/drawdown_breaker.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.drawdown_breaker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/breakers/position_limit_breaker.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.position_limit_breaker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/real_time/circuit_breaker/breakers/volatility_breaker.py",
      "id": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.volatility_breaker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/position_sizing/var_position_sizer.py",
      "id": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/position_sizing/__init__.py",
      "id": "ai_trader.src.main.risk_management.position_sizing.__init__"
    },
    {
      "id": "var_position_sizer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/integration/__init__.py",
      "id": "ai_trader.src.main.risk_management.integration.__init__"
    },
    {
      "id": "trading_engine_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/integration/trading_engine_integration.py",
      "id": "ai_trader.src.main.risk_management.integration.trading_engine_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker"
    },
    {
      "id": "unified_limit_checker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/exposure_limits.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.exposure_limits"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/__init__.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.__init__"
    },
    {
      "id": "liquidity_checks"
    },
    {
      "id": "position_limits"
    },
    {
      "id": "exposure_limits"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/position_limits.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.position_limits"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/liquidity_checks.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.liquidity_checks"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/unified_limit_checker.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker"
    },
    {
      "id": "checkers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/config.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/models.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.models"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/registry.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/events.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.events"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/__init__.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/types.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/templates.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.templates"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/utils.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/checkers/__init__.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.__init__"
    },
    {
      "id": "simple_threshold"
    },
    {
      "id": "position_size"
    },
    {
      "id": "drawdown"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/checkers/drawdown.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.drawdown"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/checkers/position_size.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.position_size"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/pre_trade/unified_limit_checker/checkers/simple_threshold.py",
      "id": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.simple_threshold"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/dashboards/live_risk_dashboard.py",
      "id": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/risk_management/post_trade/__init__.py",
      "id": "ai_trader.src.main.risk_management.post_trade.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/outcome_classifier_types.py",
      "id": "ai_trader.src.main.models.outcome_classifier_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/__init__.py",
      "id": "ai_trader.src.main.models.__init__"
    },
    {
      "id": "common"
    },
    {
      "id": "inference"
    },
    {
      "id": "outcome_classifier"
    },
    {
      "id": "outcome_classifier_types"
    },
    {
      "id": "specialists"
    },
    {
      "id": "training"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/ml_signal_adapter.py",
      "id": "ai_trader.src.main.models.ml_signal_adapter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/ml_trading_integration.py",
      "id": "ai_trader.src.main.models.ml_trading_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/ml_trading_service.py",
      "id": "ai_trader.src.main.models.ml_trading_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/common.py",
      "id": "ai_trader.src.main.models.common"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/outcome_classifier.py",
      "id": "ai_trader.src.main.models.outcome_classifier"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/correlation_strategy.py",
      "id": "ai_trader.src.main.models.strategies.correlation_strategy"
    },
    {
      "id": "base_universe_strategy"
    },
    {
      "id": "base_strategy"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/sentiment.py",
      "id": "ai_trader.src.main.models.strategies.sentiment"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/pairs_trading.py",
      "id": "ai_trader.src.main.models.strategies.pairs_trading"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/breakout.py",
      "id": "ai_trader.src.main.models.strategies.breakout"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/base_strategy.py",
      "id": "ai_trader.src.main.models.strategies.base_strategy"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/ml_model_strategy.py",
      "id": "ai_trader.src.main.models.strategies.ml_model_strategy"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/__init__.py",
      "id": "ai_trader.src.main.models.strategies.__init__"
    },
    {
      "id": "sentiment"
    },
    {
      "id": "mean_reversion"
    },
    {
      "id": "ml_momentum"
    },
    {
      "id": "breakout"
    },
    {
      "id": "correlation_strategy"
    },
    {
      "id": "pairs_trading"
    },
    {
      "id": "regime_adaptive"
    },
    {
      "id": "ensemble"
    },
    {
      "id": "event_driven"
    },
    {
      "id": "hft"
    },
    {
      "id": "statistical_arbitrage"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/ml_regression_strategy.py",
      "id": "ai_trader.src.main.models.strategies.ml_regression_strategy"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/statistical_arbitrage.py",
      "id": "ai_trader.src.main.models.strategies.statistical_arbitrage"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/regime_adaptive.py",
      "id": "ai_trader.src.main.models.strategies.regime_adaptive"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/ml_momentum.py",
      "id": "ai_trader.src.main.models.strategies.ml_momentum"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/base_universe_strategy.py",
      "id": "ai_trader.src.main.models.strategies.base_universe_strategy"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/mean_reversion.py",
      "id": "ai_trader.src.main.models.strategies.mean_reversion"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/ensemble/aggregation.py",
      "id": "ai_trader.src.main.models.strategies.ensemble.aggregation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/ensemble/__init__.py",
      "id": "ai_trader.src.main.models.strategies.ensemble.__init__"
    },
    {
      "id": "main_ensemble"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/ensemble/allocation.py",
      "id": "ai_trader.src.main.models.strategies.ensemble.allocation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/ensemble/main_ensemble.py",
      "id": "ai_trader.src.main.models.strategies.ensemble.main_ensemble"
    },
    {
      "id": "performance"
    },
    {
      "id": "allocation"
    },
    {
      "id": "aggregation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/strategies/ensemble/performance.py",
      "id": "ai_trader.src.main.models.strategies.ensemble.performance"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/train_pipeline.py",
      "id": "ai_trader.src.main.models.training.train_pipeline"
    },
    {
      "id": "xgboost"
    },
    {
      "id": "lightgbm"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/training_orchestrator.py",
      "id": "ai_trader.src.main.models.training.training_orchestrator"
    },
    {
      "id": "train_pipeline"
    },
    {
      "id": "pipeline_results"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/pipeline_stages.py",
      "id": "ai_trader.src.main.models.training.pipeline_stages"
    },
    {
      "id": "training_orchestrator"
    },
    {
      "id": "pipeline_args"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/model_integration.py",
      "id": "ai_trader.src.main.models.training.model_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/pipeline_results.py",
      "id": "ai_trader.src.main.models.training.pipeline_results"
    },
    {
      "id": "tabulate"
    },
    {
      "id": "matplotlib"
    },
    {
      "id": "seaborn"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/catalyst_training_pipeline.py",
      "id": "ai_trader.src.main.models.training.catalyst_training_pipeline"
    },
    {
      "id": "cross_validation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/__init__.py",
      "id": "ai_trader.src.main.models.training.__init__"
    },
    {
      "id": "pipeline_runner"
    },
    {
      "id": "pipeline_stages"
    },
    {
      "id": "retraining_scheduler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/pipeline_runner.py",
      "id": "ai_trader.src.main.models.training.pipeline_runner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/ensemble.py",
      "id": "ai_trader.src.main.models.training.ensemble"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/hyperparameter_search.py",
      "id": "ai_trader.src.main.models.training.hyperparameter_search"
    },
    {
      "id": "optuna"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/retraining_scheduler.py",
      "id": "ai_trader.src.main.models.training.retraining_scheduler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/pipeline_args.py",
      "id": "ai_trader.src.main.models.training.pipeline_args"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/training/cross_validation.py",
      "id": "ai_trader.src.main.models.training.cross_validation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/event_driven/news_analytics.py",
      "id": "ai_trader.src.main.models.event_driven.news_analytics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/event_driven/base_event_strategy.py",
      "id": "ai_trader.src.main.models.event_driven.base_event_strategy"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/utils/model_loader.py",
      "id": "ai_trader.src.main.models.utils.model_loader"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/specialists/options.py",
      "id": "ai_trader.src.main.models.specialists.options"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/specialists/social.py",
      "id": "ai_trader.src.main.models.specialists.social"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/specialists/earnings.py",
      "id": "ai_trader.src.main.models.specialists.earnings"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/specialists/technical.py",
      "id": "ai_trader.src.main.models.specialists.technical"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/specialists/__init__.py",
      "id": "ai_trader.src.main.models.specialists.__init__"
    },
    {
      "id": "earnings"
    },
    {
      "id": "social"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/specialists/ensemble.py",
      "id": "ai_trader.src.main.models.specialists.ensemble"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/specialists/base.py",
      "id": "ai_trader.src.main.models.specialists.base"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/specialists/news.py",
      "id": "ai_trader.src.main.models.specialists.news"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/hft/microstructure_alpha.py",
      "id": "ai_trader.src.main.models.hft.microstructure_alpha"
    },
    {
      "id": "base_hft_strategy"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/hft/base_hft_strategy.py",
      "id": "ai_trader.src.main.models.hft.base_hft_strategy"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_types.py",
      "id": "ai_trader.src.main.models.inference.model_registry_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_analytics_service.py",
      "id": "ai_trader.src.main.models.inference.model_analytics_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_management_service.py",
      "id": "ai_trader.src.main.models.inference.model_management_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine"
    },
    {
      "id": "prediction_engine_helpers"
    },
    {
      "id": "model_registry_helpers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/__init__.py",
      "id": "ai_trader.src.main.models.inference.__init__"
    },
    {
      "id": "model_registry"
    },
    {
      "id": "prediction_engine"
    },
    {
      "id": "feature_pipeline"
    },
    {
      "id": "model_management_service"
    },
    {
      "id": "model_analytics_service"
    },
    {
      "id": "prediction_engine_service"
    },
    {
      "id": "model_registry_enhancements"
    },
    {
      "id": "model_registry_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_enhancements.py",
      "id": "ai_trader.src.main.models.inference.model_registry_enhancements"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry.py",
      "id": "ai_trader.src.main.models.inference.model_registry"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_service.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_service"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/feature_pipeline.py",
      "id": "ai_trader.src.main.models.inference.feature_pipeline"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/feature_pipeline_helpers/feature_set_definition.py",
      "id": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_set_definition"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/feature_pipeline_helpers/__init__.py",
      "id": "ai_trader.src.main.models.inference.feature_pipeline_helpers.__init__"
    },
    {
      "id": "feature_calculator_integrator"
    },
    {
      "id": "feature_set_definition"
    },
    {
      "id": "inference_feature_cache"
    },
    {
      "id": "realtime_data_buffer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/feature_pipeline_helpers/feature_calculator_integrator.py",
      "id": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_calculator_integrator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/feature_pipeline_helpers/inference_feature_cache.py",
      "id": "ai_trader.src.main.models.inference.feature_pipeline_helpers.inference_feature_cache"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/feature_pipeline_helpers/realtime_data_buffer.py",
      "id": "ai_trader.src.main.models.inference.feature_pipeline_helpers.realtime_data_buffer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_helpers/batch_processor.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_helpers.batch_processor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_helpers/model_loader_cache.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_helpers.model_loader_cache"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_helpers/latency_optimizer.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_helpers/cache_manager.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_helpers/prediction_performance_monitor.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_performance_monitor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_helpers/request_validator.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_helpers.request_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_helpers/__init__.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_helpers.__init__"
    },
    {
      "id": "latency_optimizer"
    },
    {
      "id": "request_validator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_helpers/prediction_calculator.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_helpers/prediction_warmup_benchmark.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_warmup_benchmark"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/prediction_engine_helpers/feature_data_manager.py",
      "id": "ai_trader.src.main.models.inference.prediction_engine_helpers.feature_data_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/model_comparison_analyzer.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.model_comparison_analyzer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/model_file_manager.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.model_file_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/core_predictor.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.core_predictor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/deployment_manager.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.deployment_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/__init__.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.__init__"
    },
    {
      "id": "deployment_manager"
    },
    {
      "id": "registry_storage_manager"
    },
    {
      "id": "traffic_router"
    },
    {
      "id": "version_controller"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/traffic_router.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.traffic_router"
    },
    {
      "id": "bisect"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/performance_tracker.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.performance_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/model_archiver.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.model_archiver"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/registry_storage_manager.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/model_exporter.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.model_exporter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/inference/model_registry_helpers/version_controller.py",
      "id": "ai_trader.src.main.models.inference.model_registry_helpers.version_controller"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/monitoring/__init__.py",
      "id": "ai_trader.src.main.models.monitoring.__init__"
    },
    {
      "id": "model_monitor"
    },
    {
      "id": "monitor_helpers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/monitoring/model_monitor.py",
      "id": "ai_trader.src.main.models.monitoring.model_monitor"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/monitoring/monitor_helpers/prediction_data_collector.py",
      "id": "ai_trader.src.main.models.monitoring.monitor_helpers.prediction_data_collector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/monitoring/monitor_helpers/ab_test_analyzer.py",
      "id": "ai_trader.src.main.models.monitoring.monitor_helpers.ab_test_analyzer"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/monitoring/monitor_helpers/drift_detector.py",
      "id": "ai_trader.src.main.models.monitoring.monitor_helpers.drift_detector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/monitoring/monitor_helpers/__init__.py",
      "id": "ai_trader.src.main.models.monitoring.monitor_helpers.__init__"
    },
    {
      "id": "drift_detector"
    },
    {
      "id": "ml_ops_action_manager"
    },
    {
      "id": "ab_test_analyzer"
    },
    {
      "id": "monitor_reporter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/monitoring/monitor_helpers/monitor_reporter.py",
      "id": "ai_trader.src.main.models.monitoring.monitor_helpers.monitor_reporter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/monitoring/monitor_helpers/performance_calculator.py",
      "id": "ai_trader.src.main.models.monitoring.monitor_helpers.performance_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/monitoring/monitor_helpers/ml_ops_action_manager.py",
      "id": "ai_trader.src.main.models.monitoring.monitor_helpers.ml_ops_action_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/outcome_classifier_helpers/outcome_data_fetcher.py",
      "id": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_data_fetcher"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/outcome_classifier_helpers/entry_price_determiner.py",
      "id": "ai_trader.src.main.models.outcome_classifier_helpers.entry_price_determiner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/outcome_classifier_helpers/__init__.py",
      "id": "ai_trader.src.main.models.outcome_classifier_helpers.__init__"
    },
    {
      "id": "outcome_data_fetcher"
    },
    {
      "id": "entry_price_determiner"
    },
    {
      "id": "outcome_metrics_calculator"
    },
    {
      "id": "outcome_labeler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/outcome_classifier_helpers/outcome_metrics_calculator.py",
      "id": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_metrics_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/outcome_classifier_helpers/outcome_labeler.py",
      "id": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_labeler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/models/outcome_classifier_helpers/outcome_reporter.py",
      "id": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_reporter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/orchestration/__init__.py",
      "id": "ai_trader.src.main.orchestration.__init__"
    },
    {
      "id": "ml_orchestrator"
    },
    {
      "id": "job_scheduler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/orchestration/job_scheduler.py",
      "id": "ai_trader.src.main.orchestration.job_scheduler"
    },
    {
      "id": "schedule"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/orchestration/ml_orchestrator.py",
      "id": "ai_trader.src.main.orchestration.ml_orchestrator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/scanner_orchestrator.py",
      "id": "ai_trader.src.main.scanners.scanner_orchestrator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/scanner_adapter_factory.py",
      "id": "ai_trader.src.main.scanners.scanner_adapter_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/scanner_orchestrator_factory.py",
      "id": "ai_trader.src.main.scanners.scanner_orchestrator_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/__init__.py",
      "id": "ai_trader.src.main.scanners.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/scanner_pipeline.py",
      "id": "ai_trader.src.main.scanners.scanner_pipeline"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/base_scanner.py",
      "id": "ai_trader.src.main.scanners.base_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/scanner_cache_manager.py",
      "id": "ai_trader.src.main.scanners.scanner_cache_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalyst_scanner_base.py",
      "id": "ai_trader.src.main.scanners.catalyst_scanner_base"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/scanner_adapter.py",
      "id": "ai_trader.src.main.scanners.scanner_adapter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/scanner_metrics_collector.py",
      "id": "ai_trader.src.main.scanners.scanner_metrics_collector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/scanner_pipeline_utils.py",
      "id": "ai_trader.src.main.scanners.scanner_pipeline_utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/scanner_factory_v2.py",
      "id": "ai_trader.src.main.scanners.scanner_factory_v2"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/layers/realtime_websocket_stream.py",
      "id": "ai_trader.src.main.scanners.layers.realtime_websocket_stream"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/layers/layer1_5_strategy_affinity.py",
      "id": "ai_trader.src.main.scanners.layers.layer1_5_strategy_affinity"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/layers/__init__.py",
      "id": "ai_trader.src.main.scanners.layers.__init__"
    },
    {
      "id": "parallel_scanner_engine"
    },
    {
      "id": "layer0_static_universe"
    },
    {
      "id": "layer1_liquidity_filter"
    },
    {
      "id": "layer1_5_strategy_affinity"
    },
    {
      "id": "layer2_catalyst_orchestrator"
    },
    {
      "id": "layer3_premarket_scanner"
    },
    {
      "id": "layer3_realtime_scanner"
    },
    {
      "id": "realtime_websocket_stream"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/layers/parallel_scanner_engine.py",
      "id": "ai_trader.src.main.scanners.layers.parallel_scanner_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/layers/layer0_static_universe.py",
      "id": "ai_trader.src.main.scanners.layers.layer0_static_universe"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/layers/layer3_realtime_scanner.py",
      "id": "ai_trader.src.main.scanners.layers.layer3_realtime_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/layers/layer3_premarket_scanner.py",
      "id": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/layers/layer1_liquidity_filter.py",
      "id": "ai_trader.src.main.scanners.layers.layer1_liquidity_filter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/layers/layer2_catalyst_orchestrator.py",
      "id": "ai_trader.src.main.scanners.layers.layer2_catalyst_orchestrator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/market_validation_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.market_validation_scanner"
    },
    {
      "id": "catalyst_scanner_base"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/earnings_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.earnings_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/news_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.news_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/__init__.py",
      "id": "ai_trader.src.main.scanners.catalysts.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/technical_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.technical_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/volume_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.volume_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/social_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.social_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/insider_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.insider_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/intermarket_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.intermarket_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/advanced_sentiment_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.advanced_sentiment_scanner"
    },
    {
      "id": "torch"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/options_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.options_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/coordinated_activity_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/scanners/catalysts/sector_scanner.py",
      "id": "ai_trader.src.main.scanners.catalysts.sector_scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/jobs/storage_rotation_job.py",
      "id": "ai_trader.src.main.jobs.storage_rotation_job"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/database_performance_dashboard.py",
      "id": "ai_trader.src.main.monitoring.database_performance_dashboard"
    },
    {
      "id": "fastapi"
    },
    {
      "id": "uvicorn"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/__init__.py",
      "id": "ai_trader.src.main.monitoring.__init__"
    },
    {
      "id": "dashboards"
    },
    {
      "id": "alerts"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/metrics/collector.py",
      "id": "ai_trader.src.main.monitoring.metrics.collector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/metrics/__init__.py",
      "id": "ai_trader.src.main.monitoring.metrics.__init__"
    },
    {
      "id": "collector"
    },
    {
      "id": "unified_metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/metrics/unified_metrics.py",
      "id": "ai_trader.src.main.monitoring.metrics.unified_metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/metrics/collector_factory.py",
      "id": "ai_trader.src.main.monitoring.metrics.collector_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/metrics/archive_metrics_collector.py",
      "id": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/metrics/unified_metrics_integration.py",
      "id": "ai_trader.src.main.monitoring.metrics.unified_metrics_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/health/unified_health_reporter.py",
      "id": "ai_trader.src.main.monitoring.health.unified_health_reporter"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/alerts/unified_alert_integration.py",
      "id": "ai_trader.src.main.monitoring.alerts.unified_alert_integration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/alerts/alert_manager.py",
      "id": "ai_trader.src.main.monitoring.alerts.alert_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/alerts/archive_alert_rules.py",
      "id": "ai_trader.src.main.monitoring.alerts.archive_alert_rules"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/alerts/__init__.py",
      "id": "ai_trader.src.main.monitoring.alerts.__init__"
    },
    {
      "id": "unified_alerts"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/alerts/unified_alerts.py",
      "id": "ai_trader.src.main.monitoring.alerts.unified_alerts"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/dashboards/v2/trading_dashboard_v2.py",
      "id": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2"
    },
    {
      "id": "dash"
    },
    {
      "id": "plotly"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/dashboards/v2/run_trading_dashboard.py",
      "id": "ai_trader.src.main.monitoring.dashboards.v2.run_trading_dashboard"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/dashboards/v2/system_dashboard_v2.py",
      "id": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/dashboards/v2/__init__.py",
      "id": "ai_trader.src.main.monitoring.dashboards.v2.__init__"
    },
    {
      "id": "trading_dashboard_v2"
    },
    {
      "id": "system_dashboard_v2"
    },
    {
      "id": "dashboard_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/dashboards/v2/dashboard_manager.py",
      "id": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/dashboards/v2/run_system_dashboard.py",
      "id": "ai_trader.src.main.monitoring.dashboards.v2.run_system_dashboard"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/dashboards/widgets/__init__.py",
      "id": "ai_trader.src.main.monitoring.dashboards.widgets.__init__"
    },
    {
      "id": "archive_widget"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/dashboards/widgets/archive_widget.py",
      "id": "ai_trader.src.main.monitoring.dashboards.widgets.archive_widget"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/__init__.py",
      "id": "ai_trader.src.main.monitoring.performance.__init__"
    },
    {
      "id": "performance_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/performance_tracker.py",
      "id": "ai_trader.src.main.monitoring.performance.performance_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/models/system_record.py",
      "id": "ai_trader.src.main.monitoring.performance.models.system_record"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/models/alert_models.py",
      "id": "ai_trader.src.main.monitoring.performance.models.alert_models"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/models/performance_metrics.py",
      "id": "ai_trader.src.main.monitoring.performance.models.performance_metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/models/__init__.py",
      "id": "ai_trader.src.main.monitoring.performance.models.__init__"
    },
    {
      "id": "trade_record"
    },
    {
      "id": "system_record"
    },
    {
      "id": "alert_models"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/models/trade_record.py",
      "id": "ai_trader.src.main.monitoring.performance.models.trade_record"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/alerts/alert_manager.py",
      "id": "ai_trader.src.main.monitoring.performance.alerts.alert_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/alerts/__init__.py",
      "id": "ai_trader.src.main.monitoring.performance.alerts.__init__"
    },
    {
      "id": "alert_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/calculators/risk_calculator.py",
      "id": "ai_trader.src.main.monitoring.performance.calculators.risk_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/calculators/return_calculator.py",
      "id": "ai_trader.src.main.monitoring.performance.calculators.return_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/calculators/__init__.py",
      "id": "ai_trader.src.main.monitoring.performance.calculators.__init__"
    },
    {
      "id": "return_calculator"
    },
    {
      "id": "risk_calculator"
    },
    {
      "id": "risk_adjusted_calculator"
    },
    {
      "id": "trading_metrics_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/calculators/trading_metrics_calculator.py",
      "id": "ai_trader.src.main.monitoring.performance.calculators.trading_metrics_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/monitoring/performance/calculators/risk_adjusted_calculator.py",
      "id": "ai_trader.src.main.monitoring.performance.calculators.risk_adjusted_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/__init__.py",
      "id": "ai_trader.src.main.events.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/types/__init__.py",
      "id": "ai_trader.src.main.events.types.__init__"
    },
    {
      "id": "event_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/types/event_types.py",
      "id": "ai_trader.src.main.events.types.event_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/core/event_bus_registry.py",
      "id": "ai_trader.src.main.events.core.event_bus_registry"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/core/__init__.py",
      "id": "ai_trader.src.main.events.core.__init__"
    },
    {
      "id": "event_bus"
    },
    {
      "id": "event_bus_factory"
    },
    {
      "id": "event_bus_registry"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/core/event_bus.py",
      "id": "ai_trader.src.main.events.core.event_bus"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/core/event_bus_factory.py",
      "id": "ai_trader.src.main.events.core.event_bus_factory"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/core/event_bus_helpers/event_bus_stats_tracker.py",
      "id": "ai_trader.src.main.events.core.event_bus_helpers.event_bus_stats_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/core/event_bus_helpers/__init__.py",
      "id": "ai_trader.src.main.events.core.event_bus_helpers.__init__"
    },
    {
      "id": "event_bus_stats_tracker"
    },
    {
      "id": "event_history_manager"
    },
    {
      "id": "dead_letter_queue_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/core/event_bus_helpers/dead_letter_queue_manager.py",
      "id": "ai_trader.src.main.events.core.event_bus_helpers.dead_letter_queue_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/core/event_bus_helpers/event_history_manager.py",
      "id": "ai_trader.src.main.events.core.event_bus_helpers.event_history_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/publishers/__init__.py",
      "id": "ai_trader.src.main.events.publishers.__init__"
    },
    {
      "id": "scanner_event_publisher"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/publishers/scanner_event_publisher.py",
      "id": "ai_trader.src.main.events.publishers.scanner_event_publisher"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/backfill_event_handler.py",
      "id": "ai_trader.src.main.events.handlers.backfill_event_handler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/__init__.py",
      "id": "ai_trader.src.main.events.handlers.__init__"
    },
    {
      "id": "scanner_feature_bridge"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/feature_pipeline_handler.py",
      "id": "ai_trader.src.main.events.handlers.feature_pipeline_handler"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/scanner_feature_bridge.py",
      "id": "ai_trader.src.main.events.handlers.scanner_feature_bridge"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/event_driven_engine.py",
      "id": "ai_trader.src.main.events.handlers.event_driven_engine"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/feature_pipeline_helpers/deduplication_tracker.py",
      "id": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.deduplication_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/feature_pipeline_helpers/feature_handler_stats_tracker.py",
      "id": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_handler_stats_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/feature_pipeline_helpers/feature_types.py",
      "id": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/feature_pipeline_helpers/request_queue_manager.py",
      "id": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.request_queue_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/feature_pipeline_helpers/feature_group_mapper.py",
      "id": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_group_mapper"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/feature_pipeline_helpers/__init__.py",
      "id": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.__init__"
    },
    {
      "id": "feature_computation_worker"
    },
    {
      "id": "feature_group_mapper"
    },
    {
      "id": "feature_handler_stats_tracker"
    },
    {
      "id": "request_queue_manager"
    },
    {
      "id": "feature_types"
    },
    {
      "id": "queue_types"
    },
    {
      "id": "deduplication_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/feature_pipeline_helpers/feature_config.py",
      "id": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/feature_pipeline_helpers/feature_computation_worker.py",
      "id": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_computation_worker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/feature_pipeline_helpers/queue_types.py",
      "id": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.queue_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/scanner_bridge_helpers/feature_request_batcher.py",
      "id": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.feature_request_batcher"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/scanner_bridge_helpers/__init__.py",
      "id": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.__init__"
    },
    {
      "id": "alert_feature_mapper"
    },
    {
      "id": "bridge_stats_tracker"
    },
    {
      "id": "feature_request_batcher"
    },
    {
      "id": "priority_calculator"
    },
    {
      "id": "request_dispatcher"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/scanner_bridge_helpers/priority_calculator.py",
      "id": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.priority_calculator"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/scanner_bridge_helpers/alert_feature_mapper.py",
      "id": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.alert_feature_mapper"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/scanner_bridge_helpers/bridge_stats_tracker.py",
      "id": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.bridge_stats_tracker"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/handlers/scanner_bridge_helpers/request_dispatcher.py",
      "id": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.request_dispatcher"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/events/validation/event_schemas.py",
      "id": "ai_trader.src.main.events.validation.event_schemas"
    },
    {
      "id": "jsonschema"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/universe/universe_manager.py",
      "id": "ai_trader.src.main.universe.universe_manager"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/universe/__init__.py",
      "id": "ai_trader.src.main.universe.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/universe/cli.py",
      "id": "ai_trader.src.main.universe.cli"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/alerts.py",
      "id": "ai_trader.src.main.interfaces.alerts"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/backtesting.py",
      "id": "ai_trader.src.main.interfaces.backtesting"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/metrics.py",
      "id": "ai_trader.src.main.interfaces.metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/ingestion.py",
      "id": "ai_trader.src.main.interfaces.ingestion"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/database.py",
      "id": "ai_trader.src.main.interfaces.database"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/__init__.py",
      "id": "ai_trader.src.main.interfaces.__init__"
    },
    {
      "id": "repositories"
    },
    {
      "id": "backtesting"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/storage.py",
      "id": "ai_trader.src.main.interfaces.storage"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories.py",
      "id": "ai_trader.src.main.interfaces.repositories"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/calculators.py",
      "id": "ai_trader.src.main.interfaces.calculators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/scanners.py",
      "id": "ai_trader.src.main.interfaces.scanners"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/data_pipeline/ingestion.py",
      "id": "ai_trader.src.main.interfaces.data_pipeline.ingestion"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/data_pipeline/monitoring.py",
      "id": "ai_trader.src.main.interfaces.data_pipeline.monitoring"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/data_pipeline/__init__.py",
      "id": "ai_trader.src.main.interfaces.data_pipeline.__init__"
    },
    {
      "id": "orchestration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/data_pipeline/historical.py",
      "id": "ai_trader.src.main.interfaces.data_pipeline.historical"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/data_pipeline/orchestration.py",
      "id": "ai_trader.src.main.interfaces.data_pipeline.orchestration"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/data_pipeline/processing.py",
      "id": "ai_trader.src.main.interfaces.data_pipeline.processing"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/data_pipeline/validation.py",
      "id": "ai_trader.src.main.interfaces.data_pipeline.validation"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories/scanner.py",
      "id": "ai_trader.src.main.interfaces.repositories.scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories/social.py",
      "id": "ai_trader.src.main.interfaces.repositories.social"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories/company.py",
      "id": "ai_trader.src.main.interfaces.repositories.company"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories/sentiment.py",
      "id": "ai_trader.src.main.interfaces.repositories.sentiment"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories/financials.py",
      "id": "ai_trader.src.main.interfaces.repositories.financials"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories/__init__.py",
      "id": "ai_trader.src.main.interfaces.repositories.__init__"
    },
    {
      "id": "company"
    },
    {
      "id": "feature"
    },
    {
      "id": "financials"
    },
    {
      "id": "scanner"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories/feature.py",
      "id": "ai_trader.src.main.interfaces.repositories.feature"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories/market_data.py",
      "id": "ai_trader.src.main.interfaces.repositories.market_data"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories/base.py",
      "id": "ai_trader.src.main.interfaces.repositories.base"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/repositories/news.py",
      "id": "ai_trader.src.main.interfaces.repositories.news"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/monitoring/__init__.py",
      "id": "ai_trader.src.main.interfaces.monitoring.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/monitoring/dashboard.py",
      "id": "ai_trader.src.main.interfaces.monitoring.dashboard"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/events/event_handlers.py",
      "id": "ai_trader.src.main.interfaces.events.event_handlers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/events/__init__.py",
      "id": "ai_trader.src.main.interfaces.events.__init__"
    },
    {
      "id": "event_bus_provider"
    },
    {
      "id": "event_handlers"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/events/event_bus_provider.py",
      "id": "ai_trader.src.main.interfaces.events.event_bus_provider"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/events/time_utils.py",
      "id": "ai_trader.src.main.interfaces.events.time_utils"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/events/event_bus.py",
      "id": "ai_trader.src.main.interfaces.events.event_bus"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/events/event_types.py",
      "id": "ai_trader.src.main.interfaces.events.event_types"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/validation/metrics.py",
      "id": "ai_trader.src.main.interfaces.validation.metrics"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/validation/config.py",
      "id": "ai_trader.src.main.interfaces.validation.config"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/validation/validators.py",
      "id": "ai_trader.src.main.interfaces.validation.validators"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/validation/__init__.py",
      "id": "ai_trader.src.main.interfaces.validation.__init__"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/validation/rules.py",
      "id": "ai_trader.src.main.interfaces.validation.rules"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/validation/pipeline.py",
      "id": "ai_trader.src.main.interfaces.validation.pipeline"
    },
    {
      "path": "/Users/zachwade/StockMonitoring/ai_trader/src/main/interfaces/validation/quality.py",
      "id": "ai_trader.src.main.interfaces.validation.quality"
    }
  ],
  "links": [
    {
      "source": "trading_remediation_bootstrap.tests.e2e_smoke.test_smoke",
      "target": "subprocess"
    },
    {
      "source": "trading_remediation_bootstrap.tests.e2e_smoke.test_smoke",
      "target": "sys"
    },
    {
      "source": "trading_remediation_bootstrap.tests.e2e_smoke.test_smoke",
      "target": "pathlib"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.ingest_issues",
      "target": "argparse"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.ingest_issues",
      "target": "json"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.ingest_issues",
      "target": "re"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.ingest_issues",
      "target": "pathlib"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.ingest_issues",
      "target": "typing"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.wave_planner",
      "target": "argparse"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.wave_planner",
      "target": "json"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.wave_planner",
      "target": "pathlib"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.wave_planner",
      "target": "typing"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.build_import_graph",
      "target": "argparse"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.build_import_graph",
      "target": "ast"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.build_import_graph",
      "target": "os"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.build_import_graph",
      "target": "json"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.build_import_graph",
      "target": "networkx"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.build_import_graph",
      "target": "pathlib"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.build_import_graph",
      "target": "graphviz"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.run_smoke_paper",
      "target": "time"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.run_smoke_paper",
      "target": "random"
    },
    {
      "source": "trading_remediation_bootstrap.scripts.run_smoke_paper",
      "target": "typing"
    },
    {
      "source": "tests.conftest",
      "target": "asyncio"
    },
    {
      "source": "tests.conftest",
      "target": "sys"
    },
    {
      "source": "tests.conftest",
      "target": "decimal"
    },
    {
      "source": "tests.conftest",
      "target": "pathlib"
    },
    {
      "source": "tests.conftest",
      "target": "typing"
    },
    {
      "source": "tests.conftest",
      "target": "unittest"
    },
    {
      "source": "tests.conftest",
      "target": "pytest"
    },
    {
      "source": "tests.conftest",
      "target": "os"
    },
    {
      "source": "tests.e2e_smoke.test_smoke",
      "target": "subprocess"
    },
    {
      "source": "tests.e2e_smoke.test_smoke",
      "target": "sys"
    },
    {
      "source": "tests.e2e_smoke.test_smoke",
      "target": "pathlib"
    },
    {
      "source": "scripts.ingest_issues",
      "target": "argparse"
    },
    {
      "source": "scripts.ingest_issues",
      "target": "json"
    },
    {
      "source": "scripts.ingest_issues",
      "target": "re"
    },
    {
      "source": "scripts.ingest_issues",
      "target": "pathlib"
    },
    {
      "source": "scripts.ingest_issues",
      "target": "typing"
    },
    {
      "source": "scripts.wave_planner",
      "target": "argparse"
    },
    {
      "source": "scripts.wave_planner",
      "target": "json"
    },
    {
      "source": "scripts.wave_planner",
      "target": "pathlib"
    },
    {
      "source": "scripts.wave_planner",
      "target": "typing"
    },
    {
      "source": "scripts.build_import_graph",
      "target": "argparse"
    },
    {
      "source": "scripts.build_import_graph",
      "target": "ast"
    },
    {
      "source": "scripts.build_import_graph",
      "target": "os"
    },
    {
      "source": "scripts.build_import_graph",
      "target": "json"
    },
    {
      "source": "scripts.build_import_graph",
      "target": "networkx"
    },
    {
      "source": "scripts.build_import_graph",
      "target": "pathlib"
    },
    {
      "source": "scripts.build_import_graph",
      "target": "graphviz"
    },
    {
      "source": "scripts.run_smoke_paper",
      "target": "time"
    },
    {
      "source": "scripts.run_smoke_paper",
      "target": "random"
    },
    {
      "source": "scripts.run_smoke_paper",
      "target": "typing"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "sys"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "logging"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "typing"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "datetime"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "click"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "os"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "main"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "signal"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "json"
    },
    {
      "source": "ai_trader.ai_trader",
      "target": "pandas"
    },
    {
      "source": "ai_trader.ai_trader_refactored",
      "target": "sys"
    },
    {
      "source": "ai_trader.ai_trader_refactored",
      "target": "os"
    },
    {
      "source": "ai_trader.ai_trader_refactored",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.ai_trader_refactored",
      "target": "main"
    },
    {
      "source": "ai_trader.ai_trader_refactored",
      "target": "click"
    },
    {
      "source": "ai_trader.ai_trader_refactored",
      "target": "logging"
    },
    {
      "source": "ai_trader.ai_trader_refactored",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "time"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "sys"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "gc"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "json"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "typing"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "memory_profiler"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "psutil"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "threading"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "statistics"
    },
    {
      "source": "ai_trader.config_performance_benchmark",
      "target": "pydantic"
    },
    {
      "source": "ai_trader.start_paper_trading",
      "target": "sys"
    },
    {
      "source": "ai_trader.start_paper_trading",
      "target": "os"
    },
    {
      "source": "ai_trader.start_paper_trading",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.start_paper_trading",
      "target": "time"
    },
    {
      "source": "ai_trader.start_paper_trading",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.start_paper_trading",
      "target": "main"
    },
    {
      "source": "ai_trader.start_paper_trading",
      "target": "datetime"
    },
    {
      "source": "ai_trader.start_paper_trading",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "sys"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "os"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "datetime"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "json"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "traceback"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "typing"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "main"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "time"
    },
    {
      "source": "ai_trader.test_trading_flow",
      "target": "test_helpers"
    },
    {
      "source": "ai_trader.setup",
      "target": "setuptools"
    },
    {
      "source": "ai_trader.tools.system_cleanup",
      "target": "os"
    },
    {
      "source": "ai_trader.tools.system_cleanup",
      "target": "shutil"
    },
    {
      "source": "ai_trader.tools.system_cleanup",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.tools.system_cleanup",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tools.system_cleanup",
      "target": "collections"
    },
    {
      "source": "ai_trader.tools.system_cleanup",
      "target": "logging"
    },
    {
      "source": "ai_trader.tools.system_cleanup",
      "target": "argparse"
    },
    {
      "source": "ai_trader.tools.system_cleanup",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tools.debug_config",
      "target": "sys"
    },
    {
      "source": "ai_trader.tools.debug_config",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tools.debug_config",
      "target": "main"
    },
    {
      "source": "ai_trader.tools.debug_config",
      "target": "traceback"
    },
    {
      "source": "ai_trader.tools.validate_config",
      "target": "sys"
    },
    {
      "source": "ai_trader.tools.validate_config",
      "target": "os"
    },
    {
      "source": "ai_trader.tools.validate_config",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tools.validate_config",
      "target": "json"
    },
    {
      "source": "ai_trader.tools.validate_config",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tools.validate_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.tools.validate_config",
      "target": "main"
    },
    {
      "source": "ai_trader.tools.validate_config",
      "target": "argparse"
    },
    {
      "source": "ai_trader.tools.standardize_imports",
      "target": "argparse"
    },
    {
      "source": "ai_trader.tools.standardize_imports",
      "target": "ast"
    },
    {
      "source": "ai_trader.tools.standardize_imports",
      "target": "os"
    },
    {
      "source": "ai_trader.tools.standardize_imports",
      "target": "re"
    },
    {
      "source": "ai_trader.tools.standardize_imports",
      "target": "sys"
    },
    {
      "source": "ai_trader.tools.standardize_imports",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tools.standardize_imports",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.setup_test_environment",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.setup_test_environment",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.setup_test_environment",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.tests.setup_test_environment",
      "target": "platform"
    },
    {
      "source": "ai_trader.tests.setup_test_environment",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.setup_test_environment",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.setup_test_environment",
      "target": "argparse"
    },
    {
      "source": "ai_trader.tests.setup_test_environment",
      "target": "traceback"
    },
    {
      "source": "ai_trader.tests.test_integration_simple",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.test_integration_simple",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.test_integration_simple",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.test_integration_simple",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.test_integration_simple",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.test_integration_simple",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.test_integration_simple",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.test_integration_simple",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.test_integration_simple",
      "target": "test_setup"
    },
    {
      "source": "ai_trader.tests.test_integration_simple",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "shutil"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.conftest",
      "target": "psutil"
    },
    {
      "source": "ai_trader.tests.quick_test",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.quick_test",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.quick_test",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.quick_test",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.tests.quick_test",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.quick_test",
      "target": "pytest_cov"
    },
    {
      "source": "ai_trader.tests.quick_test",
      "target": "coverage"
    },
    {
      "source": "ai_trader.tests.test_setup",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.test_setup",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.test_setup",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.test_archive_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.test_archive_integration",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.test_archive_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.test_archive_integration",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.test_archive_integration",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.test_archive_integration",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.test_archive_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.test_archive_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.test_archive_integration",
      "target": "traceback"
    },
    {
      "source": "ai_trader.tests.test_archive_integration",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.run_events_tests",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.run_events_tests",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.run_events_tests",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.tests.run_events_tests",
      "target": "argparse"
    },
    {
      "source": "ai_trader.tests.run_events_tests",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.run_events_tests",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.run_events_tests",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.run_events_tests",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "decimal"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "traceback"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.test_phase1_utilities",
      "target": "types"
    },
    {
      "source": "ai_trader.tests.run_data_pipeline_tests",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.run_data_pipeline_tests",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.run_data_pipeline_tests",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.tests.run_data_pipeline_tests",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.run_data_pipeline_tests",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.run_data_pipeline_tests",
      "target": "argparse"
    },
    {
      "source": "ai_trader.tests.test_correlation_matrix",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.test_correlation_matrix",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.test_correlation_matrix",
      "target": "test_setup"
    },
    {
      "source": "ai_trader.tests.test_correlation_matrix",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.test_correlation_matrix",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.test_correlation_matrix",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.test_correlation_matrix",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.test_config_validation",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.test_config_validation",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.test_config_validation",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.test_config_validation",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.test_config_validation",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.test_config_validation",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.test_config_validation",
      "target": "pydantic"
    },
    {
      "source": "ai_trader.tests.test_config_validation",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.test_backfill_event_flow",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.test_backfill_event_flow",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.test_backfill_event_flow",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.test_backfill_event_flow",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.test_backfill_event_flow",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.test_backfill_event_flow",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.test_backfill_event_flow",
      "target": "traceback"
    },
    {
      "source": "ai_trader.tests.run_integration_tests",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.run_integration_tests",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.run_integration_tests",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.run_integration_tests",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.run_integration_tests",
      "target": "argparse"
    },
    {
      "source": "ai_trader.tests.run_integration_tests",
      "target": "logging"
    },
    {
      "source": "ai_trader.tests.run_integration_tests",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.run_integration_tests",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.run_integration_tests",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.run_all_tests",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.run_all_tests",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.run_all_tests",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.run_all_tests",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.tests.run_all_tests",
      "target": "argparse"
    },
    {
      "source": "ai_trader.tests.run_all_tests",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.run_all_tests",
      "target": "xml"
    },
    {
      "source": "ai_trader.tests.validate_system",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.validate_system",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.validate_system",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.validate_system",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.validate_system",
      "target": "psycopg2"
    },
    {
      "source": "ai_trader.tests.validate_system",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.validate_system",
      "target": "test_setup"
    },
    {
      "source": "ai_trader.tests.coverage_report",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.coverage_report",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.coverage_report",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.coverage_report",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.coverage_report",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.tests.coverage_report",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.coverage_report",
      "target": "xml"
    },
    {
      "source": "ai_trader.tests.coverage_report",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.coverage_report",
      "target": "argparse"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "logging"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "importlib"
    },
    {
      "source": "ai_trader.tests.unit.test_sector_analytics",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_adapter",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_adapter",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_adapter",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_adapter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_adapter",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_adapter",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_adapter",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_microstructure",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_microstructure",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_microstructure",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_microstructure",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "logging"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "importlib"
    },
    {
      "source": "ai_trader.tests.unit.test_sentiment_features",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_dataloader",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_dataloader",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_dataloader",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_dataloader",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_dataloader",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_dataloader",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.test_dataloader",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_store",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_store",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_store",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_store",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_store",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_store",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_orchestrator",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_orchestrator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_orchestrator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_orchestrator",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_orchestrator",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_market_regime",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_market_regime",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_market_regime",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_market_regime",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_enhanced_sentiment_strategy",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_enhanced_sentiment_strategy",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_enhanced_sentiment_strategy",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_enhanced_sentiment_strategy",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_enhanced_sentiment_strategy",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_enhanced_sentiment_strategy",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_config",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_config",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_config",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_config",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_config",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_feature_config",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_data_preprocessor",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_data_preprocessor",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_data_preprocessor",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_data_preprocessor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_data_preprocessor",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_data_preprocessor",
      "target": "warnings"
    },
    {
      "source": "ai_trader.tests.unit.test_data_preprocessor",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_trading_engine_basic",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_trading_engine_basic",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.test_trading_engine_basic",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.unit.test_trading_engine_basic",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_trading_engine_basic",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_trading_engine_basic",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_trading_engine_basic",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.test_trading_engine_basic",
      "target": "test_setup"
    },
    {
      "source": "ai_trader.tests.unit.test_trading_engine_basic",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_order_manager",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_order_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.test_order_manager",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.unit.test_order_manager",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_order_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_order_manager",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_order_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.test_order_manager",
      "target": "test_setup"
    },
    {
      "source": "ai_trader.tests.unit.test_order_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_order_manager",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.unit.test_data_standardizer",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_data_standardizer",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_data_standardizer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_data_standardizer",
      "target": "logging"
    },
    {
      "source": "ai_trader.tests.unit.test_data_standardizer",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_insider_analytics",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_insider_analytics",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_insider_analytics",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_insider_analytics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_insider_analytics",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.unit.test_insider_analytics",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_insider_analytics",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.unit.test_insider_analytics",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_insider_analytics",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.unit.test_cross_asset",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_cross_asset",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_cross_asset",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_cross_asset",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_resilience_strategies",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_resilience_strategies",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.test_resilience_strategies",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_resilience_strategies",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.test_resilience_strategies",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_unified_features",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_unified_features",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_unified_features",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_unified_features",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_unified_features",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_unified_features",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_calculator_registry",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_calculator_registry",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_calculator_registry",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_calculator_registry",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_calculator_registry",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_calculator_registry",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.test_calculator_registry",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_calculator_registry",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.unit.test_calculator_registry",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.unit.test_base_calculator",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_base_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_base_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_base_calculator",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.unit.test_base_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_base_calculator",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_base_calculator",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_base_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_portfolio_manager_deadlock",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_portfolio_manager_deadlock",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.test_portfolio_manager_deadlock",
      "target": "logging"
    },
    {
      "source": "ai_trader.tests.unit.test_portfolio_manager_deadlock",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_portfolio_manager_deadlock",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_portfolio_manager_deadlock",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.test_portfolio_manager_deadlock",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.unit.test_portfolio_manager_deadlock",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_portfolio_manager_deadlock",
      "target": "src"
    },
    {
      "source": "ai_trader.tests.unit.test_execution_engine",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_execution_engine",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.test_execution_engine",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.unit.test_execution_engine",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.test_execution_engine",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_execution_engine",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_execution_engine",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.test_execution_engine",
      "target": "test_setup"
    },
    {
      "source": "ai_trader.tests.unit.test_execution_engine",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_technical_indicators",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_technical_indicators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_technical_indicators",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_technical_indicators",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.test_news_features",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.test_news_features",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.test_news_features",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.unit.test_news_features",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.test_news_features",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.test_news_features",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.test_types",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.test_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.test_types",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.ingestion.test_orchestrator",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.ingestion.test_orchestrator",
      "target": "pytest_asyncio"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.ingestion.test_orchestrator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.ingestion.test_orchestrator",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.ingestion.test_orchestrator",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.ingestion.test_orchestrator",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.ingestion.test_orchestrator",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.storage.test_database_factory",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.storage.test_database_factory",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.storage.test_database_factory",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.storage.test_database_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.storage.test_base_repository",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.storage.test_base_repository",
      "target": "pytest_asyncio"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.storage.test_base_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.storage.test_base_repository",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.storage.test_base_repository",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.data_pipeline.storage.test_base_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.core.test_di_container",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.core.test_di_container",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.core.test_di_container",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.core.test_di_container",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_dispatcher",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_dispatcher",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_dispatcher",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_dispatcher",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_dispatcher",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus",
      "target": "pytest_asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_computation_worker",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_computation_worker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_computation_worker",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_computation_worker",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_computation_worker",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_computation_worker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_computation_worker",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_computation_worker",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_helpers_init",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_helpers_init",
      "target": "importlib"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_helpers_init",
      "target": "inspect"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_helpers_init",
      "target": "types"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_helpers_init",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_handler",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_handler",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_handler",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_handler",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_handler",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_handler",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_history_manager",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_history_manager",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_history_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_history_manager",
      "target": "collections"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_history_manager",
      "target": "threading"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_history_manager",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_history_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_history_manager",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_history_manager",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.unit.events.test_bridge_stats_tracker",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_bridge_stats_tracker",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_bridge_stats_tracker",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_bridge_stats_tracker",
      "target": "threading"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_request_batcher",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_request_batcher",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_request_batcher",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_request_batcher",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_request_batcher",
      "target": "threading"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_stats_tracker",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_stats_tracker",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_stats_tracker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_stats_tracker",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_stats_tracker",
      "target": "threading"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_types",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_types",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_types",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_bridge_helpers_init",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_bridge_helpers_init",
      "target": "importlib"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_bridge_helpers_init",
      "target": "inspect"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_bridge_helpers_init",
      "target": "types"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_bridge_helpers_init",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_alert_feature_mapper",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_alert_feature_mapper",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_alert_feature_mapper",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.unit.events.test_alert_feature_mapper",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.unit.events.test_alert_feature_mapper",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_factory",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_factory",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_queue_manager",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_queue_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_queue_manager",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_queue_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_queue_manager",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_queue_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_request_queue_manager",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_driven_engine",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_driven_engine",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_driven_engine",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_driven_engine",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_driven_engine",
      "target": "io"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_driven_engine",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_driven_engine",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_driven_engine",
      "target": "signal"
    },
    {
      "source": "ai_trader.tests.unit.events.test_queue_types",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_queue_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.tests.unit.events.test_queue_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_queue_types",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.events.test_queue_types",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_helpers_init",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_helpers_init",
      "target": "importlib"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_helpers_init",
      "target": "inspect"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_helpers_init",
      "target": "types"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_pipeline_helpers_init",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_types",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_types",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_registry",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_registry",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_registry",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_registry",
      "target": "threading"
    },
    {
      "source": "ai_trader.tests.unit.events.test_event_bus_registry",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.unit.events.test_deduplication_tracker",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_deduplication_tracker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_deduplication_tracker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_deduplication_tracker",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_deduplication_tracker",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.tests.unit.events.test_deduplication_tracker",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_handler_stats_tracker",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_handler_stats_tracker",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_handler_stats_tracker",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_handler_stats_tracker",
      "target": "threading"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge_initializer",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge_initializer",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge_initializer",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge_initializer",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge_initializer",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.unit.events.test_scanner_feature_bridge_initializer",
      "target": "threading"
    },
    {
      "source": "ai_trader.tests.unit.events.test_dead_letter_queue_manager",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_dead_letter_queue_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.unit.events.test_dead_letter_queue_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.unit.events.test_dead_letter_queue_manager",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_dead_letter_queue_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_dead_letter_queue_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_dead_letter_queue_manager",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config_loading",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config_loading",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config_loading",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config_loading",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config_loading",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config_loading",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config_loading",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_config_loading",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.unit.events.test_events_init",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_events_init",
      "target": "importlib"
    },
    {
      "source": "ai_trader.tests.unit.events.test_events_init",
      "target": "inspect"
    },
    {
      "source": "ai_trader.tests.unit.events.test_events_init",
      "target": "types"
    },
    {
      "source": "ai_trader.tests.unit.events.test_events_init",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_priority_calculator",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_priority_calculator",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_priority_calculator",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.unit.events.test_priority_calculator",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.unit.events.test_priority_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_priority_calculator",
      "target": "threading"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_group_mapper",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_group_mapper",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_group_mapper",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_group_mapper",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_group_mapper",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.unit.events.test_feature_group_mapper",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "pytest_asyncio"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "shutil"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.integration.conftest",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.test_unified_feature_engine_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_unified_feature_engine_integration",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.test_unified_feature_engine_integration",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.integration.test_unified_feature_engine_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_unified_feature_engine_integration",
      "target": "logging"
    },
    {
      "source": "ai_trader.tests.integration.test_unified_feature_engine_integration",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.integration.test_unified_feature_engine_integration",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.test_unified_feature_engine_integration",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.integration.test_unified_feature_engine_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end_workflow",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end_workflow",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end_workflow",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end_workflow",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_execution_engine_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_execution_engine_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_execution_engine_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_execution_engine_integration",
      "target": "decimal"
    },
    {
      "source": "ai_trader.tests.integration.test_execution_engine_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.test_execution_engine_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_execution_engine_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_scanner_feature_bridge",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_scanner_feature_bridge",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_scanner_feature_bridge",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.test_scanner_feature_bridge",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.integration.test_scanner_feature_bridge",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.test_scanner_feature_bridge",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_scanner_feature_bridge",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_scanner_feature_bridge",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.test_scanner_feature_bridge",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.test_scanner_feature_bridge",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.test_end_to_end",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "redis"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "shutil"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_pipeline_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_complete",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_complete",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_complete",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_complete",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_complete",
      "target": "uuid"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_complete",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.test_dual_storage_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_infrastructure",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_infrastructure",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_infrastructure",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_infrastructure",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.test_infrastructure",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_bulk_loaders",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_backfill_event_system",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_backfill_event_system",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_backfill_event_system",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_backfill_event_system",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_backfill_event_system",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.test_backfill_event_system",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.integration.test_backfill_event_system",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.test_backfill_event_system",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "test_setup"
    },
    {
      "source": "ai_trader.tests.integration.test_comprehensive_pipeline",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_orchestrator_priority",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.integration.test_orchestrator_priority",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.test_orchestrator_priority",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_orchestrator_priority",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_orchestrator_priority",
      "target": "traceback"
    },
    {
      "source": "ai_trader.tests.integration.run_integration_tests",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.integration.run_integration_tests",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.integration.run_integration_tests",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.run_integration_tests",
      "target": "argparse"
    },
    {
      "source": "ai_trader.tests.integration.run_integration_tests",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.tests.integration.test_event_feature_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_event_feature_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_event_feature_integration",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.test_event_feature_integration",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.integration.test_event_feature_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_event_feature_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_event_feature_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.test_event_feature_integration",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.test_event_feature_integration",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.test_event_feature_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_corporate_actions_etl",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_corporate_actions_etl",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_corporate_actions_etl",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_corporate_actions_etl",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_corporate_actions_etl",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.test_corporate_actions_etl",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.integration.test_corporate_actions_etl",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.test_corporate_actions_etl",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "shutil"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.test_feature_storage_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.data_pipeline.test_complete_flow",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.data_pipeline.test_complete_flow",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.data_pipeline.test_complete_flow",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.data_pipeline.test_complete_flow",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.data_pipeline.test_complete_flow",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.data_pipeline.test_complete_flow",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.data_pipeline.test_complete_flow",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_news_data_flow",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_news_data_flow",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_news_data_flow",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_news_data_flow",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_news_data_flow",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_news_data_flow",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_news_data_flow",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_news_data_flow",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_market_data_flow",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_market_data_flow",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_market_data_flow",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_market_data_flow",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_market_data_flow",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_market_data_flow",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_market_data_flow",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.data_flow.test_market_data_flow",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.integration.scanners.test_multi_layer_scanning",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.test_multi_layer_scanning",
      "target": "pytest_asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.test_multi_layer_scanning",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.test_multi_layer_scanning",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.scanners.test_multi_layer_scanning",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.test_multi_layer_scanning",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.scanners.test_multi_layer_scanning",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_technical_scanner_repository",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_technical_scanner_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_technical_scanner_repository",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_technical_scanner_repository",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_technical_scanner_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.conftest",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.conftest",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.conftest",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.conftest",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.conftest",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.conftest",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.conftest",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.conftest",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_volume_scanner_repository",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_volume_scanner_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_volume_scanner_repository",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_volume_scanner_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_volume_scanner_repository",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_storage_tier_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_storage_tier_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_storage_tier_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_storage_tier_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_storage_tier_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_social_scanner_repository",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_social_scanner_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_social_scanner_repository",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_social_scanner_repository",
      "target": "collections"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_social_scanner_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_news_scanner_repository",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_news_scanner_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_news_scanner_repository",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_news_scanner_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_earnings_scanner_repository",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_earnings_scanner_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_earnings_scanner_repository",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_earnings_scanner_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_scanner_data_repository",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_scanner_data_repository",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_scanner_data_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_scanner_data_repository",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.repository.test_scanner_data_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.conftest",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.conftest",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.conftest",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.conftest",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.conftest",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.conftest",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.conftest",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.conftest",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.conftest",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_complete_scanner_workflow",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_complete_scanner_workflow",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_complete_scanner_workflow",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_complete_scanner_workflow",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_complete_scanner_workflow",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_complete_scanner_workflow",
      "target": "psutil"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_complete_scanner_workflow",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_complete_scanner_workflow",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_scanner_orchestrator_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_scanner_orchestrator_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_scanner_orchestrator_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_scanner_orchestrator_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_scanner_orchestrator_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_scanner_orchestrator_integration",
      "target": "random"
    },
    {
      "source": "ai_trader.tests.integration.scanners.end_to_end.test_scanner_orchestrator_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_event_bus_scanner_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_event_bus_scanner_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_event_bus_scanner_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_event_bus_scanner_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_event_bus_scanner_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_event_bus_scanner_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_event_bus_scanner_integration",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_event_bus_scanner_integration",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.conftest",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.conftest",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.conftest",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.conftest",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.conftest",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.conftest",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.conftest",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.conftest",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_feature_bridge_events",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_feature_bridge_events",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_feature_bridge_events",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_feature_bridge_events",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_feature_bridge_events",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_feature_bridge_events",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_event_publishing",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_event_publishing",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_event_publishing",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_event_publishing",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_event_publishing",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_event_publishing",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.scanners.event_bus.test_scanner_event_publishing",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.mock_services",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.mock_services",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.mock_services",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.mock_services",
      "target": "random"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.mock_services",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "redis"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "shutil"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.fixtures.feature_pipeline_fixtures",
      "target": "fnmatch"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_coordination_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_coordination_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_coordination_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_coordination_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_coordination_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_coordination_integration",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_coordination_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_coordination_integration",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.events.test_feature_pipeline_helpers_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.events.test_feature_pipeline_helpers_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_feature_pipeline_helpers_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.events.test_feature_pipeline_helpers_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_feature_pipeline_helpers_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.events.test_feature_pipeline_helpers_integration",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.integration.events.test_feature_pipeline_helpers_integration",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.events.test_feature_pipeline_helpers_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.events.test_feature_pipeline_helpers_integration",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "resource"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "gc"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "psutil"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.events.test_performance_integration",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_driven_engine",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_driven_engine",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_driven_engine",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_driven_engine",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_driven_engine",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_driven_engine",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_driven_engine",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.events.test_error_handling_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.events.test_error_handling_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_error_handling_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.events.test_error_handling_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_error_handling_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.events.test_error_handling_integration",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.events.test_error_handling_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.events.test_error_handling_integration",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.events.test_scanner_bridge_helpers_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.events.test_scanner_bridge_helpers_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_scanner_bridge_helpers_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.events.test_scanner_bridge_helpers_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_scanner_bridge_helpers_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.events.test_scanner_bridge_helpers_integration",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.integration.events.test_scanner_bridge_helpers_integration",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.integration.events.test_scanner_bridge_helpers_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_helpers_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_helpers_integration",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_helpers_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_helpers_integration",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_helpers_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_helpers_integration",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_helpers_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.events.test_event_bus_helpers_integration",
      "target": "tests"
    },
    {
      "source": "ai_trader.tests.integration.trading.test_order_lifecycle",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.trading.test_order_lifecycle",
      "target": "pytest_asyncio"
    },
    {
      "source": "ai_trader.tests.integration.trading.test_order_lifecycle",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.trading.test_order_lifecycle",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.trading.test_order_lifecycle",
      "target": "decimal"
    },
    {
      "source": "ai_trader.tests.integration.trading.test_order_lifecycle",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.trading.test_order_lifecycle",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.trading.test_order_lifecycle",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_live_risk_monitor",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_live_risk_monitor",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_live_risk_monitor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_live_risk_monitor",
      "target": "decimal"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_live_risk_monitor",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_live_risk_monitor",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_live_risk_monitor",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_position_sizing",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_position_sizing",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_position_sizing",
      "target": "decimal"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_position_sizing",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_position_sizing",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_position_sizing",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.integration.risk.test_position_sizing",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.fixtures.mock_broker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.fixtures.mock_broker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.fixtures.mock_broker",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.fixtures.mock_broker",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.fixtures.mock_broker",
      "target": "uuid"
    },
    {
      "source": "ai_trader.tests.fixtures.mock_broker",
      "target": "random"
    },
    {
      "source": "ai_trader.tests.fixtures.mock_broker",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.fixtures.mock_broker",
      "target": "trading_engine"
    },
    {
      "source": "ai_trader.tests.fixtures.mock_broker",
      "target": "models"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "logging"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "test_setup"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "traceback"
    },
    {
      "source": "ai_trader.tests.fixtures.test_unified_features_fixtures",
      "target": "pyarrow"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.test_configs",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.mock_data",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.mock_data",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.mock_data",
      "target": "random"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.mock_data",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.mock_clients",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.mock_clients",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.mock_clients",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.mock_clients",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.mock_clients",
      "target": "mock_data"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.database_fixtures",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.database_fixtures",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.database_fixtures",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.database_fixtures",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.database_fixtures",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.fixtures.data_pipeline.database_fixtures",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.fixtures.events.mock_events",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.fixtures.events.mock_events",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.fixtures.events.mock_configs",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.fixtures.events.mock_configs",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.fixtures.events.mock_configs",
      "target": "yaml"
    },
    {
      "source": "ai_trader.tests.fixtures.events.mock_configs",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.fixtures.events.mock_database",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.fixtures.events.mock_database",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.fixtures.events.mock_database",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.fixtures.events.mock_database",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.monitoring.test_archive_widget",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.monitoring.test_archive_widget",
      "target": "pytest_asyncio"
    },
    {
      "source": "ai_trader.tests.monitoring.test_archive_widget",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.monitoring.test_archive_widget",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.monitoring.test_archive_widget",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.monitoring.test_archive_widget",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.monitoring.test_archive_widget",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.monitoring.test_archive_widget",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.monitoring.test_archive_widget",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "psutil"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "gc"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.performance.test_system_performance",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "psutil"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "gc"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.performance.test_integration_pipeline_stress",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.performance.test_archive_performance",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "psutil"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "gc"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "logging"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "threading"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "unittest"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "queue"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.tests.performance.test_system_health_validation",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "pytest_asyncio"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "psutil"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "gc"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "random"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "string"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress_simple",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "pytest"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "time"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "pandas"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "numpy"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "psutil"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "gc"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "os"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "datetime"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "typing"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "json"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "random"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "string"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "sys"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "main"
    },
    {
      "source": "ai_trader.tests.stress.test_archive_stress",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.examples.execution_engine_example",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.execution_engine_example",
      "target": "logging"
    },
    {
      "source": "ai_trader.examples.execution_engine_example",
      "target": "datetime"
    },
    {
      "source": "ai_trader.examples.execution_engine_example",
      "target": "typing"
    },
    {
      "source": "ai_trader.examples.execution_engine_example",
      "target": "main"
    },
    {
      "source": "ai_trader.examples.risk_management_demo",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.risk_management_demo",
      "target": "logging"
    },
    {
      "source": "ai_trader.examples.risk_management_demo",
      "target": "datetime"
    },
    {
      "source": "ai_trader.examples.risk_management_demo",
      "target": "decimal"
    },
    {
      "source": "ai_trader.examples.risk_management_demo",
      "target": "typing"
    },
    {
      "source": "ai_trader.examples.risk_management_demo",
      "target": "risk_management"
    },
    {
      "source": "ai_trader.examples.risk_management_demo",
      "target": "trading_engine"
    },
    {
      "source": "ai_trader.examples.risk_management_demo",
      "target": "config"
    },
    {
      "source": "ai_trader.examples.data_pipeline_integration_example",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.data_pipeline_integration_example",
      "target": "logging"
    },
    {
      "source": "ai_trader.examples.data_pipeline_integration_example",
      "target": "datetime"
    },
    {
      "source": "ai_trader.examples.data_pipeline_integration_example",
      "target": "typing"
    },
    {
      "source": "ai_trader.examples.data_pipeline_integration_example",
      "target": "main"
    },
    {
      "source": "ai_trader.examples.ml_trading_example",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.ml_trading_example",
      "target": "logging"
    },
    {
      "source": "ai_trader.examples.ml_trading_example",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.examples.ml_trading_example",
      "target": "sys"
    },
    {
      "source": "ai_trader.examples.ml_trading_example",
      "target": "main"
    },
    {
      "source": "ai_trader.examples.ml_trading_example",
      "target": "yaml"
    },
    {
      "source": "ai_trader.examples.backtests.strategy_backtest",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.backtests.strategy_backtest",
      "target": "datetime"
    },
    {
      "source": "ai_trader.examples.backtests.strategy_backtest",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.examples.backtests.strategy_backtest",
      "target": "sys"
    },
    {
      "source": "ai_trader.examples.backtests.strategy_backtest",
      "target": "typing"
    },
    {
      "source": "ai_trader.examples.backtests.strategy_backtest",
      "target": "pandas"
    },
    {
      "source": "ai_trader.examples.backtests.strategy_backtest",
      "target": "numpy"
    },
    {
      "source": "ai_trader.examples.backtests.strategy_backtest",
      "target": "main"
    },
    {
      "source": "ai_trader.examples.backtests.strategy_backtest",
      "target": "structlog"
    },
    {
      "source": "ai_trader.examples.backtests.strategy_backtest",
      "target": "strategies"
    },
    {
      "source": "ai_trader.examples.strategies.mean_reversion",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.strategies.mean_reversion",
      "target": "datetime"
    },
    {
      "source": "ai_trader.examples.strategies.mean_reversion",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.examples.strategies.mean_reversion",
      "target": "sys"
    },
    {
      "source": "ai_trader.examples.strategies.mean_reversion",
      "target": "typing"
    },
    {
      "source": "ai_trader.examples.strategies.mean_reversion",
      "target": "pandas"
    },
    {
      "source": "ai_trader.examples.strategies.mean_reversion",
      "target": "numpy"
    },
    {
      "source": "ai_trader.examples.strategies.mean_reversion",
      "target": "main"
    },
    {
      "source": "ai_trader.examples.strategies.mean_reversion",
      "target": "structlog"
    },
    {
      "source": "ai_trader.examples.indicators.custom_rsi",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.indicators.custom_rsi",
      "target": "numpy"
    },
    {
      "source": "ai_trader.examples.indicators.custom_rsi",
      "target": "pandas"
    },
    {
      "source": "ai_trader.examples.indicators.custom_rsi",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.examples.indicators.custom_rsi",
      "target": "sys"
    },
    {
      "source": "ai_trader.examples.indicators.custom_rsi",
      "target": "typing"
    },
    {
      "source": "ai_trader.examples.indicators.custom_rsi",
      "target": "main"
    },
    {
      "source": "ai_trader.examples.indicators.custom_rsi",
      "target": "structlog"
    },
    {
      "source": "ai_trader.examples.configs.environment_override",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.configs.environment_override",
      "target": "os"
    },
    {
      "source": "ai_trader.examples.configs.environment_override",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.examples.configs.environment_override",
      "target": "sys"
    },
    {
      "source": "ai_trader.examples.configs.environment_override",
      "target": "main"
    },
    {
      "source": "ai_trader.examples.configs.environment_override",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.examples.configs.basic_config",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.configs.basic_config",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.examples.configs.basic_config",
      "target": "sys"
    },
    {
      "source": "ai_trader.examples.configs.basic_config",
      "target": "main"
    },
    {
      "source": "ai_trader.examples.scanners.volume_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.scanners.volume_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.examples.scanners.volume_scanner",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.examples.scanners.volume_scanner",
      "target": "sys"
    },
    {
      "source": "ai_trader.examples.scanners.volume_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.examples.scanners.volume_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.examples.scanners.volume_scanner",
      "target": "structlog"
    },
    {
      "source": "ai_trader.examples.monitoring.alert_setup",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.examples.monitoring.alert_setup",
      "target": "datetime"
    },
    {
      "source": "ai_trader.examples.monitoring.alert_setup",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.examples.monitoring.alert_setup",
      "target": "sys"
    },
    {
      "source": "ai_trader.examples.monitoring.alert_setup",
      "target": "typing"
    },
    {
      "source": "ai_trader.examples.monitoring.alert_setup",
      "target": "main"
    },
    {
      "source": "ai_trader.examples.monitoring.alert_setup",
      "target": "structlog"
    },
    {
      "source": "ai_trader.scripts.generate_tsla_validation_report",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.generate_tsla_validation_report",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.generate_tsla_validation_report",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.generate_tsla_validation_report",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.generate_tsla_validation_report",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.generate_tsla_validation_report",
      "target": "pandas"
    },
    {
      "source": "ai_trader.scripts.generate_tsla_validation_report",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.generate_tsla_validation_report",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.debug_corporate_actions_freeze",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.debug_corporate_actions_freeze",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.debug_corporate_actions_freeze",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.debug_corporate_actions_freeze",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.debug_corporate_actions_freeze",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.debug_corporate_actions_freeze",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.debug_corporate_actions_freeze",
      "target": "traceback"
    },
    {
      "source": "ai_trader.scripts.analyze_layer1_limits",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.analyze_layer1_limits",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.analyze_layer1_limits",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.analyze_layer1_limits",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.analyze_layer1_limits",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.run_tsla_full_test",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.scripts.run_tsla_full_test",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.run_tsla_full_test",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.run_tsla_full_test",
      "target": "time"
    },
    {
      "source": "ai_trader.scripts.run_tsla_full_test",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.run_tsla_full_test",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.trace_layer1_issue",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.trace_layer1_issue",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.trace_layer1_issue",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.trace_layer1_issue",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.trace_layer1_issue",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.check_market_data",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.check_market_data",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.check_market_data",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.check_market_data",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.check_market_data",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.check_market_data",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "yaml"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "src"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.scripts.run_scanner_pipeline",
      "target": "pandas"
    },
    {
      "source": "ai_trader.scripts.test_corporate_actions_fix",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.test_corporate_actions_fix",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.test_corporate_actions_fix",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.test_corporate_actions_fix",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.test_corporate_actions_fix",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.test_corporate_actions_fix",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.test_corporate_actions_fix",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.test_corporate_actions_fix",
      "target": "traceback"
    },
    {
      "source": "ai_trader.scripts.check_aa_liquidity",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.check_aa_liquidity",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.check_aa_liquidity",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.check_aa_liquidity",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.check_aa_liquidity",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.verify_conflict_behavior",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.verify_conflict_behavior",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.verify_conflict_behavior",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.verify_conflict_behavior",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.verify_conflict_behavior",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.analyze_database_schema",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.analyze_database_schema",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.analyze_database_schema",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.analyze_database_schema",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.analyze_database_schema",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.analyze_database_schema",
      "target": "collections"
    },
    {
      "source": "ai_trader.scripts.analyze_database_schema",
      "target": "sqlalchemy"
    },
    {
      "source": "ai_trader.scripts.analyze_database_schema",
      "target": "dotenv"
    },
    {
      "source": "ai_trader.scripts.analyze_database_schema",
      "target": "psycopg2"
    },
    {
      "source": "ai_trader.scripts.calculate_pairs_stats",
      "target": "pandas"
    },
    {
      "source": "ai_trader.scripts.calculate_pairs_stats",
      "target": "statsmodels"
    },
    {
      "source": "ai_trader.scripts.calculate_pairs_stats",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.calculate_pairs_stats",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.calculate_pairs_stats",
      "target": "ai_trader"
    },
    {
      "source": "ai_trader.scripts.test_backfill_fixes",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.test_backfill_fixes",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.test_backfill_fixes",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.test_backfill_fixes",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.test_backfill_fixes",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.test_backfill_fixes",
      "target": "traceback"
    },
    {
      "source": "ai_trader.scripts.test_backfill_fixes",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.test_backfill_fixes",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "yaml"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.run_layer1_backfill",
      "target": "shutil"
    },
    {
      "source": "ai_trader.scripts.deploy_database_optimizations",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.deploy_database_optimizations",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.deploy_database_optimizations",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.deploy_database_optimizations",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.deploy_database_optimizations",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.deploy_database_optimizations",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.deploy_database_optimizations",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.deploy_database_optimizations",
      "target": "ai_trader"
    },
    {
      "source": "ai_trader.scripts.deploy_database_optimizations",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.validate_db_empty",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.validate_db_empty",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.validate_db_empty",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.validate_db_empty",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.validate_db_empty",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.validate_db_empty",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.debug_layer1_aa",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.debug_layer1_aa",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.debug_layer1_aa",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.debug_layer1_aa",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.debug_layer1_aa",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.analyze_archive_duplicates",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.analyze_archive_duplicates",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.analyze_archive_duplicates",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.analyze_archive_duplicates",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.analyze_archive_duplicates",
      "target": "collections"
    },
    {
      "source": "ai_trader.scripts.analyze_archive_duplicates",
      "target": "pandas"
    },
    {
      "source": "ai_trader.scripts.analyze_archive_duplicates",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.analyze_archive_duplicates",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.analyze_archive_duplicates",
      "target": "traceback"
    },
    {
      "source": "ai_trader.scripts.test_ml_trading",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.test_ml_trading",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.test_ml_trading",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.test_ml_trading",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.test_ml_trading",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.test_ml_trading",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.code_analyzer",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.code_analyzer",
      "target": "ast"
    },
    {
      "source": "ai_trader.scripts.code_analyzer",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.code_analyzer",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.code_analyzer",
      "target": "collections"
    },
    {
      "source": "ai_trader.scripts.code_analyzer",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.code_analyzer",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.scripts.health_check",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.health_check",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.health_check",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.health_check",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.health_check",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.health_check",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.health_check",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.health_check",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.health_check",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.init_database",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.init_database",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.init_database",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.init_database",
      "target": "sqlalchemy"
    },
    {
      "source": "ai_trader.scripts.init_database",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.init_database",
      "target": "dotenv"
    },
    {
      "source": "ai_trader.scripts.init_database",
      "target": "ai_trader"
    },
    {
      "source": "ai_trader.scripts.test_polygon_reference",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.test_polygon_reference",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.test_polygon_reference",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.test_polygon_reference",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.test_polygon_reference",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.test_polygon_reference",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.test_tsla_scanner_pipeline",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.test_tsla_scanner_pipeline",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.test_tsla_scanner_pipeline",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.test_tsla_scanner_pipeline",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.test_tsla_scanner_pipeline",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.test_tsla_scanner_pipeline",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.test_tsla_scanner_pipeline",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.scripts.test_tsla_scanner_pipeline",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.load_datalake_to_db",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.load_datalake_to_db",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.load_datalake_to_db",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.load_datalake_to_db",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.load_datalake_to_db",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.load_datalake_to_db",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.load_datalake_to_db",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.load_datalake_to_db",
      "target": "pandas"
    },
    {
      "source": "ai_trader.scripts.load_datalake_to_db",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.validate_tsla_backfill",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.validate_tsla_backfill",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.validate_tsla_backfill",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.validate_tsla_backfill",
      "target": "pandas"
    },
    {
      "source": "ai_trader.scripts.validate_tsla_backfill",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.validate_tsla_backfill",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.validate_tsla_backfill",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.deploy_ml_model",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.deploy_ml_model",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.deploy_ml_model",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.deploy_ml_model",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.deploy_ml_model",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.deploy_ml_model",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.deploy_ml_model",
      "target": "joblib"
    },
    {
      "source": "ai_trader.scripts.deploy_ml_model",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.deploy_ml_model",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.discover_stat_arb_pairs",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.discover_stat_arb_pairs",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.discover_stat_arb_pairs",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.discover_stat_arb_pairs",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.discover_stat_arb_pairs",
      "target": "itertools"
    },
    {
      "source": "ai_trader.scripts.discover_stat_arb_pairs",
      "target": "pandas"
    },
    {
      "source": "ai_trader.scripts.discover_stat_arb_pairs",
      "target": "numpy"
    },
    {
      "source": "ai_trader.scripts.discover_stat_arb_pairs",
      "target": "statsmodels"
    },
    {
      "source": "ai_trader.scripts.run_migration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.run_migration",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.run_migration",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.run_migration",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.run_migration",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.run_migration",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.run_migration",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.run_migration",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.run_migration",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "pandas"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "numpy"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "dotenv"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "ai_trader"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.research.run_simple_backtest",
      "target": "sqlalchemy"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_features_table",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_features_table",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_features_table",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_features_table",
      "target": "asyncpg"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_features_table",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_features_table",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_features_table",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system_direct",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system_direct",
      "target": "asyncpg"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system_direct",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system_direct",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system_direct",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system_direct",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system_direct",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.migrations.migrate_to_layer_system",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.migrations.rollback_layer_migration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.migrations.rollback_layer_migration",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.migrations.rollback_layer_migration",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.migrations.rollback_layer_migration",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.migrations.rollback_layer_migration",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.analysis.discover_features",
      "target": "importlib"
    },
    {
      "source": "ai_trader.scripts.analysis.discover_features",
      "target": "inspect"
    },
    {
      "source": "ai_trader.scripts.analysis.discover_features",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.analysis.discover_features",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.analysis.discover_features",
      "target": "datetime"
    },
    {
      "source": "ai_trader.scripts.analysis.discover_features",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.analysis.discover_features",
      "target": "typing"
    },
    {
      "source": "ai_trader.scripts.scheduler.master_scheduler",
      "target": "os"
    },
    {
      "source": "ai_trader.scripts.scheduler.master_scheduler",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.scheduler.master_scheduler",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.scheduler.master_scheduler",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.scheduler.master_scheduler",
      "target": "main"
    },
    {
      "source": "ai_trader.scripts.testing.test_webhook",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.scripts.testing.test_webhook",
      "target": "argparse"
    },
    {
      "source": "ai_trader.scripts.testing.test_webhook",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.testing.test_webhook",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.testing.test_webhook",
      "target": "src"
    },
    {
      "source": "ai_trader.scripts.maintenance.migrate_data_lake",
      "target": "sys"
    },
    {
      "source": "ai_trader.scripts.maintenance.migrate_data_lake",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.scripts.maintenance.migrate_data_lake",
      "target": "ai_trader"
    },
    {
      "source": "ai_trader.scripts.maintenance.migrate_data_lake",
      "target": "logging"
    },
    {
      "source": "ai_trader.scripts.maintenance.migrate_data_lake",
      "target": "json"
    },
    {
      "source": "ai_trader.scripts.maintenance.migrate_data_lake",
      "target": "argparse"
    },
    {
      "source": "ai_trader.test_helpers.test_position_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.test_helpers.test_position_manager",
      "target": "collections"
    },
    {
      "source": "ai_trader.test_helpers.test_position_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.test_helpers.test_position_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.test_helpers.test_position_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.tests.test_scanner_to_backfill_e2e",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.tests.test_scanner_to_backfill_e2e",
      "target": "json"
    },
    {
      "source": "ai_trader.src.tests.test_scanner_to_backfill_e2e",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.tests.test_scanner_to_backfill_e2e",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.tests.test_scanner_to_backfill_e2e",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.tests.test_scanner_to_backfill_e2e",
      "target": "os"
    },
    {
      "source": "ai_trader.src.tests.test_scanner_to_backfill_e2e",
      "target": "main"
    },
    {
      "source": "ai_trader.src.tests.test_scanner_to_backfill_e2e",
      "target": "unittest"
    },
    {
      "source": "ai_trader.src.tests.integration.test_layer_migration_e2e",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.tests.integration.test_layer_migration_e2e",
      "target": "pytest"
    },
    {
      "source": "ai_trader.src.tests.integration.test_layer_migration_e2e",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.tests.integration.test_layer_migration_e2e",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.tests.integration.test_layer_migration_e2e",
      "target": "unittest"
    },
    {
      "source": "ai_trader.src.tests.integration.test_layer_migration_e2e",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.__init__",
      "target": "core"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.types",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.alpaca_assets_client",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.alpaca_assets_client",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.alpaca_assets_client",
      "target": "alpaca"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.alpaca_assets_client",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.base_client",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.base_client",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.base_client",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.base_client",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.base_client",
      "target": "aiohttp"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.base_client",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.base_client",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_corporate_actions_client",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_corporate_actions_client",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_corporate_actions_client",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_corporate_actions_client",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_corporate_actions_client",
      "target": "base_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.__init__",
      "target": "base_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.__init__",
      "target": "polygon_market_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.__init__",
      "target": "polygon_news_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.__init__",
      "target": "polygon_fundamentals_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.__init__",
      "target": "polygon_corporate_actions_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_fundamentals_client",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_fundamentals_client",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_fundamentals_client",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_fundamentals_client",
      "target": "base_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_news_client",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_news_client",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_news_client",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_news_client",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_news_client",
      "target": "base_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_market_client",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_market_client",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_market_client",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.clients.polygon_market_client",
      "target": "base_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.factories.bulk_loader_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.factories.bulk_loader_factory",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.factories.bulk_loader_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.factories.__init__",
      "target": "fundamentals_format_factory"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.factories.fundamentals_format_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.factories.fundamentals_format_factory",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.factories.fundamentals_format_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.fundamentals",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.fundamentals",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.fundamentals",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.fundamentals",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.fundamentals",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.fundamentals",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.__init__",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.__init__",
      "target": "market_data"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.__init__",
      "target": "market_data_split"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.__init__",
      "target": "news"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.__init__",
      "target": "fundamentals"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.__init__",
      "target": "corporate_actions"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data_split",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data_split",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data_split",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data_split",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data_split",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data_split",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data_split",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.corporate_actions",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.corporate_actions",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.corporate_actions",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.corporate_actions",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.corporate_actions",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data",
      "target": "io"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data",
      "target": "csv"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.market_data",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.base",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.base",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.base",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.base",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.base",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.base",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.base",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.base",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.news",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.news",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.news",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.news",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.news",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.news",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.news",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.ingestion.loaders.news",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.enums",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.enums",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.enums",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.__init__",
      "target": "enums"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.__init__",
      "target": "exceptions"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.exceptions",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.exceptions",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.__init__",
      "target": "base_processor"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.__init__",
      "target": "base_manager"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.__init__",
      "target": "base_service"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_manager",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_manager",
      "target": "exceptions"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_manager",
      "target": "enums"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_service",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_service",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_service",
      "target": "exceptions"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_service",
      "target": "enums"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_service",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_service",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_processor",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_processor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_processor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_processor",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_processor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_processor",
      "target": "exceptions"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.core.base_classes.base_processor",
      "target": "enums"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.__init__",
      "target": "transformers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.__init__",
      "target": "standardizers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.__init__",
      "target": "cleaners"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.__init__",
      "target": "validators"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.__init__",
      "target": "etl"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.__init__",
      "target": "orchestrator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "transformers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "standardizers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "cleaners"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "validators"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "etl"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.orchestrator",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.cleaners.__init__",
      "target": "data_cleaner"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.cleaners.data_cleaner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.cleaners.data_cleaner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.cleaners.data_cleaner",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.cleaners.data_cleaner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.__init__",
      "target": "etl_manager"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.__init__",
      "target": "loader_coordinator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.etl_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.etl_manager",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.etl_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.etl_manager",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.etl_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.etl_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.etl_manager",
      "target": "loader_coordinator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.loader_coordinator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.loader_coordinator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.etl.loader_coordinator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.__init__",
      "target": "base_transformer"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.__init__",
      "target": "data_transformer"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.data_transformer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.data_transformer",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.data_transformer",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.data_transformer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.data_transformer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.data_transformer",
      "target": "base_transformer"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.data_transformer",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.base_transformer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.base_transformer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.base_transformer",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.transformers.base_transformer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.validators.pipeline_validator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.validators.pipeline_validator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.validators.pipeline_validator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.validators.pipeline_validator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.validators.pipeline_validator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.validators.pipeline_validator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.validators.__init__",
      "target": "pipeline_validator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.standardizers.data_standardizer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.standardizers.data_standardizer",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.standardizers.data_standardizer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.standardizers.data_standardizer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.processing.standardizers.__init__",
      "target": "data_standardizer"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.dual_storage_startup",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.dual_storage_startup",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive_initializer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.storage_router",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.storage_router",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.storage_router",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.storage_router",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.storage_router",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.storage_router",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.database_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.database_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.database_factory",
      "target": "database_adapter"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.database_adapter",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.database_adapter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.database_adapter",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.database_adapter",
      "target": "asyncpg"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.database_adapter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.__init__",
      "target": "data_archive"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.data_archive",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.data_archive",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.data_archive",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.data_archive",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.data_archive",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.data_archive",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.data_archive",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.data_archive",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.data_archive",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.archive.data_archive",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.bulk_loaders.fundamentals",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.bulk_loaders.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.bulk_loaders.market_data_split",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.bulk_loaders.corporate_actions",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.bulk_loaders.news",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.news_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.news_repository",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.news_repository",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.news_repository",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.news_repository",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.news_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.news_repository",
      "target": "base_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.news_repository",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_coordinator",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_coordinator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_coordinator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_coordinator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_coordinator",
      "target": "repository_patterns"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_coordinator",
      "target": "repository_query_builder"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_coordinator",
      "target": "repository_core_operations"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_coordinator",
      "target": "repository_query_processor"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository",
      "target": "base_repository_coordinator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository",
      "target": "repository_patterns"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository",
      "target": "repository_query_builder"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository",
      "target": "repository_core_operations"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository",
      "target": "repository_query_processor"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.models",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.models",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.models",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.models",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository",
      "target": "base_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.feature_repository",
      "target": "constants"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_query_processor",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_query_processor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_query_processor",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_query_processor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_query_processor",
      "target": "repository_query_builder"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.specialized_repositories",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.specialized_repositories",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.specialized_repositories",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.specialized_repositories",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.specialized_repositories",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.specialized_repositories",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.specialized_repositories",
      "target": "base_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.specialized_repositories",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory",
      "target": "inspect"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory",
      "target": "market_data_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory",
      "target": "company_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory",
      "target": "feature_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory",
      "target": "scanner_data_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory",
      "target": "news_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory",
      "target": "financials_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_factory",
      "target": "specialized_repositories"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "repository_types"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "repository_patterns"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "base_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "repository_factory"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "repository_provider"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "market_data_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "company_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "feature_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "scanner_data_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "news_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "financials_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.__init__",
      "target": "specialized_repositories"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.financials_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.financials_repository",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.financials_repository",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.financials_repository",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.financials_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.financials_repository",
      "target": "base_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.financials_repository",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.scanner_data_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.scanner_data_repository",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.scanner_data_repository",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.scanner_data_repository",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.scanner_data_repository",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.scanner_data_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.scanner_data_repository",
      "target": "base_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.scanner_data_repository",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.company_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.company_repository",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.company_repository",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.company_repository",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.company_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.company_repository",
      "target": "base_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.company_repository",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.company_repository",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_provider",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_provider",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_provider",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_provider",
      "target": "repository_factory"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_patterns",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_patterns",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_patterns",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_patterns",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_patterns",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_patterns",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_core_operations",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_core_operations",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_core_operations",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_core_operations",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_core_operations",
      "target": "repository_query_builder"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_types",
      "target": "copy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_original",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_original",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_original",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_original",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_original",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_original",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_original",
      "target": "repository_patterns"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.base_repository_original",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_query_builder",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_query_builder",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.repository_query_builder",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.market_data_repository",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.market_data_repository",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.market_data_repository",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.market_data_repository",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.market_data_repository",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.market_data_repository",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.market_data_repository",
      "target": "base_repository"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.market_data_repository",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.market_data_repository",
      "target": "constants"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.technical_analyzer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.technical_analyzer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.technical_analyzer",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.technical_analyzer",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.technical_analyzer",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.technical_analyzer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.batch_processor",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.batch_processor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.batch_processor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.batch_processor",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.batch_processor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.query_builder",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.query_builder",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.query_builder",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.query_builder",
      "target": "sql_validator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.__init__",
      "target": "query_builder"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.__init__",
      "target": "record_validator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.__init__",
      "target": "batch_processor"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.__init__",
      "target": "crud_executor"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.__init__",
      "target": "metrics_collector"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.__init__",
      "target": "sql_validator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.pattern_detector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.pattern_detector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.pattern_detector",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.pattern_detector",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.pattern_detector",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.metrics_collector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.metrics_collector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.metrics_collector",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.metrics_collector",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.crud_executor",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.crud_executor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.crud_executor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.crud_executor",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.crud_executor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.crud_executor",
      "target": "constants"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.record_validator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.record_validator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.record_validator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.sql_validator",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.sql_validator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.storage.repositories.helpers.sql_validator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.timeline_analyzer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.timeline_analyzer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.timeline_analyzer",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.timeline_analyzer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_service",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_service",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_service",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_service",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.__init__",
      "target": "data_fetch_service"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.__init__",
      "target": "gap_detection_service"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.__init__",
      "target": "etl_service"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.data_fetch_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.data_fetch_service",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.data_fetch_service",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.data_fetch_service",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.data_fetch_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.data_fetch_service",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.etl_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.etl_service",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.etl_service",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.etl_service",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.etl_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_priority_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_priority_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_priority_calculator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_priority_calculator",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_priority_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.data_existence_checker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.data_existence_checker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.data_existence_checker",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.data_existence_checker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_analyzer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_analyzer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_analyzer",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_analyzer",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_analyzer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_analyzer",
      "target": "timeline_analyzer"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_analyzer",
      "target": "data_existence_checker"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_coordinator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_coordinator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_coordinator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_coordinator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_coordinator",
      "target": "timeline_analyzer"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_coordinator",
      "target": "data_existence_checker"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.historical.gap_detection_coordinator",
      "target": "gap_analyzer"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.retention_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.retention_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.retention_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.__init__",
      "target": "layer_manager"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.__init__",
      "target": "retention_manager"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.__init__",
      "target": "event_coordinator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.__init__",
      "target": "coordinators"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.__init__",
      "target": "unified_pipeline"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.unified_pipeline",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.unified_pipeline",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.unified_pipeline",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.unified_pipeline",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.unified_pipeline",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.layer_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.layer_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.layer_manager",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.layer_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.layer_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.event_coordinator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.event_coordinator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.event_coordinator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.__init__",
      "target": "layer_coordinator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.__init__",
      "target": "data_fetch_coordinator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.__init__",
      "target": "storage_coordinator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.storage_coordinator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.storage_coordinator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.storage_coordinator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.storage_coordinator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.data_fetch_coordinator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.data_fetch_coordinator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.data_fetch_coordinator",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.data_fetch_coordinator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.data_fetch_coordinator",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.data_fetch_coordinator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.layer_coordinator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.layer_coordinator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.orchestration.coordinators.layer_coordinator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.__init__",
      "target": "container"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.__init__",
      "target": "ingestion"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.__init__",
      "target": "storage"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.__init__",
      "target": "processing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.text_processing_service",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.text_processing_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.text_processing_service",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.text_processing_service",
      "target": "html"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.text_processing_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.polygon_api_handler",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.polygon_api_handler",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.polygon_api_handler",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.polygon_api_handler",
      "target": "aiohttp"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.polygon_api_handler",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.__init__",
      "target": "deduplication_service"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.__init__",
      "target": "text_processing_service"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.__init__",
      "target": "metric_extraction_service"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.deduplication_service",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.deduplication_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.deduplication_service",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.deduplication_service",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.deduplication_service",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.deduplication_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.metric_extraction_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.metric_extraction_service",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.ingestion.metric_extraction_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.corporate_actions_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.corporate_actions_service",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.corporate_actions_service",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.corporate_actions_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.corporate_actions_service",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.__init__",
      "target": "corporate_actions_service"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.__init__",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.__init__",
      "target": "dividend"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.__init__",
      "target": "split"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.split",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.split",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.split",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.dividend",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.dividend",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.dividend",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.base",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.base",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.base",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.base",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.processing.action_processors.base",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.yahoo",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.yahoo",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.yahoo",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.yahoo",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.polygon",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.polygon",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.polygon",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.polygon",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.__init__",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.__init__",
      "target": "polygon"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.__init__",
      "target": "yahoo"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.__init__",
      "target": "preprocessed"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.preprocessed",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.preprocessed",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.preprocessed",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.preprocessed",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.preprocessed",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.base",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.base",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.base",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.base",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.base",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.format_handlers.base",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.qualification_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.qualification_service",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.qualification_service",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.qualification_service",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.qualification_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.__init__",
      "target": "qualification_service"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.__init__",
      "target": "table_routing_service"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.__init__",
      "target": "partition_manager"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.table_routing_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.table_routing_service",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.table_routing_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.partition_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.partition_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.partition_manager",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.partition_manager",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.storage.partition_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.container.service_container",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.container.service_container",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.services.container.__init__",
      "target": "service_container"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.__init__",
      "target": "core"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.__init__",
      "target": "validators"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.__init__",
      "target": "quality"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.__init__",
      "target": "metrics"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.__init__",
      "target": "coverage"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.__init__",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.__init__",
      "target": "utils"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.prometheus_exporter",
      "target": "exporters"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.prometheus_exporter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_stats_reporter",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_stats_reporter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_stats_reporter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_stats_reporter",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_stats_reporter",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_stats_reporter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.__init__",
      "target": "validation_metrics"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.__init__",
      "target": "prometheus_exporter"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.__init__",
      "target": "dashboard_generator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.__init__",
      "target": "validation_stats_reporter"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard_generator",
      "target": "dashboard"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_metrics",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_metrics",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_metrics",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_metrics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_metrics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_metrics",
      "target": "collectors"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.validation_metrics",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.__init__",
      "target": "metrics_collector"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.__init__",
      "target": "metric_aggregators"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.__init__",
      "target": "active_tracker"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.__init__",
      "target": "dashboard_config"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metrics_collector",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metrics_collector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metrics_collector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metrics_collector",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metrics_collector",
      "target": "active_tracker"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metrics_collector",
      "target": "metric_aggregators"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metrics_collector",
      "target": "dashboard_config"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metrics_collector",
      "target": "legacy_compatibility"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.active_tracker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.active_tracker",
      "target": "metrics_collector"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.dashboard_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.legacy_compatibility",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.legacy_compatibility",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.legacy_compatibility",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.legacy_compatibility",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metric_aggregators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metric_aggregators",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.collectors.metric_aggregators",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_exporter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_exporter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_exporter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_exporter",
      "target": "prometheus_registry"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_exporter",
      "target": "metric_processors"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_exporter",
      "target": "metric_formatters"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_exporter",
      "target": "prometheus_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_registry",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_registry",
      "target": "prometheus_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.prometheus_registry",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_formatters",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_formatters",
      "target": "csv"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_formatters",
      "target": "io"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_formatters",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_formatters",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_formatters",
      "target": "prometheus_client"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_formatters",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_formatters",
      "target": "prometheus_registry"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.__init__",
      "target": "prometheus_exporter"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.__init__",
      "target": "prometheus_registry"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.__init__",
      "target": "metric_processors"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.__init__",
      "target": "metric_formatters"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_processors",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_processors",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_processors",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.exporters.metric_processors",
      "target": "prometheus_registry"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.grafana_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.__init__",
      "target": "dashboard_generator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.__init__",
      "target": "grafana_config"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.__init__",
      "target": "panel_builders"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.__init__",
      "target": "alert_rules"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.alert_rules",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.alert_rules",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.alert_rules",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.alert_rules",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.panel_builders",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.dashboard_generator",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.dashboard_generator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.dashboard_generator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.dashboard_generator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.dashboard_generator",
      "target": "grafana_config"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.dashboard_generator",
      "target": "panel_builders"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.metrics.dashboard.dashboard_generator",
      "target": "alert_rules"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_pipeline",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_pipeline",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_pipeline",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_pipeline",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_stage_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_stage_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.__init__",
      "target": "validation_pipeline"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.__init__",
      "target": "validation_factory"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.__init__",
      "target": "validation_stage_factory"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_types",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_factory",
      "target": "validation_pipeline"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_factory",
      "target": "quality"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_factory",
      "target": "coverage"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_factory",
      "target": "validators"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_factory",
      "target": "metrics"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.validation_factory",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.stage_validators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.stage_validators",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.stage_validators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.core.stage_validators",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.__init__",
      "target": "data_quality_calculator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.__init__",
      "target": "data_cleaner"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.data_cleaner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.data_cleaner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.data_cleaner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.data_cleaner",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.data_cleaner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.data_quality_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.data_quality_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.data_quality_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.data_quality_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.quality.data_quality_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.config.__init__",
      "target": "validation_profile_manager"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.config.__init__",
      "target": "validation_rules_engine"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.config.validation_rules_engine",
      "target": "rules"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.config.validation_profile_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.config.validation_profile_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.config.validation_profile_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.config.validation_profile_manager",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.config.validation_profile_manager",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.utils.cache_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.utils.cache_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.utils.cache_manager",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.utils.cache_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.utils.cache_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_registry",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_registry",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_registry",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_registry",
      "target": "rule_definitions"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_registry",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_definitions",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_definitions",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_definitions",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_definitions",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.__init__",
      "target": "rule_definitions"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.__init__",
      "target": "rule_parser"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.__init__",
      "target": "rule_executor"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.__init__",
      "target": "rule_registry"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.__init__",
      "target": "rules_engine"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_parser",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_parser",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_parser",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_parser",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_parser",
      "target": "rule_definitions"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_executor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_executor",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_executor",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_executor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_executor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rule_executor",
      "target": "rule_definitions"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rules_engine",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rules_engine",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rules_engine",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rules_engine",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rules_engine",
      "target": "rule_definitions"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rules_engine",
      "target": "rule_parser"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rules_engine",
      "target": "rule_executor"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.rules.rules_engine",
      "target": "rule_registry"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.__init__",
      "target": "record_validator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.__init__",
      "target": "feature_validator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.__init__",
      "target": "market_data_validator"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.market_data_validator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.market_data_validator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.market_data_validator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.market_data_validator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.market_data_validator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.record_validator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.record_validator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.record_validator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.record_validator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.record_validator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.feature_validator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.feature_validator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.feature_validator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.feature_validator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.validators.feature_validator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.coverage.data_coverage_analyzer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.coverage.data_coverage_analyzer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.coverage.data_coverage_analyzer",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.coverage.data_coverage_analyzer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.data_pipeline.validation.coverage.__init__",
      "target": "data_coverage_analyzer"
    },
    {
      "source": "ai_trader.src.main.backtesting.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.__init__",
      "target": "factories"
    },
    {
      "source": "ai_trader.src.main.backtesting.factories",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.factories",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.factories",
      "target": "engine"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "engine"
    },
    {
      "source": "ai_trader.src.main.backtesting.run_system_backtest",
      "target": "analysis"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.validation_suite",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.validation_suite",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.validation_suite",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.validation_suite",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.validation_suite",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.validation_suite",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.validation_suite",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.validation_suite",
      "target": "engine"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.validation_suite",
      "target": "performance_metrics"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.validation_suite",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.symbol_selector",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.symbol_selector",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.symbol_selector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.symbol_selector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.symbol_selector",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.symbol_selector",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.correlation_matrix",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.performance_metrics",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.performance_metrics",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.performance_metrics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.performance_metrics",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.__init__",
      "target": "performance_metrics"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.__init__",
      "target": "risk_analysis"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.risk_analysis",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.risk_analysis",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.risk_analysis",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.risk_analysis",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.risk_analysis",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.risk_analysis",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.risk_analysis",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.backtesting.analysis.risk_analysis",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.bar_aggregator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.bar_aggregator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.bar_aggregator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.bar_aggregator",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.bar_aggregator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.bar_aggregator",
      "target": "backtest_engine"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.__init__",
      "target": "backtest_engine"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.__init__",
      "target": "cost_model"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.__init__",
      "target": "market_simulator"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "heapq"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "portfolio"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "market_simulator"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "cost_model"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.backtest_engine",
      "target": "bar_aggregator"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.cost_model",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.cost_model",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.cost_model",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.cost_model",
      "target": "math"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.cost_model",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.portfolio",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.portfolio",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.portfolio",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.portfolio",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.portfolio",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.portfolio",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.portfolio",
      "target": "cost_model"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.market_simulator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.market_simulator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.market_simulator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.market_simulator",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.market_simulator",
      "target": "heapq"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.market_simulator",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.market_simulator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.backtesting.engine.market_simulator",
      "target": "cost_model"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "h5py"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.__init__",
      "target": "feature_orchestrator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.__init__",
      "target": "unified_feature_engine"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.__init__",
      "target": "feature_store"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.__init__",
      "target": "feature_adapter"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.__init__",
      "target": "data_preprocessor"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.__init__",
      "target": "dataloader"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.__init__",
      "target": "feature_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.__init__",
      "target": "feature_store_compat"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store_compat",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store_compat",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store_compat",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store_compat",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store_compat",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store_compat",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store_compat",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store_compat",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_store_compat",
      "target": "target_generator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_config",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_config",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_config",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_config",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_config",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.unified_feature_engine",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.unified_feature_engine",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.unified_feature_engine",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.unified_feature_engine",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.unified_feature_engine",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.unified_feature_engine",
      "target": "calculators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_adapter",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_adapter",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_adapter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_adapter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_adapter",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_adapter",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_adapter",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_adapter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_adapter",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculator_factory",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculator_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculator_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculator_factory",
      "target": "calculators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_orchestrator",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_orchestrator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_orchestrator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_orchestrator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_orchestrator",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_orchestrator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_orchestrator",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_orchestrator",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_orchestrator",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.feature_orchestrator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.dataloader",
      "target": "data_preprocessor"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.target_generator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.target_generator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.target_generator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.target_generator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.target_generator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.target_generator",
      "target": "h5py"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.target_generator",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.target_generator",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.data_preprocessor",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.data_preprocessor",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.data_preprocessor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.data_preprocessor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.data_preprocessor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.data_preprocessor",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.data_preprocessor",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.data_preprocessor",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.data_preprocessor",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_adapter",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_adapter",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_adapter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_adapter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_adapter",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_adapter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_adapter",
      "target": "sentiment_features"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "talib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.market_regime",
      "target": "hmmlearn"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.insider_analytics",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_indicators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_indicators",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_indicators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_indicators",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_indicators",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_indicators",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_indicators",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_indicators",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.base_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.base_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.base_calculator",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.base_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.base_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.base_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.base_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "technical_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "technical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "statistical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "cross_asset"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "cross_sectional"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "enhanced_cross_sectional"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "correlation"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "market_regime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "microstructure"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "sentiment_features"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "insider_analytics"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "sector_analytics"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "news"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.__init__",
      "target": "options"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_sectional",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_sectional",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_sectional",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_sectional",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_sectional",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_sectional",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_sectional",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_sectional",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "textblob"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "yfinance"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sentiment_features",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sector_analytics",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sector_analytics",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sector_analytics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sector_analytics",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sector_analytics",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sector_analytics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sector_analytics",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sector_analytics",
      "target": "yfinance"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.sector_analytics",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.microstructure",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.microstructure",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.microstructure",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.microstructure",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.microstructure",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.microstructure",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.microstructure",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.microstructure",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.microstructure",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional",
      "target": "cross_sectional"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.enhanced_cross_sectional",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_adapter",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_adapter",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_adapter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_adapter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_adapter",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_adapter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical_adapter",
      "target": "technical_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_asset",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_asset",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_asset",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_asset",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_asset",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_asset",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_asset",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_asset",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.cross_asset",
      "target": "statsmodels"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.strategy_affinity_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.strategy_affinity_calculator",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.strategy_affinity_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.strategy_affinity_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.strategy_affinity_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.strategy_affinity_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.strategy_affinity_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.strategy_affinity_calculator",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.strategy_affinity_calculator",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.sentiment_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.sentiment_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.sentiment_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.sentiment_calculator",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.sentiment_calculator",
      "target": "base_options"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.sentiment_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.sentiment_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.unusual_activity_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.unusual_activity_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.unusual_activity_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.unusual_activity_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.unusual_activity_calculator",
      "target": "base_options"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.unusual_activity_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.unusual_activity_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.iv_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.iv_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.iv_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.iv_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.iv_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.iv_calculator",
      "target": "base_options"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.iv_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.moneyness_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.moneyness_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.moneyness_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.moneyness_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.moneyness_calculator",
      "target": "base_options"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.moneyness_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.moneyness_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.putcall_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.putcall_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.putcall_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.putcall_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.putcall_calculator",
      "target": "base_options"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.putcall_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.blackscholes_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.blackscholes_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.blackscholes_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.blackscholes_calculator",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.blackscholes_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.blackscholes_calculator",
      "target": "base_options"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.blackscholes_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.blackscholes_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.volume_flow_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.volume_flow_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.volume_flow_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.volume_flow_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.volume_flow_calculator",
      "target": "base_options"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.volume_flow_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_config",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_config",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "options_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "base_options"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "volume_flow_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "putcall_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "iv_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "greeks_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "moneyness_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "unusual_activity_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "sentiment_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "blackscholes_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.__init__",
      "target": "options_analytics_facade"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "options_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.base_options",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "options_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "volume_flow_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "putcall_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "iv_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "greeks_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "moneyness_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "unusual_activity_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "sentiment_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.options_analytics_facade",
      "target": "blackscholes_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.greeks_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.greeks_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.greeks_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.greeks_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.greeks_calculator",
      "target": "base_options"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.options.greeks_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.pca_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.pca_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.pca_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.pca_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.pca_calculator",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.pca_calculator",
      "target": "base_correlation"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.__init__",
      "target": "base_correlation"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.__init__",
      "target": "correlation_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.__init__",
      "target": "rolling_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.__init__",
      "target": "beta_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.__init__",
      "target": "stability_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.__init__",
      "target": "leadlag_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.__init__",
      "target": "pca_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.__init__",
      "target": "regime_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.__init__",
      "target": "enhanced_correlation_facade"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.correlation_config",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.correlation_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.correlation_config",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.rolling_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.rolling_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.rolling_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.rolling_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.rolling_calculator",
      "target": "base_correlation"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.regime_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.regime_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.regime_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.regime_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.regime_calculator",
      "target": "base_correlation"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.leadlag_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.leadlag_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.leadlag_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.leadlag_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.leadlag_calculator",
      "target": "base_correlation"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.stability_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.stability_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.stability_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.stability_calculator",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.stability_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.stability_calculator",
      "target": "base_correlation"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.stability_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.stability_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "base_correlation"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "rolling_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "beta_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "stability_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "leadlag_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "pca_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.enhanced_correlation_facade",
      "target": "regime_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.beta_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.beta_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.beta_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.beta_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.beta_calculator",
      "target": "base_correlation"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation",
      "target": "statistical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation",
      "target": "correlation_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.correlation.base_correlation",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.sentiment_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.sentiment_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.sentiment_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.sentiment_calculator",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.sentiment_calculator",
      "target": "textblob"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.sentiment_calculator",
      "target": "base_news"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.sentiment_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.sentiment_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.topic_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.topic_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.topic_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.topic_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.topic_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.topic_calculator",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.topic_calculator",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.topic_calculator",
      "target": "base_news"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.topic_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "base_news"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "news_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "sentiment_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "volume_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "monetary_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "topic_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "event_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "credibility_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.__init__",
      "target": "news_feature_facade"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "textblob"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "nltk"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "news_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.base_news",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_config",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_config",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.monetary_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.monetary_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.monetary_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.monetary_calculator",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.monetary_calculator",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.monetary_calculator",
      "target": "base_news"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.monetary_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.monetary_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.volume_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.volume_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.volume_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.volume_calculator",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.volume_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.volume_calculator",
      "target": "base_news"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.volume_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.volume_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.credibility_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.credibility_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.credibility_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.credibility_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.credibility_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.credibility_calculator",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.credibility_calculator",
      "target": "base_news"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "base_news"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "sentiment_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "volume_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "monetary_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "topic_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "event_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "credibility_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.news_feature_facade",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.event_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.event_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.event_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.event_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.event_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.event_calculator",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.event_calculator",
      "target": "base_news"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.news.event_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.statistical_config",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.statistical_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.statistical_config",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator",
      "target": "itertools"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator",
      "target": "base_statistical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator",
      "target": "statistical_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.entropy_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.base_statistical",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.base_statistical",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.base_statistical",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.base_statistical",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.base_statistical",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.base_statistical",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.base_statistical",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.base_statistical",
      "target": "statistical_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.base_statistical",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.fractal_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.fractal_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.fractal_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.fractal_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.fractal_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.fractal_calculator",
      "target": "base_statistical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.multivariate_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.multivariate_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.multivariate_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.multivariate_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.multivariate_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.multivariate_calculator",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.multivariate_calculator",
      "target": "base_statistical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.multivariate_calculator",
      "target": "pywt"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.__init__",
      "target": "base_statistical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.__init__",
      "target": "statistical_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.__init__",
      "target": "entropy_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.__init__",
      "target": "moments_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.__init__",
      "target": "fractal_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.__init__",
      "target": "multivariate_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.__init__",
      "target": "nonlinear_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.__init__",
      "target": "timeseries_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.__init__",
      "target": "advanced_statistical_facade"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.moments_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.moments_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.moments_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.moments_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.moments_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.moments_calculator",
      "target": "base_statistical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.nonlinear_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.nonlinear_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.nonlinear_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.nonlinear_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.nonlinear_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.nonlinear_calculator",
      "target": "base_statistical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.timeseries_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.timeseries_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.timeseries_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.timeseries_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.timeseries_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.timeseries_calculator",
      "target": "statsmodels"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.timeseries_calculator",
      "target": "base_statistical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "statistical_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "moments_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "entropy_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "fractal_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "nonlinear_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "timeseries_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "multivariate_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.statistical.advanced_statistical_facade",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.stress_test_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.stress_test_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.stress_test_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.stress_test_calculator",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.stress_test_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.stress_test_calculator",
      "target": "base_risk"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.stress_test_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.stress_test_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.volatility_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.volatility_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.volatility_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.volatility_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.volatility_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.volatility_calculator",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.volatility_calculator",
      "target": "base_risk"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.volatility_calculator",
      "target": "risk_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.volatility_calculator",
      "target": "arch"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "base_risk"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "risk_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "var_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "volatility_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "drawdown_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "performance_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "stress_test_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "tail_risk_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.__init__",
      "target": "risk_metrics_facade"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.tail_risk_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.tail_risk_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.tail_risk_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.tail_risk_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.tail_risk_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.tail_risk_calculator",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.tail_risk_calculator",
      "target": "base_risk"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.tail_risk_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.performance_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.performance_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.performance_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.performance_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.performance_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.performance_calculator",
      "target": "base_risk"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.performance_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.performance_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "base_risk"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "var_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "volatility_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "drawdown_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "performance_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "stress_test_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "tail_risk_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_metrics_facade",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "risk_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.base_risk",
      "target": "statsmodels"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.var_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.var_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.var_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.var_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.var_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.var_calculator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.var_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.var_calculator",
      "target": "base_risk"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.var_calculator",
      "target": "risk_config"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_config",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_config",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.risk_config",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.drawdown_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.drawdown_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.drawdown_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.drawdown_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.drawdown_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.drawdown_calculator",
      "target": "base_risk"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.drawdown_calculator",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.risk.drawdown_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.math_utils",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.math_utils",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.math_utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.math_utils",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.math_utils",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.math_utils",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.__init__",
      "target": "math_utils"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.__init__",
      "target": "validation"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.__init__",
      "target": "feature_utils"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.__init__",
      "target": "time_utils"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.time_utils",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.time_utils",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.time_utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.time_utils",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.time_utils",
      "target": "pytz"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.time_utils",
      "target": "pandas_market_calendars"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.time_utils",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.feature_utils",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.feature_utils",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.feature_utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.feature_utils",
      "target": "itertools"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.feature_utils",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.validation",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.validation",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.validation",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.validation",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.helpers.validation",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.volume_indicators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.volume_indicators",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.volume_indicators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.volume_indicators",
      "target": "talib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.volume_indicators",
      "target": "base_technical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.__init__",
      "target": "base_technical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.__init__",
      "target": "trend_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.__init__",
      "target": "momentum_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.__init__",
      "target": "volatility_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.__init__",
      "target": "volume_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.__init__",
      "target": "adaptive_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.__init__",
      "target": "unified_facade"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.trend_indicators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.trend_indicators",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.trend_indicators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.trend_indicators",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.trend_indicators",
      "target": "base_technical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.trend_indicators",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.trend_indicators",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.base_technical",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.base_technical",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.base_technical",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.base_technical",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.base_technical",
      "target": "talib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.base_technical",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.base_technical",
      "target": "base_calculator"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.volatility_indicators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.volatility_indicators",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.volatility_indicators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.volatility_indicators",
      "target": "talib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.volatility_indicators",
      "target": "base_technical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.adaptive_indicators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.adaptive_indicators",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.adaptive_indicators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.adaptive_indicators",
      "target": "talib"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.adaptive_indicators",
      "target": "base_technical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.momentum_indicators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.momentum_indicators",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.momentum_indicators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.momentum_indicators",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.momentum_indicators",
      "target": "base_technical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.momentum_indicators",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.momentum_indicators",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.unified_facade",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.unified_facade",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.unified_facade",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.unified_facade",
      "target": "base_technical"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.unified_facade",
      "target": "trend_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.unified_facade",
      "target": "momentum_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.unified_facade",
      "target": "volatility_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.unified_facade",
      "target": "volume_indicators"
    },
    {
      "source": "ai_trader.src.main.feature_pipeline.calculators.technical.unified_facade",
      "target": "adaptive_indicators"
    },
    {
      "source": "ai_trader.src.main.app.calculate_features",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.app.calculate_features",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.calculate_features",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.calculate_features",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.calculate_features",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.app.calculate_features",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.app.calculate_features",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.app.calculate_features",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.calculate_features",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.app.run_validation",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.run_validation",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.app.run_validation",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.run_validation",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.run_validation",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.app.run_validation",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.run_validation",
      "target": "argparse"
    },
    {
      "source": "ai_trader.src.main.app.run_validation",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "pyarrow"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "typer"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.app.process_raw_data",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.emergency_shutdown",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.emergency_shutdown",
      "target": "signal"
    },
    {
      "source": "ai_trader.src.main.app.emergency_shutdown",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.app.emergency_shutdown",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.emergency_shutdown",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.emergency_shutdown",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.app.emergency_shutdown",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.historical_backfill",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.historical_backfill",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.historical_backfill",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.historical_backfill",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.run_backtest",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.app.run_backtest",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.run_backtest",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.app.run_backtest",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.run_backtest",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.run_backtest",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.app.run_backtest",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.app.run_backtest",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.commands.scanner_commands",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.commands.scanner_commands",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.app.commands.scanner_commands",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.commands.scanner_commands",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.commands.scanner_commands",
      "target": "click"
    },
    {
      "source": "ai_trader.src.main.app.commands.scanner_commands",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.commands.scanner_commands",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.app.commands.scanner_commands",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.app.commands.__init__",
      "target": "trading_commands"
    },
    {
      "source": "ai_trader.src.main.app.commands.__init__",
      "target": "data_commands"
    },
    {
      "source": "ai_trader.src.main.app.commands.__init__",
      "target": "scanner_commands"
    },
    {
      "source": "ai_trader.src.main.app.commands.__init__",
      "target": "universe_commands"
    },
    {
      "source": "ai_trader.src.main.app.commands.__init__",
      "target": "utility_commands"
    },
    {
      "source": "ai_trader.src.main.app.commands.data_commands",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.commands.data_commands",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.app.commands.data_commands",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.commands.data_commands",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.commands.data_commands",
      "target": "click"
    },
    {
      "source": "ai_trader.src.main.app.commands.data_commands",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.commands.trading_commands",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.commands.trading_commands",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.app.commands.trading_commands",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.commands.trading_commands",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.commands.trading_commands",
      "target": "click"
    },
    {
      "source": "ai_trader.src.main.app.commands.trading_commands",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.commands.trading_commands",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.app.commands.trading_commands",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.app.commands.utility_commands",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.commands.utility_commands",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.app.commands.utility_commands",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.commands.utility_commands",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.commands.utility_commands",
      "target": "click"
    },
    {
      "source": "ai_trader.src.main.app.commands.utility_commands",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.app.commands.utility_commands",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.commands.utility_commands",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.app.commands.utility_commands",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.app.commands.universe_commands",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.app.commands.universe_commands",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.app.commands.universe_commands",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.app.commands.universe_commands",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.app.commands.universe_commands",
      "target": "click"
    },
    {
      "source": "ai_trader.src.main.app.commands.universe_commands",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.app.commands.universe_commands",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.app.commands.universe_commands",
      "target": "csv"
    },
    {
      "source": "ai_trader.src.main.config.field_mappings",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.config.field_mappings",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.config.field_mappings",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.config.field_mappings",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "validation_models"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "validation_utils"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "env_loader"
    },
    {
      "source": "ai_trader.src.main.config.config_manager",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.config.__init__",
      "target": "config_manager"
    },
    {
      "source": "ai_trader.src.main.config.__init__",
      "target": "validation_models"
    },
    {
      "source": "ai_trader.src.main.config.__init__",
      "target": "field_mappings"
    },
    {
      "source": "ai_trader.src.main.config.__init__",
      "target": "env_loader"
    },
    {
      "source": "ai_trader.src.main.config.__init__",
      "target": "validation_utils"
    },
    {
      "source": "ai_trader.src.main.config.validation_utils",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.config.validation_utils",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.config.validation_utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.config.validation_utils",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.config.validation_utils",
      "target": "pydantic"
    },
    {
      "source": "ai_trader.src.main.config.validation_utils",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.config.validation_utils",
      "target": "validation_models"
    },
    {
      "source": "ai_trader.src.main.config.validation_utils",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.config.validation_utils",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.config.env_loader",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.config.env_loader",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.config.env_loader",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.config.env_loader",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.config.env_loader",
      "target": "dotenv"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.services",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.services",
      "target": "pydantic"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.services",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.__init__",
      "target": "core"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.__init__",
      "target": "trading"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.__init__",
      "target": "data"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.__init__",
      "target": "services"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.trading",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.trading",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.trading",
      "target": "pydantic"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.trading",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.trading",
      "target": "core"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.trading",
      "target": "pytz"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.core",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.core",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.core",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.core",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.core",
      "target": "pydantic"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.core",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.main",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.main",
      "target": "pydantic"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.main",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.main",
      "target": "core"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.main",
      "target": "trading"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.main",
      "target": "data"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.main",
      "target": "services"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.main",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.main",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.data",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.data",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.data",
      "target": "pydantic"
    },
    {
      "source": "ai_trader.src.main.config.validation_models.data",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.__init__",
      "target": "core"
    },
    {
      "source": "ai_trader.src.main.trading_engine.__init__",
      "target": "signals"
    },
    {
      "source": "ai_trader.src.main.trading_engine.__init__",
      "target": "algorithms"
    },
    {
      "source": "ai_trader.src.main.trading_engine.__init__",
      "target": "brokers"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.backtest_broker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.backtest_broker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.backtest_broker",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.backtest_broker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.backtest_broker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.backtest_broker",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.backtest_broker",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.backtest_broker",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.backtest_broker",
      "target": "broker_interface"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.backtest_broker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.paper_broker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.paper_broker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.paper_broker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.paper_broker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.paper_broker",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.paper_broker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.paper_broker",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.ib_broker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.ib_broker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.ib_broker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.ib_broker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.ib_broker",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.ib_broker",
      "target": "broker_interface"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.ib_broker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.ib_broker",
      "target": "ib_insync"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.__init__",
      "target": "broker_factory"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.broker_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.broker_factory",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.broker_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.broker_interface",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.broker_interface",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.broker_interface",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.broker_interface",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.broker_interface",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.broker_interface",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.mock_broker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.mock_broker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.mock_broker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.mock_broker",
      "target": "unittest"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.mock_broker",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.mock_broker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.mock_broker",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.alpaca_broker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.alpaca_broker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.alpaca_broker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.alpaca_broker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.alpaca_broker",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.alpaca_broker",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.alpaca_broker",
      "target": "httpx"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.alpaca_broker",
      "target": "alpaca"
    },
    {
      "source": "ai_trader.src.main.trading_engine.brokers.alpaca_broker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fast_execution_path",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fast_execution_path",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fast_execution_path",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fast_execution_path",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fast_execution_path",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fast_execution_path",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fast_execution_path",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.trading_system",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.trading_system",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.trading_system",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.trading_system",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.trading_system",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.trading_system",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.trading_system",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.tca",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.tca",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.tca",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.tca",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.tca",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.tca",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.tca",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.tca",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.tca",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.risk_integrated_order_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.risk_integrated_order_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.risk_integrated_order_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.risk_integrated_order_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.risk_integrated_order_manager",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.risk_integrated_order_manager",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.risk_integrated_order_manager",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.risk_integrated_order_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.execution_engine",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.execution_engine",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.execution_engine",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.execution_engine",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.execution_engine",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.execution_engine",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.execution_engine",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "execution_engine"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "order_manager"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "portfolio_manager"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "risk"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "position_manager"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "position_tracker"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "fill_processor"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "position_validator"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "position_risk_validator"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "broker_reconciler"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.__init__",
      "target": "position_events"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.portfolio_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.portfolio_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.portfolio_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.portfolio_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.portfolio_manager",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.portfolio_manager",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.portfolio_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_validator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_validator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_validator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_validator",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_validator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_validator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.broker_reconciler",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.broker_reconciler",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.broker_reconciler",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.broker_reconciler",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.broker_reconciler",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.broker_reconciler",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.broker_reconciler",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.broker_reconciler",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_manager",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_manager",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_risk_validator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_risk_validator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_risk_validator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_risk_validator",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_risk_validator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_risk_validator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_risk_validator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_risk_validator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.order_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.order_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.order_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.order_manager",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.order_manager",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.order_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.order_manager",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.order_manager",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.order_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fill_processor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fill_processor",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fill_processor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fill_processor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.fill_processor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_tracker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_tracker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_tracker",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_tracker",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_tracker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_tracker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_tracker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_events",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_events",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_events",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_events",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_events",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_events",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.core.position_events",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.signals.__init__",
      "target": "unified_signal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.signals.unified_signal",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.signals.unified_signal",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.signals.unified_signal",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.signals.unified_signal",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.signals.unified_signal",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.signals.unified_signal",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.trading_engine.signals.unified_signal",
      "target": "heapq"
    },
    {
      "source": "ai_trader.src.main.trading_engine.signals.unified_signal",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.trading_engine.signals.unified_signal",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.vwap",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.vwap",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.vwap",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.vwap",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.vwap",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.vwap",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.vwap",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.vwap",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.vwap",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.vwap",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.twap",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.twap",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.twap",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.twap",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.twap",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.twap",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.twap",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.twap",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.twap",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.twap",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.__init__",
      "target": "base_algorithm"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.__init__",
      "target": "twap"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.__init__",
      "target": "vwap"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.__init__",
      "target": "iceberg"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.iceberg",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.iceberg",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.iceberg",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.iceberg",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.iceberg",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.iceberg",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.iceberg",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.trading_engine.algorithms.base_algorithm",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.trading_engine.risk.__init__",
      "target": "risk_manager"
    },
    {
      "source": "ai_trader.src.main.trading_engine.risk.risk_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.trading_engine.risk.risk_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.trading_engine.risk.risk_manager",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.trading_engine.risk.risk_manager",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.trading_engine.risk.risk_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.trading_engine.risk.risk_manager",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.trading_engine.risk.risk_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.trading_engine.risk.risk_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.features.__init__",
      "target": "precompute_engine"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.features.precompute_engine",
      "target": "sqlalchemy"
    },
    {
      "source": "ai_trader.src.main.utils.app_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.app_factory",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.app_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.layer_utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.layer_utils",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.layer_utils",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.utils.layer_utils",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.math_utils",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.math_utils",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.math_utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.math_utils",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.timeout_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.timeout_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.timeout_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.layer_metrics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.layer_metrics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.layer_metrics",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring",
      "target": "monitoring"
    },
    {
      "source": "ai_trader.src.main.utils.database",
      "target": "database"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "core"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "auth"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "data"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "events"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "monitoring"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "networking"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "resilience"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "state"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "trading"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "cache"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "database"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "processing"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "api"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "market_data"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "app"
    },
    {
      "source": "ai_trader.src.main.utils.__init__",
      "target": "app_factory"
    },
    {
      "source": "ai_trader.src.main.utils.core",
      "target": "core"
    },
    {
      "source": "ai_trader.src.main.utils.exceptions",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.exceptions",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.alerting.alerting_service",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.alerting.alerting_service",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.alerting.alerting_service",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.alerting.alerting_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.alerting.alerting_service",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.alerting.alerting_service",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.alerting.alerting_service",
      "target": "aiohttp"
    },
    {
      "source": "ai_trader.src.main.utils.alerting.alerting_service",
      "target": "smtplib"
    },
    {
      "source": "ai_trader.src.main.utils.alerting.alerting_service",
      "target": "email"
    },
    {
      "source": "ai_trader.src.main.utils.alerting.__init__",
      "target": "alerting_service"
    },
    {
      "source": "ai_trader.src.main.utils.database.__init__",
      "target": "pool"
    },
    {
      "source": "ai_trader.src.main.utils.database.__init__",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.utils.database.__init__",
      "target": "operations"
    },
    {
      "source": "ai_trader.src.main.utils.database.operations",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.database.operations",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.database.operations",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.database.operations",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.database.operations",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.database.operations",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.database.operations",
      "target": "sqlalchemy"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "sqlalchemy"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "helpers"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.database.pool",
      "target": "asyncpg"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.query_tracker",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.connection_metrics",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.connection_metrics",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.connection_metrics",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.connection_metrics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.connection_metrics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.connection_metrics",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.__init__",
      "target": "connection_metrics"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.__init__",
      "target": "health_monitor"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.__init__",
      "target": "query_tracker"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.health_monitor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.health_monitor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.database.helpers.health_monitor",
      "target": "connection_metrics"
    },
    {
      "source": "ai_trader.src.main.utils.core.async_helpers",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.core.async_helpers",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.utils.core.async_helpers",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.core.async_helpers",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.core.async_helpers",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.utils.core.async_helpers",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.core.json_helpers",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.core.json_helpers",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.core.json_helpers",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.utils.core.json_helpers",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.core.json_helpers",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.core.json_helpers",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.core.json_helpers",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.utils.core.logging",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.core.logging",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.utils.core.logging",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.core.logging",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.core.logging",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.core.logging",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.core.logging",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.core.logging",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.utils.core.text_helpers",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.core.text_helpers",
      "target": "string"
    },
    {
      "source": "ai_trader.src.main.utils.core.text_helpers",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.core.text_helpers",
      "target": "difflib"
    },
    {
      "source": "ai_trader.src.main.utils.core.text_helpers",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "async_helpers"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "exception_types"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "time_helpers"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "file_helpers"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "secure_random"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "secure_serializer"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "error_handling"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "text_helpers"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "json_helpers"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.core.__init__",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.core.time_helpers",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.core.time_helpers",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.core.time_helpers",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.core.time_helpers",
      "target": "pandas_market_calendars"
    },
    {
      "source": "ai_trader.src.main.utils.core.time_helpers",
      "target": "zoneinfo"
    },
    {
      "source": "ai_trader.src.main.utils.core.time_helpers",
      "target": "pytz"
    },
    {
      "source": "ai_trader.src.main.utils.core.error_handling",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.core.error_handling",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.core.error_handling",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.core.error_handling",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.core.error_handling",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_serializer",
      "target": "pickle"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_serializer",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_serializer",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_serializer",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_serializer",
      "target": "io"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_serializer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_serializer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_serializer",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.utils.core.file_helpers",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.utils.core.file_helpers",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.core.file_helpers",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.utils.core.file_helpers",
      "target": "shutil"
    },
    {
      "source": "ai_trader.src.main.utils.core.file_helpers",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.core.file_helpers",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.core.file_helpers",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.core.file_helpers",
      "target": "aiofiles"
    },
    {
      "source": "ai_trader.src.main.utils.core.file_helpers",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.core.file_helpers",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_random",
      "target": "secrets"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_random",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_random",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.core.secure_random",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.app.__init__",
      "target": "context"
    },
    {
      "source": "ai_trader.src.main.utils.app.__init__",
      "target": "cli"
    },
    {
      "source": "ai_trader.src.main.utils.app.__init__",
      "target": "validation"
    },
    {
      "source": "ai_trader.src.main.utils.app.context",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.app.context",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.app.context",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.app.context",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.app.context",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.app.context",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "signal"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "typer"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "rich"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.app.cli",
      "target": "context"
    },
    {
      "source": "ai_trader.src.main.utils.app.validation",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.utils.app.validation",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.app.validation",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.app.validation",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.app.validation",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.app.validation",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.app.validation",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.cache.metrics",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.cache.metrics",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.cache.metrics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.cache.metrics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.cache.metrics",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.cache.metrics",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.utils.cache.background_tasks",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.cache.background_tasks",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.cache.background_tasks",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.cache.background_tasks",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.cache.background_tasks",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.cache.background_tasks",
      "target": "backends"
    },
    {
      "source": "ai_trader.src.main.utils.cache.background_tasks",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.utils.cache.models",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.cache.models",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.cache.models",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.cache.models",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.cache.compression",
      "target": "gzip"
    },
    {
      "source": "ai_trader.src.main.utils.cache.compression",
      "target": "zlib"
    },
    {
      "source": "ai_trader.src.main.utils.cache.compression",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.cache.compression",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.cache.compression",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.cache.compression",
      "target": "lz4"
    },
    {
      "source": "ai_trader.src.main.utils.cache.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.cache.__init__",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.utils.cache.__init__",
      "target": "backends"
    },
    {
      "source": "ai_trader.src.main.utils.cache.__init__",
      "target": "keys"
    },
    {
      "source": "ai_trader.src.main.utils.cache.__init__",
      "target": "metrics"
    },
    {
      "source": "ai_trader.src.main.utils.cache.__init__",
      "target": "compression"
    },
    {
      "source": "ai_trader.src.main.utils.cache.__init__",
      "target": "background_tasks"
    },
    {
      "source": "ai_trader.src.main.utils.cache.__init__",
      "target": "simple_cache"
    },
    {
      "source": "ai_trader.src.main.utils.cache.keys",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.utils.cache.keys",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.cache.keys",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.cache.keys",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.cache.keys",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.cache.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "redis"
    },
    {
      "source": "ai_trader.src.main.utils.cache.backends",
      "target": "fnmatch"
    },
    {
      "source": "ai_trader.src.main.utils.cache.simple_cache",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.cache.simple_cache",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.cache.simple_cache",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.cache.simple_cache",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.cache.simple_cache",
      "target": "backends"
    },
    {
      "source": "ai_trader.src.main.utils.cache.simple_cache",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.utils.cache.simple_cache",
      "target": "keys"
    },
    {
      "source": "ai_trader.src.main.utils.config.wrapper",
      "target": "copy"
    },
    {
      "source": "ai_trader.src.main.utils.config.wrapper",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.config.wrapper",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.config.wrapper",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.config.wrapper",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.config.wrapper",
      "target": "schema"
    },
    {
      "source": "ai_trader.src.main.utils.config.wrapper",
      "target": "sources"
    },
    {
      "source": "ai_trader.src.main.utils.config.wrapper",
      "target": "loaders"
    },
    {
      "source": "ai_trader.src.main.utils.config.wrapper",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.utils.config.persistence",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.utils.config.persistence",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.config.persistence",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.utils.config.persistence",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.config.persistence",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.config.persistence",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.config.persistence",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.config.persistence",
      "target": "sources"
    },
    {
      "source": "ai_trader.src.main.utils.config.persistence",
      "target": "loaders"
    },
    {
      "source": "ai_trader.src.main.utils.config.global_config",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.config.global_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.config.global_config",
      "target": "wrapper"
    },
    {
      "source": "ai_trader.src.main.utils.config.global_config",
      "target": "schema"
    },
    {
      "source": "ai_trader.src.main.utils.config.global_config",
      "target": "sources"
    },
    {
      "source": "ai_trader.src.main.utils.config.loaders",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.utils.config.loaders",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.config.loaders",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.utils.config.loaders",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.config.loaders",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.config.loaders",
      "target": "sources"
    },
    {
      "source": "ai_trader.src.main.utils.config.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.config.__init__",
      "target": "optimizer"
    },
    {
      "source": "ai_trader.src.main.utils.config.__init__",
      "target": "templates"
    },
    {
      "source": "ai_trader.src.main.utils.config.__init__",
      "target": "schema"
    },
    {
      "source": "ai_trader.src.main.utils.config.__init__",
      "target": "sources"
    },
    {
      "source": "ai_trader.src.main.utils.config.__init__",
      "target": "loaders"
    },
    {
      "source": "ai_trader.src.main.utils.config.__init__",
      "target": "wrapper"
    },
    {
      "source": "ai_trader.src.main.utils.config.__init__",
      "target": "persistence"
    },
    {
      "source": "ai_trader.src.main.utils.config.__init__",
      "target": "global_config"
    },
    {
      "source": "ai_trader.src.main.utils.config.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.config.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.config.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.config.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.config.templates",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.config.templates",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.config.sources",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.config.sources",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.config.sources",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.config.sources",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.config.sources",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.config.optimizer",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.config.optimizer",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.config.optimizer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.config.optimizer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.config.optimizer",
      "target": "copy"
    },
    {
      "source": "ai_trader.src.main.utils.config.optimizer",
      "target": "statistics"
    },
    {
      "source": "ai_trader.src.main.utils.config.optimizer",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.config.optimizer",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.config.schema",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.config.schema",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.security.__init__",
      "target": "sql_security"
    },
    {
      "source": "ai_trader.src.main.utils.security.sql_security",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.security.sql_security",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.security.sql_security",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validator",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validator",
      "target": "validators"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validator",
      "target": "security_checks"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validators",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validators",
      "target": "base64"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validators",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validators",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validators",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.auth.validators",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.auth.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.auth.__init__",
      "target": "validator"
    },
    {
      "source": "ai_trader.src.main.utils.auth.__init__",
      "target": "generators"
    },
    {
      "source": "ai_trader.src.main.utils.auth.__init__",
      "target": "validators"
    },
    {
      "source": "ai_trader.src.main.utils.auth.__init__",
      "target": "security_checks"
    },
    {
      "source": "ai_trader.src.main.utils.auth.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.auth.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.auth.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.auth.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.auth.generators",
      "target": "secrets"
    },
    {
      "source": "ai_trader.src.main.utils.auth.generators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.auth.generators",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.auth.security_checks",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.auth.security_checks",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.processing.__init__",
      "target": "streaming"
    },
    {
      "source": "ai_trader.src.main.utils.processing.__init__",
      "target": "historical"
    },
    {
      "source": "ai_trader.src.main.utils.processing.historical",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.processing.historical",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.processing.historical",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.utils.processing.historical",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "gc"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "psutil"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.processing.streaming",
      "target": "pyarrow"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.cache",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.cache",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.cache",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.cache",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.cache",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.cache",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.__init__",
      "target": "cache"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.__init__",
      "target": "universe_loader"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.universe_loader",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.universe_loader",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.universe_loader",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.universe_loader",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.market_data.universe_loader",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.networking.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.networking.__init__",
      "target": "buffering"
    },
    {
      "source": "ai_trader.src.main.utils.networking.__init__",
      "target": "connection"
    },
    {
      "source": "ai_trader.src.main.utils.networking.__init__",
      "target": "optimizer"
    },
    {
      "source": "ai_trader.src.main.utils.networking.__init__",
      "target": "failover"
    },
    {
      "source": "ai_trader.src.main.utils.networking.__init__",
      "target": "api"
    },
    {
      "source": "ai_trader.src.main.utils.networking.failover",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.networking.failover",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.networking.failover",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.networking.failover",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.networking.failover",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.networking.failover",
      "target": "optimizer"
    },
    {
      "source": "ai_trader.src.main.utils.networking.failover",
      "target": "connection"
    },
    {
      "source": "ai_trader.src.main.utils.networking.failover",
      "target": "buffering"
    },
    {
      "source": "ai_trader.src.main.utils.networking.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.networking.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.networking.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.networking.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.networking.types",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.networking.types",
      "target": "statistics"
    },
    {
      "source": "ai_trader.src.main.utils.networking.connection",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.networking.connection",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.networking.connection",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.networking.connection",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.networking.connection",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.networking.connection",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.networking.connection",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.networking.connection",
      "target": "websockets"
    },
    {
      "source": "ai_trader.src.main.utils.networking.connection",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.networking.connection",
      "target": "buffering"
    },
    {
      "source": "ai_trader.src.main.utils.networking.optimizer",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.networking.optimizer",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.networking.optimizer",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.networking.optimizer",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.networking.optimizer",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.networking.optimizer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.networking.optimizer",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.networking.optimizer",
      "target": "connection"
    },
    {
      "source": "ai_trader.src.main.utils.networking.optimizer",
      "target": "buffering"
    },
    {
      "source": "ai_trader.src.main.utils.networking.optimizer",
      "target": "failover"
    },
    {
      "source": "ai_trader.src.main.utils.networking.buffering",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.networking.buffering",
      "target": "heapq"
    },
    {
      "source": "ai_trader.src.main.utils.networking.buffering",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.networking.buffering",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.networking.buffering",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.networking.buffering",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.networking.buffering",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.networking.buffering",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.networking.buffering",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.state.persistence",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.state.persistence",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.state.persistence",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.state.persistence",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.utils.state.persistence",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.state.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.state.__init__",
      "target": "backends"
    },
    {
      "source": "ai_trader.src.main.utils.state.__init__",
      "target": "manager"
    },
    {
      "source": "ai_trader.src.main.utils.state.__init__",
      "target": "persistence"
    },
    {
      "source": "ai_trader.src.main.utils.state.__init__",
      "target": "context"
    },
    {
      "source": "ai_trader.src.main.utils.state.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.state.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.state.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.state.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.state.types",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "redis"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.state.backends",
      "target": "fnmatch"
    },
    {
      "source": "ai_trader.src.main.utils.state.context",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.state.context",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.state.context",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.state.manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.state.manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.state.manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.state.manager",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.state.manager",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.state.manager",
      "target": "backends"
    },
    {
      "source": "ai_trader.src.main.utils.state.manager",
      "target": "persistence"
    },
    {
      "source": "ai_trader.src.main.utils.state.manager",
      "target": "context"
    },
    {
      "source": "ai_trader.src.main.utils.state.manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.time.interval_utils",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.time.interval_utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.time.interval_utils",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.strategies",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.strategies",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.strategies",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.strategies",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.strategies",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.strategies",
      "target": "circuit_breaker"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.strategies",
      "target": "error_recovery"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.strategies",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.strategies",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.__init__",
      "target": "circuit_breaker"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.__init__",
      "target": "error_recovery"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.__init__",
      "target": "strategies"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.error_recovery",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.error_recovery",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.error_recovery",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.error_recovery",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.error_recovery",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.error_recovery",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.error_recovery",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.error_recovery",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.error_recovery",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.circuit_breaker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.circuit_breaker",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.circuit_breaker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.circuit_breaker",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.circuit_breaker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.circuit_breaker",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.resilience.circuit_breaker",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.utils.review.pattern_check",
      "target": "ast"
    },
    {
      "source": "ai_trader.src.main.utils.review.pattern_check",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.review.pattern_check",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.utils.review.pattern_check",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.review.pattern_check",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.review.pattern_check",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.review.pattern_check",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.review.pattern_check",
      "target": "argparse"
    },
    {
      "source": "ai_trader.src.main.utils.review.pattern_check",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.review.syntax_check",
      "target": "ast"
    },
    {
      "source": "ai_trader.src.main.utils.review.syntax_check",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.utils.review.syntax_check",
      "target": "importlib"
    },
    {
      "source": "ai_trader.src.main.utils.review.syntax_check",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.review.syntax_check",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.review.syntax_check",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.review.syntax_check",
      "target": "argparse"
    },
    {
      "source": "ai_trader.src.main.utils.review.syntax_check",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.factories.services",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.factories.services",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.factories.services",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.factories.services",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.utils.factories.di_container",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.factories.di_container",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.factories.di_container",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.factories.di_container",
      "target": "inspect"
    },
    {
      "source": "ai_trader.src.main.utils.factories.di_container",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.factories.di_container",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.factories.__init__",
      "target": "services"
    },
    {
      "source": "ai_trader.src.main.utils.factories.__init__",
      "target": "utility_manager"
    },
    {
      "source": "ai_trader.src.main.utils.factories.utility_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.factories.utility_manager",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.factories.utility_manager",
      "target": "weakref"
    },
    {
      "source": "ai_trader.src.main.utils.factories.utility_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.factories.utility_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.factories.utility_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.query_builder",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.query_builder",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.query_builder",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.query_builder",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.query_builder",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.query_builder",
      "target": "sqlalchemy"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.cache_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.cache_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.cache_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.cache_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.cache_manager",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.cache_manager",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.cache_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.cache_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.__init__",
      "target": "data_access"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.__init__",
      "target": "query_builder"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.__init__",
      "target": "cache_manager"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.__init__",
      "target": "metrics_collector"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.data_access",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.data_access",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.data_access",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.data_access",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.data_access",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.data_access",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.data_access",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.metrics_collector",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.metrics_collector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.metrics_collector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.metrics_collector",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.metrics_collector",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.metrics_collector",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.scanners.metrics_collector",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.api.base_client",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.api.base_client",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.api.base_client",
      "target": "aiohttp"
    },
    {
      "source": "ai_trader.src.main.utils.api.base_client",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.api.base_client",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.api.base_client",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.api.base_client",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.api.base_client",
      "target": "backoff"
    },
    {
      "source": "ai_trader.src.main.utils.api.base_client",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.utils.api.base_client",
      "target": "rate_monitor"
    },
    {
      "source": "ai_trader.src.main.utils.api.__init__",
      "target": "session_helpers"
    },
    {
      "source": "ai_trader.src.main.utils.api.session_helpers",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.api.session_helpers",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.api.session_helpers",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.api.session_helpers",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.api.session_helpers",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.utils.api.session_helpers",
      "target": "aiohttp"
    },
    {
      "source": "ai_trader.src.main.utils.api.session_helpers",
      "target": "httpx"
    },
    {
      "source": "ai_trader.src.main.utils.api.rate_monitor",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.api.rate_monitor",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.api.rate_monitor",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.api.rate_monitor",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.api.rate_monitor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.api.rate_monitor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.api.rate_monitor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.dashboard_adapters",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.dashboard_adapters",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.dashboard_adapters",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.dashboard_adapters",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.dashboard_adapters",
      "target": "global_monitor"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.dashboard_adapters",
      "target": "migration"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.dashboard_adapters",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.dashboard_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.dashboard_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.collectors",
      "target": "psutil"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.collectors",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.collectors",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.collectors",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.collectors",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "collectors"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "function_tracker"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "csv"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.monitor",
      "target": "io"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.function_tracker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.function_tracker",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.function_tracker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.function_tracker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.function_tracker",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.function_tracker",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.function_tracker",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.function_tracker",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "gc"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "psutil"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.memory",
      "target": "weakref"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.rate_monitor_dashboard",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.rate_monitor_dashboard",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.rate_monitor_dashboard",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.rate_monitor_dashboard",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.rate_monitor_dashboard",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "metrics"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "collectors"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "function_tracker"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "monitor"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "global_monitor"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "memory"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "dashboard_factory"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "metrics_utils"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.__init__",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.types",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.global_monitor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.global_monitor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.global_monitor",
      "target": "monitor"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.global_monitor",
      "target": "migration"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.global_monitor",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.global_monitor",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.global_monitor",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.global_monitor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_adapter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_adapter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_adapter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_adapter",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_adapter",
      "target": "global_monitor"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.examples",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.examples",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.examples",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.enhanced",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.enhanced",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.enhanced",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.enhanced",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.enhanced",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.enhanced",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.enhanced",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.enhanced",
      "target": "statistics"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.enhanced",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.enhanced",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.migration",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.migration",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.migration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.migration",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.migration",
      "target": "monitor"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.migration",
      "target": "enhanced"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.migration",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.__init__",
      "target": "email_channel"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.__init__",
      "target": "slack_channel"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.__init__",
      "target": "sms_channel"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.sms_channel",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.sms_channel",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.sms_channel",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.sms_channel",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.sms_channel",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.sms_channel",
      "target": "aiohttp"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.sms_channel",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.sms_channel",
      "target": "twilio"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.sms_channel",
      "target": "boto3"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.slack_channel",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.slack_channel",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.slack_channel",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.slack_channel",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.slack_channel",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.slack_channel",
      "target": "aiohttp"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.slack_channel",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "smtplib"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "ssl"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "email"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "jinja2"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.alerts.email_channel",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.exporter",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.exporter",
      "target": "csv"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.exporter",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.exporter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.exporter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.exporter",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.exporter",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.exporter",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.exporter",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.__init__",
      "target": "buffer"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.__init__",
      "target": "exporter"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.buffer",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.buffer",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.buffer",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.buffer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.buffer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.buffer",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.monitoring.metrics_utils.buffer",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.events.mixin",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.events.mixin",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.events.mixin",
      "target": "manager"
    },
    {
      "source": "ai_trader.src.main.utils.events.mixin",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.events.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.events.__init__",
      "target": "manager"
    },
    {
      "source": "ai_trader.src.main.utils.events.__init__",
      "target": "mixin"
    },
    {
      "source": "ai_trader.src.main.utils.events.__init__",
      "target": "decorators"
    },
    {
      "source": "ai_trader.src.main.utils.events.__init__",
      "target": "global_manager"
    },
    {
      "source": "ai_trader.src.main.utils.events.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.events.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.events.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.events.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.events.types",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.events.types",
      "target": "weakref"
    },
    {
      "source": "ai_trader.src.main.utils.events.global_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.events.global_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.events.global_manager",
      "target": "manager"
    },
    {
      "source": "ai_trader.src.main.utils.events.global_manager",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.events.manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.events.manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.events.manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.events.manager",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.events.manager",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.events.decorators",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.events.decorators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.events.decorators",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.events.decorators",
      "target": "manager"
    },
    {
      "source": "ai_trader.src.main.utils.events.decorators",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.data.analysis",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.data.analysis",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.data.analysis",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.data.analysis",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.data.validators",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.data.validators",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.data.validators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.data.validators",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.data.validators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.data.validators",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.data.validators",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "utils"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "validators"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "processor"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "analysis"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "gc"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "functools"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.data.__init__",
      "target": "psutil"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "base64"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "io"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.data.processor",
      "target": "validators"
    },
    {
      "source": "ai_trader.src.main.utils.data.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.data.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.data.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.data.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.data.utils",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.utils.data.utils",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.data.utils",
      "target": "pickle"
    },
    {
      "source": "ai_trader.src.main.utils.data.utils",
      "target": "base64"
    },
    {
      "source": "ai_trader.src.main.utils.data.utils",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.data.utils",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.data.utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.data.utils",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.data.utils",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.utils.trading.analysis",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.trading.analysis",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.trading.analysis",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.trading.analysis",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.trading.analysis",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.trading.io",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.trading.io",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.trading.io",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.trading.io",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.trading.io",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.trading.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.trading.__init__",
      "target": "filters"
    },
    {
      "source": "ai_trader.src.main.utils.trading.__init__",
      "target": "manager"
    },
    {
      "source": "ai_trader.src.main.utils.trading.__init__",
      "target": "analysis"
    },
    {
      "source": "ai_trader.src.main.utils.trading.__init__",
      "target": "io"
    },
    {
      "source": "ai_trader.src.main.utils.trading.__init__",
      "target": "global_manager"
    },
    {
      "source": "ai_trader.src.main.utils.trading.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.trading.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.trading.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.trading.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.trading.types",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.trading.global_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.trading.global_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.trading.global_manager",
      "target": "manager"
    },
    {
      "source": "ai_trader.src.main.utils.trading.manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.trading.manager",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.utils.trading.manager",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.trading.manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.trading.manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.trading.manager",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.trading.manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.trading.manager",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.trading.manager",
      "target": "filters"
    },
    {
      "source": "ai_trader.src.main.utils.trading.filters",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.trading.filters",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.utils.logging.trade_logger",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.logging.trade_logger",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.logging.trade_logger",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.logging.trade_logger",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.logging.trade_logger",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.utils.logging.trade_logger",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.logging.trade_logger",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.logging.trade_logger",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.logging.trade_logger",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.logging.trade_logger",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.utils.logging.__init__",
      "target": "trade_logger"
    },
    {
      "source": "ai_trader.src.main.utils.logging.__init__",
      "target": "performance_logger"
    },
    {
      "source": "ai_trader.src.main.utils.logging.__init__",
      "target": "error_logger"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "traceback"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.logging.error_logger",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.utils.logging.performance_logger",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.live_risk_monitor",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.live_risk_monitor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.live_risk_monitor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.live_risk_monitor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.live_risk_monitor",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.live_risk_monitor",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.live_risk_monitor",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.risk_management.live_risk_monitor",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.risk_management.live_risk_monitor",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.live_risk_monitor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.__init__",
      "target": "pre_trade"
    },
    {
      "source": "ai_trader.src.main.risk_management.__init__",
      "target": "real_time"
    },
    {
      "source": "ai_trader.src.main.risk_management.__init__",
      "target": "position_sizing"
    },
    {
      "source": "ai_trader.src.main.risk_management.__init__",
      "target": "metrics"
    },
    {
      "source": "ai_trader.src.main.risk_management.__init__",
      "target": "integration"
    },
    {
      "source": "ai_trader.src.main.risk_management.__init__",
      "target": "post_trade"
    },
    {
      "source": "ai_trader.src.main.risk_management.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.types",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.risk_management.var_position_sizing",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.var_position_sizing",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.var_position_sizing",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.var_position_sizing",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.var_position_sizing",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.risk_management.var_position_sizing",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.var_position_sizing",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.var_position_sizing",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.var_position_sizing",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.regime_detector",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.regime_detector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.regime_detector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.regime_detector",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.regime_detector",
      "target": "statistics"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.regime_detector",
      "target": "anomaly_types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.regime_detector",
      "target": "anomaly_models"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.live_risk_monitor",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.live_risk_monitor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.live_risk_monitor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.live_risk_monitor",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.live_risk_monitor",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.live_risk_monitor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.live_risk_monitor",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.live_risk_monitor",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.live_risk_monitor",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.live_risk_monitor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.stop_loss",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.stop_loss",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.stop_loss",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.stop_loss",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.stop_loss",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.stop_loss",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.stop_loss",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.stop_loss",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "anomaly_types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "anomaly_models"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "statistical_detector"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "correlation_detector"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_detector",
      "target": "regime_detector"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.position_liquidator",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.position_liquidator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.position_liquidator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.position_liquidator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.position_liquidator",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.position_liquidator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.position_liquidator",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.position_liquidator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.position_liquidator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "anomaly_detector"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "anomaly_types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "anomaly_models"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "statistical_detector"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "correlation_detector"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "regime_detector"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "live_risk_monitor"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "drawdown_control"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "stop_loss"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "position_liquidator"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.__init__",
      "target": "circuit_breaker"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.correlation_detector",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.correlation_detector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.correlation_detector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.correlation_detector",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.correlation_detector",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.correlation_detector",
      "target": "anomaly_types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.correlation_detector",
      "target": "anomaly_models"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "anomaly_types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "anomaly_models"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.statistical_detector",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.drawdown_control",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.drawdown_control",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.drawdown_control",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.drawdown_control",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.drawdown_control",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.drawdown_control",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.drawdown_control",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.drawdown_control",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_models",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_models",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_models",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_models",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_models",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_models",
      "target": "anomaly_types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.anomaly_types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade",
      "target": "events"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.facade",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.config",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.config",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.config",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.registry",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.registry",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.registry",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.registry",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.registry",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.registry",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.registry",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.events",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.events",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.events",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.events",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.events",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.__init__",
      "target": "facade"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.__init__",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.__init__",
      "target": "events"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.__init__",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.__init__",
      "target": "breakers"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.types",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.__init__",
      "target": "volatility_breaker"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.__init__",
      "target": "drawdown_breaker"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.__init__",
      "target": "loss_rate_breaker"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.__init__",
      "target": "position_limit_breaker"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.loss_rate_breaker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.loss_rate_breaker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.loss_rate_breaker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.loss_rate_breaker",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.loss_rate_breaker",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.loss_rate_breaker",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.loss_rate_breaker",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.loss_rate_breaker",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.drawdown_breaker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.drawdown_breaker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.drawdown_breaker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.drawdown_breaker",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.drawdown_breaker",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.drawdown_breaker",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.drawdown_breaker",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.drawdown_breaker",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.position_limit_breaker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.position_limit_breaker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.position_limit_breaker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.position_limit_breaker",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.position_limit_breaker",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.position_limit_breaker",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.position_limit_breaker",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.volatility_breaker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.volatility_breaker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.volatility_breaker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.volatility_breaker",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.volatility_breaker",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.volatility_breaker",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.volatility_breaker",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.real_time.circuit_breaker.breakers.volatility_breaker",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.var_position_sizer",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.risk_management.position_sizing.__init__",
      "target": "var_position_sizer"
    },
    {
      "source": "ai_trader.src.main.risk_management.integration.__init__",
      "target": "trading_engine_integration"
    },
    {
      "source": "ai_trader.src.main.risk_management.integration.trading_engine_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.integration.trading_engine_integration",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.integration.trading_engine_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.integration.trading_engine_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.integration.trading_engine_integration",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.integration.trading_engine_integration",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.integration.trading_engine_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker",
      "target": "warnings"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker",
      "target": "unified_limit_checker"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.exposure_limits",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.exposure_limits",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.exposure_limits",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.exposure_limits",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.exposure_limits",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.exposure_limits",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.exposure_limits",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.exposure_limits",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.__init__",
      "target": "liquidity_checks"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.__init__",
      "target": "position_limits"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.__init__",
      "target": "unified_limit_checker"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.__init__",
      "target": "exposure_limits"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.position_limits",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.position_limits",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.position_limits",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.position_limits",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.position_limits",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.position_limits",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.position_limits",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.position_limits",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.position_limits",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.liquidity_checks",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.liquidity_checks",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.liquidity_checks",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.liquidity_checks",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.liquidity_checks",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.liquidity_checks",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker",
      "target": "events"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.unified_limit_checker",
      "target": "checkers"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.config",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.config",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.config",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.config",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.models",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.models",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.models",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.models",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.models",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.models",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.registry",
      "target": "events"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.events",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.events",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.events",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.events",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.events",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.events",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.events",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.events",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.events",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.__init__",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.__init__",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.__init__",
      "target": "unified_limit_checker"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.__init__",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.__init__",
      "target": "events"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.__init__",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.__init__",
      "target": "checkers"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.__init__",
      "target": "templates"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.__init__",
      "target": "utils"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.templates",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.templates",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.templates",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils",
      "target": "events"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.utils",
      "target": "unified_limit_checker"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.__init__",
      "target": "simple_threshold"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.__init__",
      "target": "position_size"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.__init__",
      "target": "drawdown"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.drawdown",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.drawdown",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.drawdown",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.drawdown",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.drawdown",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.drawdown",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.position_size",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.position_size",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.position_size",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.position_size",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.position_size",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.position_size",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.simple_threshold",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.simple_threshold",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.simple_threshold",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.simple_threshold",
      "target": "registry"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.simple_threshold",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.risk_management.pre_trade.unified_limit_checker.checkers.simple_threshold",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "smtplib"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "email"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.risk_management.dashboards.live_risk_dashboard",
      "target": "aiohttp"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_types",
      "target": "decimal"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_types",
      "target": "math"
    },
    {
      "source": "ai_trader.src.main.models.__init__",
      "target": "common"
    },
    {
      "source": "ai_trader.src.main.models.__init__",
      "target": "inference"
    },
    {
      "source": "ai_trader.src.main.models.__init__",
      "target": "monitoring"
    },
    {
      "source": "ai_trader.src.main.models.__init__",
      "target": "outcome_classifier"
    },
    {
      "source": "ai_trader.src.main.models.__init__",
      "target": "outcome_classifier_types"
    },
    {
      "source": "ai_trader.src.main.models.__init__",
      "target": "strategies"
    },
    {
      "source": "ai_trader.src.main.models.__init__",
      "target": "specialists"
    },
    {
      "source": "ai_trader.src.main.models.__init__",
      "target": "training"
    },
    {
      "source": "ai_trader.src.main.models.ml_signal_adapter",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.ml_signal_adapter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.ml_signal_adapter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.ml_signal_adapter",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.ml_signal_adapter",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.models.ml_signal_adapter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_integration",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_integration",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_service",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_service",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_service",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_service",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_service",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.ml_trading_service",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.common",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.common",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.common",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.common",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.common",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.common",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.models.strategies.correlation_strategy",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.correlation_strategy",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.correlation_strategy",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.correlation_strategy",
      "target": "base_universe_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.correlation_strategy",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.correlation_strategy",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.sentiment",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.sentiment",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.sentiment",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.sentiment",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.sentiment",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.sentiment",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.pairs_trading",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.pairs_trading",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.pairs_trading",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.pairs_trading",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.pairs_trading",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.strategies.pairs_trading",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.strategies.pairs_trading",
      "target": "base_universe_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.pairs_trading",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.pairs_trading",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.breakout",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.breakout",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.breakout",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.breakout",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.breakout",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.breakout",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_strategy",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_strategy",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_strategy",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_strategy",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_strategy",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_strategy",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "joblib"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_model_strategy",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "base_universe_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "sentiment"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "mean_reversion"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "ml_momentum"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "breakout"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "correlation_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "pairs_trading"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "regime_adaptive"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "ensemble"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "event_driven"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "hft"
    },
    {
      "source": "ai_trader.src.main.models.strategies.__init__",
      "target": "statistical_arbitrage"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "joblib"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_regression_strategy",
      "target": "types"
    },
    {
      "source": "ai_trader.src.main.models.strategies.statistical_arbitrage",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.statistical_arbitrage",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.statistical_arbitrage",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.statistical_arbitrage",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.statistical_arbitrage",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.strategies.statistical_arbitrage",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.strategies.statistical_arbitrage",
      "target": "base_universe_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.statistical_arbitrage",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.statistical_arbitrage",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.regime_adaptive",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.regime_adaptive",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.regime_adaptive",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.regime_adaptive",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.regime_adaptive",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.strategies.regime_adaptive",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.regime_adaptive",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_momentum",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_momentum",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_momentum",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_momentum",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_momentum",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_momentum",
      "target": "joblib"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_momentum",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ml_momentum",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_universe_strategy",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_universe_strategy",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_universe_strategy",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_universe_strategy",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_universe_strategy",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_universe_strategy",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.base_universe_strategy",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.mean_reversion",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.mean_reversion",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.mean_reversion",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.mean_reversion",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.mean_reversion",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.mean_reversion",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.aggregation",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.aggregation",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.aggregation",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.aggregation",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.aggregation",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.aggregation",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.aggregation",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.__init__",
      "target": "main_ensemble"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.allocation",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.allocation",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.allocation",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.allocation",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.allocation",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.allocation",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.allocation",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.allocation",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.allocation",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "performance"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "allocation"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "aggregation"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "base_strategy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "regime_adaptive"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "hft"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.main_ensemble",
      "target": "ml_momentum"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.performance",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.performance",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.performance",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.performance",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.performance",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.strategies.ensemble.performance",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.models.training.train_pipeline",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.train_pipeline",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.train_pipeline",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.training.train_pipeline",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.training.train_pipeline",
      "target": "joblib"
    },
    {
      "source": "ai_trader.src.main.models.training.train_pipeline",
      "target": "xgboost"
    },
    {
      "source": "ai_trader.src.main.models.training.train_pipeline",
      "target": "lightgbm"
    },
    {
      "source": "ai_trader.src.main.models.training.train_pipeline",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.models.training.training_orchestrator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.training_orchestrator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.training_orchestrator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.training.training_orchestrator",
      "target": "joblib"
    },
    {
      "source": "ai_trader.src.main.models.training.training_orchestrator",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.training.training_orchestrator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.training.training_orchestrator",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.training.training_orchestrator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.training.training_orchestrator",
      "target": "train_pipeline"
    },
    {
      "source": "ai_trader.src.main.models.training.training_orchestrator",
      "target": "pipeline_results"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_stages",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_stages",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_stages",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_stages",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_stages",
      "target": "training_orchestrator"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_stages",
      "target": "pipeline_args"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_stages",
      "target": "pipeline_results"
    },
    {
      "source": "ai_trader.src.main.models.training.model_integration",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.model_integration",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.training.model_integration",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.training.model_integration",
      "target": "joblib"
    },
    {
      "source": "ai_trader.src.main.models.training.model_integration",
      "target": "argparse"
    },
    {
      "source": "ai_trader.src.main.models.training.model_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_results",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_results",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_results",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_results",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_results",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_results",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_results",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_results",
      "target": "tabulate"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_results",
      "target": "matplotlib"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_results",
      "target": "seaborn"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "cross_validation"
    },
    {
      "source": "ai_trader.src.main.models.training.catalyst_training_pipeline",
      "target": "pipeline_results"
    },
    {
      "source": "ai_trader.src.main.models.training.__init__",
      "target": "pipeline_args"
    },
    {
      "source": "ai_trader.src.main.models.training.__init__",
      "target": "pipeline_results"
    },
    {
      "source": "ai_trader.src.main.models.training.__init__",
      "target": "training_orchestrator"
    },
    {
      "source": "ai_trader.src.main.models.training.__init__",
      "target": "pipeline_runner"
    },
    {
      "source": "ai_trader.src.main.models.training.__init__",
      "target": "pipeline_stages"
    },
    {
      "source": "ai_trader.src.main.models.training.__init__",
      "target": "cross_validation"
    },
    {
      "source": "ai_trader.src.main.models.training.__init__",
      "target": "retraining_scheduler"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "argparse"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "pipeline_args"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "pipeline_results"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "pipeline_stages"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_runner",
      "target": "training_orchestrator"
    },
    {
      "source": "ai_trader.src.main.models.training.ensemble",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.ensemble",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.ensemble",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.training.ensemble",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.training.ensemble",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.models.training.ensemble",
      "target": "xgboost"
    },
    {
      "source": "ai_trader.src.main.models.training.ensemble",
      "target": "lightgbm"
    },
    {
      "source": "ai_trader.src.main.models.training.ensemble",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.models.training.ensemble",
      "target": "cross_validation"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "optuna"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "xgboost"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "lightgbm"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.training.hyperparameter_search",
      "target": "matplotlib"
    },
    {
      "source": "ai_trader.src.main.models.training.retraining_scheduler",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.training.retraining_scheduler",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.retraining_scheduler",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.training.retraining_scheduler",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.retraining_scheduler",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.training.retraining_scheduler",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_args",
      "target": "argparse"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_args",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_args",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_args",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_args",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.training.pipeline_args",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "itertools"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "matplotlib"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "seaborn"
    },
    {
      "source": "ai_trader.src.main.models.training.cross_validation",
      "target": "copy"
    },
    {
      "source": "ai_trader.src.main.models.event_driven.news_analytics",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.event_driven.news_analytics",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.event_driven.news_analytics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.event_driven.news_analytics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.event_driven.news_analytics",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.event_driven.news_analytics",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.event_driven.base_event_strategy",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.models.event_driven.base_event_strategy",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.utils.model_loader",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.utils.model_loader",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.utils.model_loader",
      "target": "joblib"
    },
    {
      "source": "ai_trader.src.main.models.utils.model_loader",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.utils.model_loader",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.utils.model_loader",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.utils.model_loader",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.models.specialists.options",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.specialists.options",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.models.specialists.social",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.specialists.social",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.specialists.social",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.specialists.social",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.specialists.social",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.models.specialists.earnings",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.specialists.earnings",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.models.specialists.technical",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.specialists.technical",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.models.specialists.__init__",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.models.specialists.__init__",
      "target": "earnings"
    },
    {
      "source": "ai_trader.src.main.models.specialists.__init__",
      "target": "ensemble"
    },
    {
      "source": "ai_trader.src.main.models.specialists.__init__",
      "target": "news"
    },
    {
      "source": "ai_trader.src.main.models.specialists.__init__",
      "target": "options"
    },
    {
      "source": "ai_trader.src.main.models.specialists.__init__",
      "target": "social"
    },
    {
      "source": "ai_trader.src.main.models.specialists.__init__",
      "target": "technical"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "earnings"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "social"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "technical"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "news"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "options"
    },
    {
      "source": "ai_trader.src.main.models.specialists.ensemble",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.specialists.base",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.specialists.base",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.specialists.base",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.specialists.base",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.models.specialists.base",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.specialists.base",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.specialists.base",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.specialists.base",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.specialists.base",
      "target": "joblib"
    },
    {
      "source": "ai_trader.src.main.models.specialists.base",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.models.specialists.news",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.specialists.news",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.models.hft.microstructure_alpha",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.hft.microstructure_alpha",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.hft.microstructure_alpha",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.hft.microstructure_alpha",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.hft.microstructure_alpha",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.hft.microstructure_alpha",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.hft.microstructure_alpha",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.models.hft.microstructure_alpha",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.models.hft.microstructure_alpha",
      "target": "base_hft_strategy"
    },
    {
      "source": "ai_trader.src.main.models.hft.base_hft_strategy",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.models.hft.base_hft_strategy",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_types",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_types",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_analytics_service",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_analytics_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_analytics_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_management_service",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_management_service",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_management_service",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_management_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_management_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine",
      "target": "prediction_engine_helpers"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine",
      "target": "model_registry_helpers"
    },
    {
      "source": "ai_trader.src.main.models.inference.__init__",
      "target": "model_registry"
    },
    {
      "source": "ai_trader.src.main.models.inference.__init__",
      "target": "prediction_engine"
    },
    {
      "source": "ai_trader.src.main.models.inference.__init__",
      "target": "feature_pipeline"
    },
    {
      "source": "ai_trader.src.main.models.inference.__init__",
      "target": "model_management_service"
    },
    {
      "source": "ai_trader.src.main.models.inference.__init__",
      "target": "model_analytics_service"
    },
    {
      "source": "ai_trader.src.main.models.inference.__init__",
      "target": "prediction_engine_service"
    },
    {
      "source": "ai_trader.src.main.models.inference.__init__",
      "target": "model_registry_enhancements"
    },
    {
      "source": "ai_trader.src.main.models.inference.__init__",
      "target": "model_registry_types"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_enhancements",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_enhancements",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_enhancements",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_enhancements",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_enhancements",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_enhancements",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_enhancements",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_enhancements",
      "target": "math"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_service",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_service",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_service",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_service",
      "target": "prediction_engine"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_service",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_set_definition",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_set_definition",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_set_definition",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_set_definition",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_set_definition",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.__init__",
      "target": "feature_calculator_integrator"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.__init__",
      "target": "feature_set_definition"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.__init__",
      "target": "inference_feature_cache"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.__init__",
      "target": "realtime_data_buffer"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_calculator_integrator",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_calculator_integrator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_calculator_integrator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_calculator_integrator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_calculator_integrator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.feature_calculator_integrator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.inference_feature_cache",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.inference_feature_cache",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.inference_feature_cache",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.inference_feature_cache",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.inference_feature_cache",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.inference_feature_cache",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.inference_feature_cache",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.realtime_data_buffer",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.realtime_data_buffer",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.realtime_data_buffer",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.feature_pipeline_helpers.realtime_data_buffer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.batch_processor",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.batch_processor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.batch_processor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.batch_processor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.batch_processor",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.batch_processor",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.batch_processor",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.batch_processor",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.model_loader_cache",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.model_loader_cache",
      "target": "joblib"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.model_loader_cache",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.model_loader_cache",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.model_loader_cache",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.latency_optimizer",
      "target": "queue"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.cache_manager",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_performance_monitor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_performance_monitor",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_performance_monitor",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_performance_monitor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_performance_monitor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.request_validator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.request_validator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.request_validator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.request_validator",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.request_validator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.request_validator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.request_validator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.__init__",
      "target": "batch_processor"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.__init__",
      "target": "cache_manager"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.__init__",
      "target": "latency_optimizer"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.__init__",
      "target": "request_validator"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_warmup_benchmark",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_warmup_benchmark",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_warmup_benchmark",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_warmup_benchmark",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_warmup_benchmark",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.prediction_warmup_benchmark",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.feature_data_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.feature_data_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.feature_data_manager",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.feature_data_manager",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.feature_data_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.feature_data_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.prediction_engine_helpers.feature_data_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_comparison_analyzer",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_comparison_analyzer",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_comparison_analyzer",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_comparison_analyzer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_comparison_analyzer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_file_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_file_manager",
      "target": "shutil"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_file_manager",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_file_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_file_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.core_predictor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.core_predictor",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.core_predictor",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.core_predictor",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.core_predictor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.core_predictor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.core_predictor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.deployment_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.deployment_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.deployment_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.deployment_manager",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.deployment_manager",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.deployment_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.deployment_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.__init__",
      "target": "deployment_manager"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.__init__",
      "target": "registry_storage_manager"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.__init__",
      "target": "traffic_router"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.__init__",
      "target": "version_controller"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.traffic_router",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.traffic_router",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.traffic_router",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.traffic_router",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.traffic_router",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.traffic_router",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.traffic_router",
      "target": "bisect"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.traffic_router",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.performance_tracker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.performance_tracker",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.performance_tracker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.performance_tracker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.performance_tracker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_archiver",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_archiver",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_archiver",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_archiver",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager",
      "target": "pickle"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager",
      "target": "gzip"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.registry_storage_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_exporter",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_exporter",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.model_exporter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.version_controller",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.version_controller",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.version_controller",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.version_controller",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.version_controller",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.version_controller",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.version_controller",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.models.inference.model_registry_helpers.version_controller",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.__init__",
      "target": "model_monitor"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.__init__",
      "target": "monitor_helpers"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.model_monitor",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.model_monitor",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.model_monitor",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.model_monitor",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.model_monitor",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.model_monitor",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.prediction_data_collector",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.prediction_data_collector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.prediction_data_collector",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.prediction_data_collector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.ab_test_analyzer",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.ab_test_analyzer",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.ab_test_analyzer",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.ab_test_analyzer",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.drift_detector",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.drift_detector",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.drift_detector",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.drift_detector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.__init__",
      "target": "performance_calculator"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.__init__",
      "target": "drift_detector"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.__init__",
      "target": "ml_ops_action_manager"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.__init__",
      "target": "ab_test_analyzer"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.__init__",
      "target": "monitor_reporter"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.monitor_reporter",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.monitor_reporter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.monitor_reporter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.monitor_reporter",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.monitor_reporter",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.monitor_reporter",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.monitor_reporter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.performance_calculator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.performance_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.performance_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.ml_ops_action_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.ml_ops_action_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.ml_ops_action_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.monitoring.monitor_helpers.ml_ops_action_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_data_fetcher",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_data_fetcher",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_data_fetcher",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_data_fetcher",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_data_fetcher",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_data_fetcher",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_data_fetcher",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.entry_price_determiner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.entry_price_determiner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.entry_price_determiner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.entry_price_determiner",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.entry_price_determiner",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.entry_price_determiner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.entry_price_determiner",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.entry_price_determiner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.__init__",
      "target": "outcome_data_fetcher"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.__init__",
      "target": "entry_price_determiner"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.__init__",
      "target": "outcome_metrics_calculator"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.__init__",
      "target": "outcome_labeler"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_metrics_calculator",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_metrics_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_metrics_calculator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_metrics_calculator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_metrics_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_metrics_calculator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_metrics_calculator",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_metrics_calculator",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_metrics_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_labeler",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_labeler",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_labeler",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_labeler",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_reporter",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_reporter",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_reporter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.models.outcome_classifier_helpers.outcome_reporter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.orchestration.__init__",
      "target": "ml_orchestrator"
    },
    {
      "source": "ai_trader.src.main.orchestration.__init__",
      "target": "job_scheduler"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "pytz"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "schedule"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "psutil"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.orchestration.job_scheduler",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.orchestration.ml_orchestrator",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.orchestration.ml_orchestrator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.orchestration.ml_orchestrator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.orchestration.ml_orchestrator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.orchestration.ml_orchestrator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.orchestration.ml_orchestrator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter_factory",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter_factory",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator_factory",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator_factory",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator_factory",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_orchestrator_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.base_scanner",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.scanners.base_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.base_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.base_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.base_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_cache_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_cache_manager",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_cache_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_cache_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_cache_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_cache_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_cache_manager",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.scanners.catalyst_scanner_base",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalyst_scanner_base",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalyst_scanner_base",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalyst_scanner_base",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalyst_scanner_base",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.scanners.catalyst_scanner_base",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalyst_scanner_base",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_adapter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_metrics_collector",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_metrics_collector",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_metrics_collector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_metrics_collector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_metrics_collector",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_metrics_collector",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline_utils",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline_utils",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline_utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline_utils",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline_utils",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline_utils",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline_utils",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline_utils",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline_utils",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_pipeline_utils",
      "target": "sqlalchemy"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_factory_v2",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_factory_v2",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_factory_v2",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.scanner_factory_v2",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.realtime_websocket_stream",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.realtime_websocket_stream",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.realtime_websocket_stream",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.realtime_websocket_stream",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.realtime_websocket_stream",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.realtime_websocket_stream",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.realtime_websocket_stream",
      "target": "websockets"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.realtime_websocket_stream",
      "target": "aiohttp"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.realtime_websocket_stream",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.realtime_websocket_stream",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_5_strategy_affinity",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_5_strategy_affinity",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_5_strategy_affinity",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_5_strategy_affinity",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_5_strategy_affinity",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_5_strategy_affinity",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_5_strategy_affinity",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_5_strategy_affinity",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.__init__",
      "target": "parallel_scanner_engine"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.__init__",
      "target": "layer0_static_universe"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.__init__",
      "target": "layer1_liquidity_filter"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.__init__",
      "target": "layer1_5_strategy_affinity"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.__init__",
      "target": "layer2_catalyst_orchestrator"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.__init__",
      "target": "layer3_premarket_scanner"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.__init__",
      "target": "layer3_realtime_scanner"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.__init__",
      "target": "realtime_websocket_stream"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.parallel_scanner_engine",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.parallel_scanner_engine",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.parallel_scanner_engine",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.parallel_scanner_engine",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.parallel_scanner_engine",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.parallel_scanner_engine",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.parallel_scanner_engine",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.parallel_scanner_engine",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer0_static_universe",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer0_static_universe",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer0_static_universe",
      "target": "re"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer0_static_universe",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer0_static_universe",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer0_static_universe",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer0_static_universe",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer0_static_universe",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer0_static_universe",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer0_static_universe",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_realtime_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_realtime_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_realtime_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_realtime_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_realtime_scanner",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_realtime_scanner",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_realtime_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_realtime_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_realtime_scanner",
      "target": "sqlalchemy"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "sqlalchemy"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "config"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer3_premarket_scanner",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_liquidity_filter",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_liquidity_filter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_liquidity_filter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_liquidity_filter",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_liquidity_filter",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_liquidity_filter",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer1_liquidity_filter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer2_catalyst_orchestrator",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer2_catalyst_orchestrator",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer2_catalyst_orchestrator",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer2_catalyst_orchestrator",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer2_catalyst_orchestrator",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer2_catalyst_orchestrator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer2_catalyst_orchestrator",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.layers.layer2_catalyst_orchestrator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.market_validation_scanner",
      "target": "catalyst_scanner_base"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.earnings_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.earnings_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.earnings_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.earnings_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.earnings_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.earnings_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.earnings_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.earnings_scanner",
      "target": "catalyst_scanner_base"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.news_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.news_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.news_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.news_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.news_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.news_scanner",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.news_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.news_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.news_scanner",
      "target": "catalyst_scanner_base"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.technical_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.technical_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.technical_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.technical_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.technical_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.technical_scanner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.technical_scanner",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.technical_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.technical_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.technical_scanner",
      "target": "catalyst_scanner_base"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.volume_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.volume_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.volume_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.volume_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.volume_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.volume_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.volume_scanner",
      "target": "catalyst_scanner_base"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.social_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.social_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.social_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.social_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.social_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.social_scanner",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.social_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.social_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.social_scanner",
      "target": "catalyst_scanner_base"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.insider_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.insider_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.insider_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.insider_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.insider_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.insider_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.insider_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "scipy"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.intermarket_scanner",
      "target": "catalyst_scanner_base"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.advanced_sentiment_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.advanced_sentiment_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.advanced_sentiment_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.advanced_sentiment_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.advanced_sentiment_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.advanced_sentiment_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.advanced_sentiment_scanner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.advanced_sentiment_scanner",
      "target": "transformers"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.advanced_sentiment_scanner",
      "target": "torch"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.options_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.options_scanner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.options_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.options_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.options_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.options_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.options_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.options_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner",
      "target": "networkx"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.coordinated_activity_scanner",
      "target": "sklearn"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.sector_scanner",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.sector_scanner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.sector_scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.sector_scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.sector_scanner",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.sector_scanner",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.sector_scanner",
      "target": "omegaconf"
    },
    {
      "source": "ai_trader.src.main.scanners.catalysts.sector_scanner",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.jobs.storage_rotation_job",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.jobs.storage_rotation_job",
      "target": "argparse"
    },
    {
      "source": "ai_trader.src.main.jobs.storage_rotation_job",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.jobs.storage_rotation_job",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.jobs.storage_rotation_job",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.jobs.storage_rotation_job",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "fastapi"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "uvicorn"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.database_performance_dashboard",
      "target": "argparse"
    },
    {
      "source": "ai_trader.src.main.monitoring.__init__",
      "target": "dashboards"
    },
    {
      "source": "ai_trader.src.main.monitoring.__init__",
      "target": "metrics"
    },
    {
      "source": "ai_trader.src.main.monitoring.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.__init__",
      "target": "alerts"
    },
    {
      "source": "ai_trader.src.main.monitoring.__init__",
      "target": "performance"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector",
      "target": "psutil"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.__init__",
      "target": "collector"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.__init__",
      "target": "unified_metrics"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector_factory",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.collector_factory",
      "target": "tempfile"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.archive_metrics_collector",
      "target": "shutil"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.metrics.unified_metrics_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.health.unified_health_reporter",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.health.unified_health_reporter",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.monitoring.health.unified_health_reporter",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.health.unified_health_reporter",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.monitoring.health.unified_health_reporter",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.health.unified_health_reporter",
      "target": "statistics"
    },
    {
      "source": "ai_trader.src.main.monitoring.health.unified_health_reporter",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alert_integration",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alert_integration",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alert_integration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alert_integration",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alert_integration",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.alert_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.alert_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.alert_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.alert_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.archive_alert_rules",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.archive_alert_rules",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.archive_alert_rules",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.archive_alert_rules",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.archive_alert_rules",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.__init__",
      "target": "unified_alerts"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alerts",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alerts",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alerts",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alerts",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alerts",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alerts",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alerts",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alerts",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.monitoring.alerts.unified_alerts",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "dash"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "plotly"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.trading_dashboard_v2",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_trading_dashboard",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_trading_dashboard",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_trading_dashboard",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_trading_dashboard",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_trading_dashboard",
      "target": "argparse"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_trading_dashboard",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_trading_dashboard",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_trading_dashboard",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_trading_dashboard",
      "target": "traceback"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "psutil"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "concurrent"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "dash"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "plotly"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.system_dashboard_v2",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.__init__",
      "target": "trading_dashboard_v2"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.__init__",
      "target": "system_dashboard_v2"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.__init__",
      "target": "dashboard_manager"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "subprocess"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "signal"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.dashboard_manager",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_system_dashboard",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_system_dashboard",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_system_dashboard",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_system_dashboard",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_system_dashboard",
      "target": "argparse"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_system_dashboard",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_system_dashboard",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_system_dashboard",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.v2.run_system_dashboard",
      "target": "traceback"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.widgets.__init__",
      "target": "archive_widget"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.widgets.archive_widget",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.widgets.archive_widget",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.widgets.archive_widget",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.widgets.archive_widget",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.widgets.archive_widget",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.dashboards.widgets.archive_widget",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.__init__",
      "target": "performance_tracker"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.__init__",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.__init__",
      "target": "calculators"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.__init__",
      "target": "alerts"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "time"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "psutil"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "calculators"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.performance_tracker",
      "target": "alerts"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.system_record",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.system_record",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.system_record",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.system_record",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.alert_models",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.alert_models",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.alert_models",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.performance_metrics",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.performance_metrics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.performance_metrics",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.performance_metrics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.__init__",
      "target": "performance_metrics"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.__init__",
      "target": "trade_record"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.__init__",
      "target": "system_record"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.__init__",
      "target": "alert_models"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.trade_record",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.trade_record",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.trade_record",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.models.trade_record",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.alerts.alert_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.alerts.alert_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.alerts.alert_manager",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.alerts.alert_manager",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.alerts.__init__",
      "target": "alert_manager"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.risk_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.risk_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.risk_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.return_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.__init__",
      "target": "return_calculator"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.__init__",
      "target": "risk_calculator"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.__init__",
      "target": "risk_adjusted_calculator"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.__init__",
      "target": "trading_metrics_calculator"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.trading_metrics_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.trading_metrics_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.trading_metrics_calculator",
      "target": "models"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.risk_adjusted_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.risk_adjusted_calculator",
      "target": "numpy"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.risk_adjusted_calculator",
      "target": "return_calculator"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.risk_adjusted_calculator",
      "target": "risk_calculator"
    },
    {
      "source": "ai_trader.src.main.monitoring.performance.calculators.risk_adjusted_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.types.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.types.__init__",
      "target": "event_types"
    },
    {
      "source": "ai_trader.src.main.events.types.event_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.events.types.event_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.types.event_types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.events.types.event_types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.types.event_types",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_registry",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_registry",
      "target": "threading"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_registry",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_registry",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.core.__init__",
      "target": "event_bus"
    },
    {
      "source": "ai_trader.src.main.events.core.__init__",
      "target": "event_bus_factory"
    },
    {
      "source": "ai_trader.src.main.events.core.__init__",
      "target": "event_bus_registry"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_factory",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_factory",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_factory",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_factory",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.event_bus_stats_tracker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.event_bus_stats_tracker",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.event_bus_stats_tracker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.__init__",
      "target": "event_bus_stats_tracker"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.__init__",
      "target": "event_history_manager"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.__init__",
      "target": "dead_letter_queue_manager"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.dead_letter_queue_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.dead_letter_queue_manager",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.dead_letter_queue_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.dead_letter_queue_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.dead_letter_queue_manager",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.dead_letter_queue_manager",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.dead_letter_queue_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.event_history_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.event_history_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.event_history_manager",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.events.core.event_bus_helpers.event_history_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.publishers.__init__",
      "target": "scanner_event_publisher"
    },
    {
      "source": "ai_trader.src.main.events.publishers.scanner_event_publisher",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.publishers.scanner_event_publisher",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.publishers.scanner_event_publisher",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.backfill_event_handler",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.events.handlers.backfill_event_handler",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.backfill_event_handler",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.backfill_event_handler",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.events.handlers.backfill_event_handler",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.events.handlers.backfill_event_handler",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.events.handlers.backfill_event_handler",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.__init__",
      "target": "scanner_feature_bridge"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_handler",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_handler",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_handler",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_handler",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_handler",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_feature_bridge",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_feature_bridge",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_feature_bridge",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_feature_bridge",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_feature_bridge",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_feature_bridge",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.event_driven_engine",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.events.handlers.event_driven_engine",
      "target": "sys"
    },
    {
      "source": "ai_trader.src.main.events.handlers.event_driven_engine",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.event_driven_engine",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.event_driven_engine",
      "target": "pathlib"
    },
    {
      "source": "ai_trader.src.main.events.handlers.event_driven_engine",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.event_driven_engine",
      "target": "typer"
    },
    {
      "source": "ai_trader.src.main.events.handlers.event_driven_engine",
      "target": "signal"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.deduplication_tracker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.deduplication_tracker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.deduplication_tracker",
      "target": "hashlib"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.deduplication_tracker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_handler_stats_tracker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_handler_stats_tracker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_types",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.request_queue_manager",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.request_queue_manager",
      "target": "heapq"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.request_queue_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.request_queue_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.request_queue_manager",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.request_queue_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_group_mapper",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_group_mapper",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_group_mapper",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.__init__",
      "target": "feature_computation_worker"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.__init__",
      "target": "feature_group_mapper"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.__init__",
      "target": "feature_handler_stats_tracker"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.__init__",
      "target": "request_queue_manager"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.__init__",
      "target": "feature_types"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.__init__",
      "target": "queue_types"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.__init__",
      "target": "deduplication_tracker"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.__init__",
      "target": "feature_config"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_config",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_config",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_computation_worker",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_computation_worker",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_computation_worker",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_computation_worker",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_computation_worker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_computation_worker",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.feature_computation_worker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.queue_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.queue_types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.queue_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.queue_types",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.events.handlers.feature_pipeline_helpers.queue_types",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.feature_request_batcher",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.feature_request_batcher",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.feature_request_batcher",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.feature_request_batcher",
      "target": "collections"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.feature_request_batcher",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.__init__",
      "target": "alert_feature_mapper"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.__init__",
      "target": "bridge_stats_tracker"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.__init__",
      "target": "feature_request_batcher"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.__init__",
      "target": "priority_calculator"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.__init__",
      "target": "request_dispatcher"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.priority_calculator",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.priority_calculator",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.priority_calculator",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.priority_calculator",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.alert_feature_mapper",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.alert_feature_mapper",
      "target": "yaml"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.alert_feature_mapper",
      "target": "os"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.alert_feature_mapper",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.bridge_stats_tracker",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.bridge_stats_tracker",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.request_dispatcher",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.request_dispatcher",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.handlers.scanner_bridge_helpers.request_dispatcher",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.events.validation.event_schemas",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.events.validation.event_schemas",
      "target": "jsonschema"
    },
    {
      "source": "ai_trader.src.main.events.validation.event_schemas",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.universe.universe_manager",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.universe.universe_manager",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.universe.universe_manager",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.universe.universe_manager",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.universe.cli",
      "target": "asyncio"
    },
    {
      "source": "ai_trader.src.main.universe.cli",
      "target": "logging"
    },
    {
      "source": "ai_trader.src.main.universe.cli",
      "target": "typer"
    },
    {
      "source": "ai_trader.src.main.universe.cli",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.universe.cli",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.alerts",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.alerts",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.alerts",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.interfaces.alerts",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.alerts",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.backtesting",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.backtesting",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.interfaces.backtesting",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.backtesting",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.backtesting",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.metrics",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.metrics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.metrics",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.metrics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.ingestion",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.ingestion",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.ingestion",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.interfaces.ingestion",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.ingestion",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.database",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.database",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.database",
      "target": "contextlib"
    },
    {
      "source": "ai_trader.src.main.interfaces.database",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.__init__",
      "target": "calculators"
    },
    {
      "source": "ai_trader.src.main.interfaces.__init__",
      "target": "repositories"
    },
    {
      "source": "ai_trader.src.main.interfaces.__init__",
      "target": "backtesting"
    },
    {
      "source": "ai_trader.src.main.interfaces.__init__",
      "target": "database"
    },
    {
      "source": "ai_trader.src.main.interfaces.__init__",
      "target": "ingestion"
    },
    {
      "source": "ai_trader.src.main.interfaces.storage",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.storage",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.storage",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.storage",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.interfaces.storage",
      "target": "repositories"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.calculators",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.calculators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.calculators",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.interfaces.calculators",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.calculators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.scanners",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.scanners",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.scanners",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.scanners",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.interfaces.scanners",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.ingestion",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.ingestion",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.ingestion",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.ingestion",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.ingestion",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.monitoring",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.monitoring",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.monitoring",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.monitoring",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.monitoring",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.__init__",
      "target": "orchestration"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.__init__",
      "target": "processing"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.__init__",
      "target": "historical"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.__init__",
      "target": "ingestion"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.__init__",
      "target": "monitoring"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.historical",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.historical",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.historical",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.historical",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.historical",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.orchestration",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.orchestration",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.orchestration",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.orchestration",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.orchestration",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.processing",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.processing",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.processing",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.processing",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.processing",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.validation",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.validation",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.validation",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.validation",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.data_pipeline.validation",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.scanner",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.scanner",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.scanner",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.scanner",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.scanner",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.social",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.social",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.social",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.social",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.social",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.company",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.company",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.company",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.company",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.company",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.sentiment",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.sentiment",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.sentiment",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.sentiment",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.sentiment",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.financials",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.financials",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.financials",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.financials",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.financials",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.__init__",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.__init__",
      "target": "market_data"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.__init__",
      "target": "company"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.__init__",
      "target": "feature"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.__init__",
      "target": "sentiment"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.__init__",
      "target": "financials"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.__init__",
      "target": "scanner"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.__init__",
      "target": "social"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.__init__",
      "target": "news"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.feature",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.feature",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.feature",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.feature",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.feature",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.market_data",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.market_data",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.market_data",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.market_data",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.market_data",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.base",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.base",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.base",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.base",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.base",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.base",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.news",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.news",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.news",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.news",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.repositories.news",
      "target": "base"
    },
    {
      "source": "ai_trader.src.main.interfaces.monitoring.__init__",
      "target": "dashboard"
    },
    {
      "source": "ai_trader.src.main.interfaces.monitoring.dashboard",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.monitoring.dashboard",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.monitoring.dashboard",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.monitoring.dashboard",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_handlers",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.__init__",
      "target": "event_bus"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.__init__",
      "target": "event_bus_provider"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.__init__",
      "target": "event_types"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.__init__",
      "target": "event_handlers"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_bus_provider",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_bus_provider",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_bus_provider",
      "target": "event_bus"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.time_utils",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.time_utils",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_bus",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_bus",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_types",
      "target": "dataclasses"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_types",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_types",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_types",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_types",
      "target": "uuid"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_types",
      "target": "time_utils"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_types",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.events.event_types",
      "target": "json"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.metrics",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.metrics",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.metrics",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.metrics",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.metrics",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.metrics",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.config",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.config",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.config",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.config",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.config",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.config",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.validators",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.validators",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.validators",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.validators",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.validators",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.__init__",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.rules",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.rules",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.rules",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.rules",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.rules",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.rules",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.pipeline",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.pipeline",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.pipeline",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.pipeline",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.pipeline",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.pipeline",
      "target": "main"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.quality",
      "target": "abc"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.quality",
      "target": "typing"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.quality",
      "target": "datetime"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.quality",
      "target": "enum"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.quality",
      "target": "pandas"
    },
    {
      "source": "ai_trader.src.main.interfaces.validation.quality",
      "target": "main"
    }
  ]
}
